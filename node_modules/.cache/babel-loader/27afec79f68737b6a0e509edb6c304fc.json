{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bc/Desktop/New Nivid/Leo-Project/src/components/ServiceDescription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NumericInput from \"react-numeric-input\";\nimport { useAuth } from \"../context/userContext\"; // context\n\nimport ReactLoading from \"react-loading\";\nimport { ButtonLarge } from \"./utilities/Buttons\";\nimport Image from \"./utilities/Image\";\nimport ServiceConfirmModal from \"./ServiceConfirmModal\";\nimport CustomSelect from \"../components/utilities/CustomSelect\";\nimport { ReactComponent as CheckTypeImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/checked-type.svg\";\nimport FullScreenImg from \"./FullScreenImg\";\n\nconst ServiceDescription = props => {\n  _s();\n\n  const item = props.item;\n  const handleAddToCard = props.handleAddToCard;\n  const display = props.display;\n  const isMobile = props.isMobile;\n  const handleCloseService = props.handleCloseService;\n  const {\n    event,\n    getServiceQuantityInCard,\n    loadingButtonAddToCard,\n    setLoadingButtonAddToCard\n  } = useAuth(); // context\n\n  const [activePathImage, setActivePathImage] = useState();\n  const [quantity, setQuantity] = useState(1);\n  const [variation, setVariation] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [currentQuantity, setCurrentQuantity] = useState(0);\n  const [isFullscreenImgOpen, setIsFullscreenImgOpen] = useState(false);\n  useEffect(() => {\n    function getActivePath() {\n      setActivePathImage(item.images[0].url);\n      setQuantity(1);\n      setLoadingButtonAddToCard(false);\n    }\n\n    item.variations && item.variations.length > 0 ? setVariation(item.variations[0].name) : setVariation(\"\");\n    if (item.images) getActivePath();\n  }, [item]);\n\n  function handleImageClick(path) {\n    setActivePathImage(path);\n  }\n\n  function preHandleAddToCard(note, quantity) {\n    handleCloseModal();\n    const currentQuantity = getServiceQuantityInCard(item.id);\n    const total = (quantity - currentQuantity) * item.price;\n    setError(\"\");\n    handleAddToCard(quantity, variation, note);\n  }\n\n  function organizeImg() {\n    if (item.images) {\n      return Object.entries(item.images).map(([key, item]) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleImageClick(item.url),\n          className: item.url === activePathImage ? \"active verticalImgItem\" : \"verticalImgItem\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            url: item.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  }\n\n  function openModal(e, quantity) {\n    e.stopPropagation();\n    setLoadingButtonAddToCard(true);\n    setCurrentQuantity(quantity);\n    setIsModalOpened(true);\n  }\n\n  function handleCloseModal() {\n    setLoadingButtonAddToCard(false);\n    setIsModalOpened(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: display ? \"serviceDescriptionContainer active\" : \"serviceDescriptionContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"serviceDescription\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleCloseService(),\n        className: \"closeButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serviceDescriptionImgAndDetails\",\n        children: [!isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serviceDescriptionLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verticalLineImg\",\n            children: organizeImg()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activeImageItem\",\n            onClick: () => setIsFullscreenImgOpen(true),\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              url: activePathImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serviceDescriptionRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: [item.name && item.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.foodType && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(CheckTypeImg, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this), item.foodType]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), item.variations && item.variations.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: variation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.variations && item.variations.length > 0 ? variation === \"\" ? item.variations[0].price : item.variations.filter(vari => vari.name === variation).length > 0 && item.variations.filter(vari => vari.name === variation)[0].price + \"€\" : item.price && item.price + \"€\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: e => e.stopPropagation(),\n            className: \"smallTitle\",\n            children: \"Description de l'offre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: e => e.stopPropagation(),\n            children: item.description && item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serviceDescriptionActionContainer\",\n        children: [!isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoServiceDescriptionAction\",\n          children: item.id && getServiceQuantityInCard(item.id) !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"D\\xE9j\\xE0 dans votre panier\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"x \", getServiceQuantityInCard(item.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMessage\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this), item.variations && item.variations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          className: \"serviceDescriptionAction\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"smallTitle\",\n              children: \"Variante:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              currentVariation: variation,\n              callback: e => setVariation(e.target.value),\n              options: item.variations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => e.stopPropagation(),\n          className: \"serviceDescriptionAction\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"smallTitle\",\n              children: \"Quantit\\xE9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NumericInput, {\n              className: \"form-control\",\n              value: quantity,\n              min: 1,\n              max: 20,\n              step: 1,\n              precision: 0,\n              size: 4,\n              mobile: true,\n              onChange: value => setQuantity(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonLarge, {\n            onClick: e => openModal(e, quantity),\n            color: \"orange\",\n            value: loadingButtonAddToCard ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n              className: \"loadingSpinnerButton\",\n              type: \"spin\",\n              color: \"white\",\n              height: 23,\n              width: 23\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this) : \"Ajouter au panier\",\n            marginTop: \"10px\",\n            disabled: loadingButtonAddToCard ? \"disabled\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(ServiceConfirmModal, {\n      item: item,\n      variation: variation,\n      closeCallback: handleCloseModal,\n      confirmCallback: note => preHandleAddToCard(note, quantity)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), isFullscreenImgOpen && /*#__PURE__*/_jsxDEV(FullScreenImg, {\n      imgpath: activePathImage,\n      closeCallback: () => setIsFullscreenImgOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServiceDescription, \"c4rDZS0//dwk8RpAWEP3WkjS7rE=\", false, function () {\n  return [useAuth];\n});\n\n_c = ServiceDescription;\nexport default ServiceDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceDescription\");","map":{"version":3,"sources":["/Users/bc/Desktop/New Nivid/Leo-Project/src/components/ServiceDescription.js"],"names":["React","useEffect","useState","NumericInput","useAuth","ReactLoading","ButtonLarge","Image","ServiceConfirmModal","CustomSelect","FullScreenImg","ServiceDescription","props","item","handleAddToCard","display","isMobile","handleCloseService","event","getServiceQuantityInCard","loadingButtonAddToCard","setLoadingButtonAddToCard","activePathImage","setActivePathImage","quantity","setQuantity","variation","setVariation","error","setError","isModalOpened","setIsModalOpened","currentQuantity","setCurrentQuantity","isFullscreenImgOpen","setIsFullscreenImgOpen","getActivePath","images","url","variations","length","name","handleImageClick","path","preHandleAddToCard","note","handleCloseModal","id","total","price","organizeImg","Object","entries","map","key","openModal","e","stopPropagation","foodType","filter","vari","description","marginBottom","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NumericInput from \"react-numeric-input\";\nimport { useAuth } from \"../context/userContext\"; // context\nimport ReactLoading from \"react-loading\";\n\nimport { ButtonLarge } from \"./utilities/Buttons\";\nimport Image from \"./utilities/Image\";\nimport ServiceConfirmModal from \"./ServiceConfirmModal\";\n\nimport CustomSelect from \"../components/utilities/CustomSelect\";\n\nimport { ReactComponent as CheckTypeImg } from \"../images/checked-type.svg\";\n\nimport FullScreenImg from \"./FullScreenImg\";\n\nconst ServiceDescription = (props) => {\n  const item = props.item;\n  const handleAddToCard = props.handleAddToCard;\n  const display = props.display;\n  const isMobile = props.isMobile;\n  const handleCloseService = props.handleCloseService;\n\n  const {\n    event,\n    getServiceQuantityInCard,\n    loadingButtonAddToCard,\n    setLoadingButtonAddToCard,\n  } = useAuth(); // context\n\n  const [activePathImage, setActivePathImage] = useState();\n  const [quantity, setQuantity] = useState(1);\n  const [variation, setVariation] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [currentQuantity, setCurrentQuantity] = useState(0);\n  const [isFullscreenImgOpen, setIsFullscreenImgOpen] = useState(false);\n\n  useEffect(() => {\n    function getActivePath() {\n      setActivePathImage(item.images[0].url);\n      setQuantity(1);\n      setLoadingButtonAddToCard(false);\n    }\n    item.variations && item.variations.length > 0\n      ? setVariation(item.variations[0].name)\n      : setVariation(\"\");\n    if (item.images) getActivePath();\n  }, [item]);\n\n  function handleImageClick(path) {\n    setActivePathImage(path);\n  }\n\n  function preHandleAddToCard(note, quantity) {\n    handleCloseModal();\n    const currentQuantity = getServiceQuantityInCard(item.id);\n    const total = (quantity - currentQuantity) * item.price;\n    setError(\"\");\n    handleAddToCard(quantity, variation, note);\n  }\n\n  function organizeImg() {\n    if (item.images) {\n      return Object.entries(item.images).map(([key, item]) => {\n        return (\n          <div\n            key={key}\n            onClick={() => handleImageClick(item.url)}\n            className={\n              item.url === activePathImage\n                ? \"active verticalImgItem\"\n                : \"verticalImgItem\"\n            }\n          >\n            <Image url={item.url} />\n          </div>\n        );\n      });\n    }\n  }\n\n  function openModal(e, quantity) {\n    e.stopPropagation();\n    setLoadingButtonAddToCard(true);\n    setCurrentQuantity(quantity);\n    setIsModalOpened(true);\n  }\n\n  function handleCloseModal() {\n    setLoadingButtonAddToCard(false);\n    setIsModalOpened(false);\n  }\n\n  return (\n    <div\n      className={\n        display\n          ? \"serviceDescriptionContainer active\"\n          : \"serviceDescriptionContainer\"\n      }\n    >\n      <div className=\"serviceDescription\">\n        <span\n          onClick={() => handleCloseService()}\n          className=\"closeButton\"\n        ></span>\n        <div className=\"serviceDescriptionImgAndDetails\">\n          {!isMobile && (\n            <div className=\"serviceDescriptionLeft\">\n              <div className=\"verticalLineImg\">{organizeImg()}</div>\n              <div className=\"activeImageItem\" onClick={() => setIsFullscreenImgOpen(true)}>\n                <Image url={activePathImage} />\n              </div>\n            </div>\n          )}\n          <div className=\"serviceDescriptionRight\">\n            <div>\n              <p className=\"title\">\n                {item.name && item.name}{\" \"}\n                <span>\n                  {item.foodType && (\n                    <>\n                      <CheckTypeImg />\n                      {item.foodType}\n                    </>\n                  )}\n                </span>\n              </p>\n              {item.variations && item.variations.length > 0 && (\n                <p className=\"subtitle\">{variation}</p>\n              )}\n              <span>\n                {item.variations && item.variations.length > 0\n                  ? variation === \"\"\n                    ? item.variations[0].price\n                    : item.variations.filter((vari) => vari.name === variation)\n                        .length > 0 &&\n                      item.variations.filter(\n                        (vari) => vari.name === variation\n                      )[0].price + \"€\"\n                  : item.price && item.price + \"€\"}\n              </span>\n            </div>\n            <p onClick={(e) => e.stopPropagation()} className=\"smallTitle\">\n              Description de l'offre:\n            </p>\n            <p onClick={(e) => e.stopPropagation()}>\n              {item.description && item.description}\n            </p>\n          </div>\n        </div>\n        <div className=\"serviceDescriptionActionContainer\">\n          {!isMobile && (\n            <div className=\"infoServiceDescriptionAction\">\n              {item.id && getServiceQuantityInCard(item.id) !== 0 && (\n                <p>\n                  Déjà dans votre panier{\" \"}\n                  <span>x {getServiceQuantityInCard(item.id)}</span>\n                </p>\n              )}\n            </div>\n          )}\n          {error.length > 0 && <p className=\"errorMessage\">{error}</p>}\n\n          {item.variations && item.variations.length > 0 && (\n            <div\n              onClick={(e) => e.stopPropagation()}\n              className=\"serviceDescriptionAction\"\n            >\n              <div style={{ marginBottom: \"20px\" }}>\n                <p className=\"smallTitle\">Variante:</p>\n                <CustomSelect\n                  currentVariation={variation}\n                  callback={(e) => setVariation(e.target.value)}\n                  options={item.variations}\n                />\n              </div>\n            </div>\n          )}\n\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"serviceDescriptionAction\"\n          >\n            <div>\n              <p className=\"smallTitle\">Quantité:</p>\n              <NumericInput\n                className=\"form-control\"\n                value={quantity}\n                min={1}\n                max={20}\n                step={1}\n                precision={0}\n                size={4}\n                mobile\n                onChange={(value) => setQuantity(value)}\n              />\n            </div>\n            <ButtonLarge\n              onClick={(e) => openModal(e, quantity)}\n              color=\"orange\"\n              value={\n                loadingButtonAddToCard ? (\n                  <ReactLoading\n                    className=\"loadingSpinnerButton\"\n                    type=\"spin\"\n                    color=\"white\"\n                    height={23}\n                    width={23}\n                  />\n                ) : (\n                  \"Ajouter au panier\"\n                )\n              }\n              marginTop=\"10px\"\n              disabled={loadingButtonAddToCard ? \"disabled\" : null}\n            />\n          </div>\n        </div>\n      </div>\n      {isModalOpened && (\n        <ServiceConfirmModal\n          item={item}\n          variation={variation}\n          closeCallback={handleCloseModal}\n          confirmCallback={(note) => preHandleAddToCard(note, quantity)}\n        />\n      )}\n\n      {isFullscreenImgOpen && <FullScreenImg imgpath={activePathImage} closeCallback={() => setIsFullscreenImgOpen(false)} />}\n    </div>\n  );\n};\nexport default ServiceDescription;\n"]},"metadata":{},"sourceType":"module"}