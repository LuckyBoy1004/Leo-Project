{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bonnieclyde/Desktop/Copie de Nivid (1)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/bonnieclyde/Desktop/Copie de Nivid (1)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/bonnieclyde/Desktop/Copie de Nivid (1)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bonnieclyde/Desktop/Copie de Nivid (1)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{useAuth}from\"../context/userContext\";// context\nimport{useHistory}from'react-router-dom';import{useLocation}from\"react-router-dom\";import{ButtonRoundLarge}from'../components/utilities/Buttons';import ServiceDescription from\"../components/ServiceDescription\";var PaymentConfirm=function PaymentConfirm(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPayment=_useState2[0],setIsPayment=_useState2[1];var history=useHistory();var _useAuth=useAuth(),user=_useAuth.user,event=_useAuth.event,setCurrentStepProcess=_useAuth.setCurrentStepProcess,addSalesInDB=_useAuth.addSalesInDB,updateEventStatus=_useAuth.updateEventStatus,getSalesOfSellerIdFromDB=_useAuth.getSalesOfSellerIdFromDB,sendInBlue_sendRecapToUserAfterPayment=_useAuth.sendInBlue_sendRecapToUserAfterPayment,sendInBlue_sendNewSaleToSeller=_useAuth.sendInBlue_sendNewSaleToSeller,getEmailOfSellerWithUid=_useAuth.getEmailOfSellerWithUid,getSaleTokenOfEventFromDb=_useAuth.getSaleTokenOfEventFromDb,checkoutCheck=_useAuth.checkoutCheck;// context\nvar search=useLocation().search;var eventId=new URLSearchParams(search).get('id');var saleToken=new URLSearchParams(search).get('token');var session_id=new URLSearchParams(search).get('session_id');setCurrentStepProcess(31);useEffect(function(){if(eventId===undefined||eventId.length<7||eventId!==event.id)return history.push('/dashboard');if(event&&event.status&&event.status!==\"creating\")return history.push('/dashboard');getSaleTokenOfEventFromDb().then(function(token){return saleToken!==token&&history.push('/dashboard');});checkoutCheck(session_id).then(function(res){return res.status===\"paid\"?createSales(res.amount,res.id):history.push('/dashboard');});},[]);function createSales(_x,_x2){return _createSales.apply(this,arguments);}function _createSales(){_createSales=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount,stripeId){var sellersUniqueIds,finalSales;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getSellersIds();case 2:sellersUniqueIds=_context2.sent;finalSales=[];// On map sur les ids triés, puis on trie les services pour les attribuer au bon seller\nsellersUniqueIds.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(uniqueId){var sellerServices,newSellerServices,sellerSales,total,sellersEmail;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:sellerServices=event.choosedServices.filter(function(service){return service.sellerId===uniqueId;});// On modifie les services dans le tableau pour leur donner la structure dont on a besoin\nnewSellerServices=[];sellerServices.forEach(function(service){var newService={id:service.id,quantity:service.quantity,price:service.price,image:service.images[0].url,name:service.name,variations:service.variations,variation:service.variation,note:service.note};newSellerServices=[].concat(_toConsumableArray(newSellerServices),[newService]);});_context.next=5;return getSalesOfSellerIdFromDB(uniqueId);case 5:sellerSales=_context.sent;total=0;newSellerServices.forEach(function(service){return service.variations&&service.variations.length>0?total+=service.variations.filter(function(vari){return vari.name===service.variation;})[0].price*service.quantity:total+=service.price*service.quantity;});// On structure le sale comme on l'a décidé\nfinalSales=[].concat(_toConsumableArray(finalSales),[{eventID:event.id,sellerID:uniqueId,userID:user.uid,eventDate:event.date,choosedServices:newSellerServices,paid:amount,date:Date.now(),// à recevoir de stripe\nstatus:\"pending\",transactionID:stripeId,total:total,id:sellerSales.length+1,people:event.people,placeSize:event.placeSize,startAt:event.startAt,endAt:event.endAt,sellerNote:\"\"}]);_context.next=11;return getEmailOfSellerWithUid(uniqueId);case 11:sellersEmail=_context.sent;sendInBlue_sendNewSaleToSeller(sellersEmail,newSellerServices,event);// Cette fonction est appelée pour le moment au chargement de la pag mais il faudra une confirmation de stripe pour l'appeler.\nif(!(sellersUniqueIds.length===finalSales.length)){_context.next=18;break;}_context.next=16;return addSalesInDB(finalSales);case 16:updateEventStatus(\"pending\");sendInBlue_sendRecapToUserAfterPayment(user.email,finalSales,event);case 18:case\"end\":return _context.stop();}}},_callee);}));return function(_x3){return _ref.apply(this,arguments);};}());case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _createSales.apply(this,arguments);}function getSellersIds(){return _getSellersIds.apply(this,arguments);}function _getSellersIds(){_getSellersIds=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var sellersIds,sellersUniqueIds;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// On récupère tous les ids des sellers présents dans tous les services puis on les trie\nsellersIds=[];event.choosedServices.map(function(service){return sellersIds.push(service.sellerId);});sellersUniqueIds=sellersIds.reduce(function(acc,current){var isFound=acc.find(function(item){return item===current;});return!isFound?acc=[].concat(_toConsumableArray(acc),[current]):acc;},[]);return _context3.abrupt(\"return\",sellersUniqueIds);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _getSellersIds.apply(this,arguments);}return!isPayment&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"paymentConfirmContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"paymentConfirmTop\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\",src:\"/images/wouhou.png\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Votre paiement a bien \\xE9t\\xE9 re\\xE7u, merci !\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Vous allez recevoir d'ici peu un mail de confirmation\"}),/*#__PURE__*/_jsx(ButtonRoundLarge,{onClick:function onClick(){return history.push('/dashboard');},color:\"orange\",value:\"Voir mon \\xE9v\\xE8nement\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"paymentConfirmBottom\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Vous pouvez aussi d\\xE9s \\xE0 pr\\xE9sent inviter des personnes \\xE0 votre \\xE9v\\xE8nement !\"}),/*#__PURE__*/_jsx(ButtonRoundLarge,{onClick:function onClick(){return history.push('/creer-mon-evenement/etape-3/invitations');},color:\"blue\",value:\"Pr\\xE9parer mes invitations\"})]})]})});};export default PaymentConfirm;","map":{"version":3,"sources":["/Users/bonnieclyde/Desktop/Copie de Nivid (1)/src/pages/paymentConfirm.js"],"names":["React","useState","useEffect","useAuth","useHistory","useLocation","ButtonRoundLarge","ServiceDescription","PaymentConfirm","isPayment","setIsPayment","history","user","event","setCurrentStepProcess","addSalesInDB","updateEventStatus","getSalesOfSellerIdFromDB","sendInBlue_sendRecapToUserAfterPayment","sendInBlue_sendNewSaleToSeller","getEmailOfSellerWithUid","getSaleTokenOfEventFromDb","checkoutCheck","search","eventId","URLSearchParams","get","saleToken","session_id","undefined","length","id","push","status","then","token","res","createSales","amount","stripeId","getSellersIds","sellersUniqueIds","finalSales","map","uniqueId","sellerServices","choosedServices","filter","service","sellerId","newSellerServices","forEach","newService","quantity","price","image","images","url","name","variations","variation","note","sellerSales","total","vari","eventID","sellerID","userID","uid","eventDate","date","paid","Date","now","transactionID","people","placeSize","startAt","endAt","sellerNote","sellersEmail","email","sellersIds","reduce","acc","current","isFound","find","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/userContext\"; // context\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { ButtonRoundLarge } from '../components/utilities/Buttons'\r\nimport ServiceDescription from \"../components/ServiceDescription\";\r\n\r\n\r\nconst PaymentConfirm = () => {\r\n\r\n    const [isPayment, setIsPayment] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const { user,\r\n        event,\r\n        setCurrentStepProcess,\r\n        addSalesInDB,\r\n        updateEventStatus,\r\n        getSalesOfSellerIdFromDB,\r\n        sendInBlue_sendRecapToUserAfterPayment,\r\n        sendInBlue_sendNewSaleToSeller,\r\n        getEmailOfSellerWithUid,\r\n        getSaleTokenOfEventFromDb,\r\n        checkoutCheck } = useAuth() // context\r\n\r\n    const search = useLocation().search\r\n    const eventId = new URLSearchParams(search).get('id')\r\n    const saleToken = new URLSearchParams(search).get('token')\r\n    const session_id = new URLSearchParams(search).get('session_id')\r\n\r\n    setCurrentStepProcess(31)\r\n\r\n    useEffect(() => {\r\n        if (eventId === undefined || eventId.length < 7 || eventId !== event.id) return history.push('/dashboard')\r\n        if (event && event.status && event.status !== \"creating\") return history.push('/dashboard')\r\n\r\n        getSaleTokenOfEventFromDb().then(token => {\r\n            return saleToken !== token && history.push('/dashboard')\r\n        })\r\n        checkoutCheck(session_id)\r\n            .then(res => {\r\n                return res.status === \"paid\" ? createSales(res.amount, res.id) : history.push('/dashboard')\r\n            })\r\n    }, [])\r\n\r\n    async function createSales(amount, stripeId) {\r\n        const sellersUniqueIds = await getSellersIds()\r\n        let finalSales = []\r\n        // On map sur les ids triés, puis on trie les services pour les attribuer au bon seller\r\n        sellersUniqueIds.map(async uniqueId => {\r\n            const sellerServices = event.choosedServices.filter(service => service.sellerId === uniqueId)\r\n\r\n            // On modifie les services dans le tableau pour leur donner la structure dont on a besoin\r\n            let newSellerServices = []\r\n            sellerServices.forEach(service => {\r\n                const newService = {\r\n                    id: service.id,\r\n                    quantity: service.quantity,\r\n                    price: service.price,\r\n                    image: service.images[0].url,\r\n                    name: service.name,\r\n                    variations: service.variations,\r\n                    variation: service.variation,\r\n                    note: service.note\r\n                }\r\n                newSellerServices = [...newSellerServices, newService]\r\n            })\r\n            const sellerSales = await getSalesOfSellerIdFromDB(uniqueId)\r\n            let total = 0\r\n            newSellerServices.forEach(service =>\r\n                (service.variations && service.variations.length > 0) ? \r\n                total += service.variations.filter(vari => vari.name === service.variation)[0].price * service.quantity\r\n                : total += service.price * service.quantity\r\n            )\r\n\r\n            // On structure le sale comme on l'a décidé\r\n            finalSales = [...finalSales, {\r\n                eventID: event.id,\r\n                sellerID: uniqueId,\r\n                userID: user.uid,\r\n                eventDate: event.date,\r\n                choosedServices: newSellerServices,\r\n                paid: amount,\r\n                date: Date.now(), // à recevoir de stripe\r\n                status: \"pending\",\r\n                transactionID: stripeId,\r\n                total: total,\r\n                id: sellerSales.length + 1,\r\n                people: event.people,\r\n                placeSize: event.placeSize,\r\n                startAt: event.startAt,\r\n                endAt: event.endAt,\r\n                sellerNote: \"\"\r\n            }]\r\n\r\n            const sellersEmail = await getEmailOfSellerWithUid(uniqueId)\r\n            sendInBlue_sendNewSaleToSeller(sellersEmail, newSellerServices, event)\r\n\r\n            // Cette fonction est appelée pour le moment au chargement de la pag mais il faudra une confirmation de stripe pour l'appeler.\r\n            if (sellersUniqueIds.length === finalSales.length) {\r\n                await addSalesInDB(finalSales)\r\n                updateEventStatus(\"pending\")\r\n                sendInBlue_sendRecapToUserAfterPayment(user.email, finalSales, event)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function getSellersIds() {\r\n        // On récupère tous les ids des sellers présents dans tous les services puis on les trie\r\n        let sellersIds = []\r\n        event.choosedServices.map(service => sellersIds.push(service.sellerId))\r\n\r\n        const sellersUniqueIds = sellersIds.reduce((acc, current) => {\r\n            const isFound = acc.find(item => item === current);\r\n            return !isFound ? acc = [...acc, current] : acc\r\n        }, [])\r\n        return sellersUniqueIds\r\n    }\r\n\r\n    return !isPayment && (\r\n        <div>\r\n            <div className=\"paymentConfirmContainer\">\r\n                <div className=\"paymentConfirmTop\">\r\n                    <img alt=\"\" src=\"/images/wouhou.png\" />\r\n                    <h2>Votre paiement a bien été reçu, merci !</h2>\r\n                    <p>Vous allez recevoir d'ici peu un mail de confirmation</p>\r\n                    <ButtonRoundLarge\r\n                        onClick={() => history.push('/dashboard')}\r\n                        color=\"orange\"\r\n                        value=\"Voir mon évènement\"\r\n                    />\r\n                </div>\r\n                <div className=\"paymentConfirmBottom\">\r\n                    <p>Vous pouvez aussi dés à présent inviter des personnes à votre évènement !</p>\r\n                    <ButtonRoundLarge\r\n                        onClick={() => history.push('/creer-mon-evenement/etape-3/invitations')}\r\n                        color=\"blue\"\r\n                        value=\"Préparer mes invitations\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentConfirm;\r\n"]},"metadata":{},"sourceType":"module"}