{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\My Project\\\\Leo\\\\Nivid\\\\src\\\\components\\\\Admin\\\\event\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFirebase } from \"../../../assets/base-context\";\nimport ShowEvent from './ShowEvent';\nimport { Table } from '../Table';\nexport const Events = () => {\n  _s();\n\n  const firebaseContext = useFirebase();\n  const firestore = firebaseContext.firestore();\n  const refEvents = firestore.collection(\"events\");\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [step, setStep] = useState(\"list\");\n  const [currentEvent, setCurrentEvent] = useState(\"\");\n  useEffect(() => {\n    getData().then(() => {\n      setLoading(false);\n    });\n  }, [step]);\n\n  async function getData() {\n    const query = await refEvents.get();\n    const results = [];\n    query.forEach(doc => {\n      // Cette variable nous permet d'attendre que les data soit chargées avant de continuer, car on avait un souci avec la date\n      const data = doc.data();\n      const timstamp = data && data.date && data.date.toDate();\n      results.push({ ...doc.data(),\n        id: doc.id,\n        date: timstamp.toLocaleDateString(\"fr-FR\", {\n          year: \"numeric\",\n          month: \"numeric\",\n          day: \"numeric\"\n        }),\n        action: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => (setStep(\"show\"), setCurrentEvent(doc.id)),\n          children: \"Voir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      });\n    });\n    setEvents(results);\n  }\n\n  async function handleDeleteEvent() {\n    await refEvents.doc(currentEvent).delete().then(() => {\n      setStep(\"list\");\n    });\n  }\n\n  return !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    title: \"Liste des events\",\n    children: step === \"list\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: events,\n        type: \"events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this) : step === \"show\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(\"list\"),\n        className: \"buttonAdminTransparent\",\n        children: \"Revenir \\xE0 la liste des \\xE9v\\xE8nements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ShowEvent, {\n        handleDeleteEvent: handleDeleteEvent,\n        currentEvent: currentEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Events, \"u+Q85fjkP++1dgWiX/zSJnbCiHQ=\", false, function () {\n  return [useFirebase];\n});\n\n_c = Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["F:/My Project/Leo/Nivid/src/components/Admin/event/Events.js"],"names":["React","useEffect","useState","useFirebase","ShowEvent","Table","Events","firebaseContext","firestore","refEvents","collection","events","setEvents","loading","setLoading","step","setStep","currentEvent","setCurrentEvent","getData","then","query","get","results","forEach","doc","data","timstamp","date","toDate","push","id","toLocaleDateString","year","month","day","action","handleDeleteEvent","delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useFirebase } from \"../../../assets/base-context\";\r\nimport ShowEvent from './ShowEvent'\r\nimport { Table } from '../Table'\r\n\r\nexport const Events = () => {\r\n\r\n    const firebaseContext = useFirebase()\r\n    const firestore = firebaseContext.firestore()\r\n\r\n\r\n    const refEvents = firestore.collection(\"events\");\r\n    const [events, setEvents] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [step, setStep] = useState(\"list\")\r\n    const [currentEvent, setCurrentEvent] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getData().then(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [step])\r\n\r\n    async function getData() {\r\n        const query = await refEvents.get();\r\n        const results = []\r\n\r\n        query.forEach(doc => {\r\n            // Cette variable nous permet d'attendre que les data soit chargées avant de continuer, car on avait un souci avec la date\r\n            const data = doc.data()\r\n            const timstamp = (data && data.date) && data.date.toDate()\r\n            results.push({  \r\n                ...doc.data(),\r\n                id: doc.id, \r\n                date: timstamp.toLocaleDateString(\"fr-FR\", { year: \"numeric\", month: \"numeric\", day: \"numeric\" }),  \r\n                action: <button onClick={() => (setStep(\"show\"), setCurrentEvent(doc.id))}>Voir</button> })\r\n        })\r\n        setEvents(results)\r\n    }\r\n    \r\n    async function handleDeleteEvent() {\r\n        await refEvents.doc(currentEvent).delete().then(() => {\r\n            setStep(\"list\")\r\n        })\r\n    }\r\n\r\n\r\n    return !loading && (\r\n        <div title=\"Liste des events\">\r\n            {\r\n                step === \"list\" ?\r\n                    <div>\r\n                        <Table data={events} type=\"events\" />\r\n                    </div>\r\n                    : step === \"show\" &&\r\n                        <div>\r\n                        <button onClick={() => setStep(\"list\")} className=\"buttonAdminTransparent\">Revenir à la liste des évènements</button>\r\n                            <ShowEvent handleDeleteEvent={handleDeleteEvent} currentEvent={currentEvent} />\r\n                        </div>\r\n            }\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}