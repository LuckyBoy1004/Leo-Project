{"ast":null,"code":"import _toConsumableArray from\"/Users/bonnieclyde/Desktop/Nivid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/bonnieclyde/Desktop/Nivid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import'../../node_modules/react-vis/dist/style.css';import{XYPlot,VerticalBarSeries,XAxis,YAxis}from'react-vis';import{useAuth}from'../context/userContext';var EarningChart=function EarningChart(_ref){var sales=_ref.sales;var _useAuth=useAuth(),seller=_useAuth.seller;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),yearSales=_useState2[0],setYearSales=_useState2[1];var _useState3=useState([{x:\"Jan\",y:0},{x:\"Fev\",y:0},{x:\"Mar\",y:0},{x:\"Avr\",y:0},{x:\"Mai\",y:0},{x:\"Juin\",y:0},{x:\"Juil\",y:0},{x:\"Août\",y:0},{x:\"Sept\",y:0},{x:\"Oct\",y:0},{x:\"Nov\",y:0},{x:\"Dec\",y:0}]),_useState4=_slicedToArray(_useState3,2),dataGraph=_useState4[0],setDataGraph=_useState4[1];useEffect(function(){var rectList=document.querySelectorAll('rect');rectList.forEach(function(rect){rect.setAttributeNS(null,\"ry\",\"20\");});return getSalesAndMountGraphData();},[]);function getSalesAndMountGraphData(){var yearStart=new Date(new Date().getFullYear(),0,1);var yearSalesArray=sales.filter(function(sale){return sale.date>yearStart&&sale.status!==\"rejected\";});// && sale.status === \"validated\"\nsetYearSales(yearSalesArray);var newDataGraph=_toConsumableArray(dataGraph);yearSalesArray.forEach(function(sale){var month=new Date(sale.date).getMonth();newDataGraph[month].y=newDataGraph[month].y+sale.total;},function(){return setDataGraph(newDataGraph);});}return yearSales.length>0?/*#__PURE__*/_jsxs(XYPlot,{xType:\"ordinal\",xDistance:0,color:\"rgb(159, 232, 184)\",height:300,width:window.innerWidth*0.9,children:[/*#__PURE__*/_jsx(XAxis,{hideLine:true}),/*#__PURE__*/_jsx(YAxis,{hideLine:true}),/*#__PURE__*/_jsx(VerticalBarSeries,{style:{transform:\"translate(\".concat(window.innerWidth*.02,\"px)\"),width:\"\".concat(window.innerWidth*.02,\"px\")},data:dataGraph})]}):/*#__PURE__*/_jsx(\"div\",{className:\"textInEmptyQuery\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Aucune commande valid\\xE9e cette ann\\xE9e\"})});};export default EarningChart;","map":{"version":3,"sources":["/Users/bonnieclyde/Desktop/Nivid/src/components/EarningChart.js"],"names":["React","useEffect","useState","XYPlot","VerticalBarSeries","XAxis","YAxis","useAuth","EarningChart","sales","seller","yearSales","setYearSales","x","y","dataGraph","setDataGraph","rectList","document","querySelectorAll","forEach","rect","setAttributeNS","getSalesAndMountGraphData","yearStart","Date","getFullYear","yearSalesArray","filter","sale","date","status","newDataGraph","month","getMonth","total","length","window","innerWidth","transform","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport { XYPlot, VerticalBarSeries, XAxis, YAxis } from 'react-vis';\r\nimport { useAuth } from '../context/userContext'\r\n\r\nconst EarningChart = ({ sales }) => {\r\n\r\n    const { seller } = useAuth()\r\n    const [yearSales, setYearSales] = useState([])\r\n\r\n\r\n    const [dataGraph, setDataGraph] = useState([\r\n        { x: \"Jan\", y: 0 },\r\n        { x: \"Fev\", y: 0 },\r\n        { x: \"Mar\", y: 0 },\r\n        { x: \"Avr\", y: 0 },\r\n        { x: \"Mai\", y: 0 },\r\n        { x: \"Juin\", y: 0 },\r\n        { x: \"Juil\", y: 0 },\r\n        { x: \"Août\", y: 0 },\r\n        { x: \"Sept\", y: 0 },\r\n        { x: \"Oct\", y: 0 },\r\n        { x: \"Nov\", y: 0 },\r\n        { x: \"Dec\", y: 0 }\r\n    ])\r\n\r\n    useEffect(() => {\r\n        const rectList = document.querySelectorAll('rect')\r\n        rectList.forEach(rect => {\r\n            rect.setAttributeNS(null, \"ry\", \"20\");\r\n        })\r\n        return getSalesAndMountGraphData()\r\n    }, [])\r\n\r\n    function getSalesAndMountGraphData() {\r\n        const yearStart = new Date(new Date().getFullYear(), 0, 1);\r\n        const yearSalesArray = sales.filter(sale => sale.date > yearStart && sale.status !== \"rejected\") // && sale.status === \"validated\"\r\n\r\n        setYearSales(yearSalesArray)\r\n\r\n        let newDataGraph = [...dataGraph]\r\n        yearSalesArray.forEach(sale => {\r\n            const month = new Date(sale.date).getMonth()\r\n            newDataGraph[month].y = newDataGraph[month].y + sale.total\r\n        }, () => setDataGraph(newDataGraph))\r\n\r\n    }\r\n\r\n    return yearSales.length > 0 ? (\r\n        <XYPlot xType=\"ordinal\" xDistance={0} color=\"rgb(159, 232, 184)\" height={300} width={window.innerWidth * 0.9}>\r\n            <XAxis hideLine />\r\n            <YAxis hideLine />\r\n            <VerticalBarSeries\r\n                style={{ transform: `translate(${window.innerWidth * .02}px)`, width: `${window.innerWidth * .02}px` }}\r\n                data={dataGraph} />\r\n        </XYPlot>\r\n    )\r\n        : <div className=\"textInEmptyQuery\"><p>Aucune commande validée cette année</p></div>\r\n}\r\n\r\nexport default EarningChart"]},"metadata":{},"sourceType":"module"}