{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Boulot\\\\Nivid\\\\src\\\\components\\\\UpdateProfil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from '../context/userContext';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport frLocale from 'date-fns/locale/fr';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport ReactLoading from 'react-loading';\nimport { ButtonSmall } from './utilities/Buttons';\n\nconst UpdateProfil = props => {\n  _s();\n\n  const isMobile = props.isMobile;\n  const {\n    user,\n    getCurrentUserProfil,\n    updateCurrentUserProfil,\n    verifyLogin,\n    updateUserEmail\n  } = useAuth();\n  const [data, setData] = useState({\n    gender: \"f\"\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState({\n    field: \"\",\n    message: \"\"\n  });\n  const [isCalendarOpened, setIsCalendarOpened] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [confirmEmail, setConfirmEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    getCurrentUserProfil().then(results => {\n      setData({ ...data,\n        ...results,\n        birthDate: results.birthDate && new Date(results.birthDate.seconds * 1000)\n      });\n      setNewEmail(results.email);\n      setLoading(false);\n    });\n  }, []); // function isInputDisabled(input) {\n  //     if (data[input] !== undefined && data[input].length >= 2) {\n  //         return true\n  //     }\n  //     else {\n  //         return false\n  //     }\n  // }\n\n  async function verifyFields() {\n    if (data.firstName !== undefined && data.firstName.length >= 2) {\n      if (data.name !== undefined && data.name.length >= 2) {\n        if (data.gender !== undefined && data.gender.length > 0) {\n          if (data.birthDate !== undefined) {\n            if (data.tel === undefined || data.tel.length === 10 || data.tel.length === 0) {\n              setError({\n                field: \"\",\n                message: \"\"\n              });\n              return true;\n            } else {\n              return setError({\n                field: \"tel\",\n                message: \"Merci de renseigner un numéro de téléphone valide.\"\n              });\n            }\n          } else {\n            return setError({\n              field: \"birthDate\",\n              message: \"Merci de renseigner votre date de naissance.\"\n            });\n          }\n        } else {\n          return setError({\n            field: \"gender\",\n            message: \"Merci de renseigner votre sexe.\"\n          });\n        }\n      } else {\n        return setError({\n          field: \"name\",\n          message: \"Merci de renseigner votre nom.\"\n        });\n      }\n    } else {\n      return setError({\n        field: \"firstName\",\n        message: \"Merci de renseigner votre prénom.\"\n      });\n    }\n  }\n\n  function handleSaveUpdate() {\n    verifyFields().then(async res => {\n      if (res === true) {\n        if (user.providerData[0].providerId === \"google.com\") {\n          await updateCurrentUserProfil(data);\n          setConfirm(true);\n        } else {\n          if (newEmail === confirmEmail) {\n            verifyLogin(data.email, password).then(async res => {\n              await updateCurrentUserProfil({ ...data,\n                email: newEmail\n              });\n              await updateUserEmail(newEmail);\n              return setConfirm(true);\n            }).catch(error => {\n              if (error.code === \"auth/wrong-password\") {\n                return setError({\n                  field: \"password\",\n                  message: \"Le mot de passe est incorrect.\"\n                });\n              }\n            });\n          } else {\n            return setError({\n              field: \"emailConfirm\",\n              message: \"Les deux adresses e-mail doivent être identiques.\"\n            });\n          }\n        }\n      }\n    });\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isMobile ? \"dashboardUpdate mobile\" : \"dashboardUpdate\",\n    children: /*#__PURE__*/_jsxDEV(ReactLoading, {\n      className: isMobile ? \"loadingSpinner mobile\" : \"loadingSpinner\",\n      type: \"spin\",\n      color: \"rgba(245, 192, 67)\",\n      height: 50,\n      width: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isMobile ? \"dashboardUpdate mobile\" : \"dashboardUpdate\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vos informations personnelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateProfilInfoBox\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pour modifier d'autres informations vous concernant, \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"contactez-nous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 81\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateProfilContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"firstName\" ? \"formField error\" : \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pr\\xE9nom*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            value: data.firstName,\n            onChange: e => setData({ ...data,\n              firstName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"name\" ? \"formField error\" : \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nom*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: data.name,\n            onChange: e => setData({ ...data,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"gender\" ? \"formField error\" : \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sexe*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: data.gender,\n            onChange: e => setData({ ...data,\n              gender: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: data.gender === \"h\" && \"selected\",\n              value: \"h\",\n              children: \"Homme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: data.gender === \"f\" && \"selected\",\n              value: \"f\",\n              children: \"Femme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"birthDate\" ? \"formFieldSpecialDate error\" : \"formFieldSpecialDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date de naissance*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsCalendarOpened(!isCalendarOpened),\n            className: \"etape1DatePicker subscribe\",\n            children: data.birthDate !== undefined ? new Date(data.birthDate).toLocaleDateString(\"fr-FR\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            }) : \"Date de naissance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), isCalendarOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarContainerAbsolute\",\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              style: {\n                position: \"relative!important\"\n              },\n              locale: frLocale,\n              dateAdapter: AdapterDateFns,\n              children: isMobile ? /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                label: \"Date de l'\\xE9v\\xE8nement\",\n                open: isCalendarOpened,\n                onClose: () => setIsCalendarOpened(false),\n                value: data.birthDate,\n                onChange: val => (setData({ ...data,\n                  birthDate: val\n                }), setIsCalendarOpened(false)),\n                renderInput: () => null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(DatePicker, {\n                open: isCalendarOpened,\n                onClose: () => setIsCalendarOpened(false),\n                value: data.birthDate,\n                onChange: val => (setData({ ...data,\n                  birthDate: val\n                }), setIsCalendarOpened(false)),\n                renderInput: () => null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"tel\" ? \"formField error\" : \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Num\\xE9ro de t\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"tel\",\n            value: data.tel,\n            onChange: e => setData({ ...data,\n              tel: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), user.providerData[0].providerId !== \"google.com\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Adresse e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: newEmail,\n            onChange: e => setNewEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this), user.providerData[0].providerId !== \"google.com\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error.field === \"emailConfirm\" ? \"formField error\" : \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirmation e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            onChange: e => setConfirmEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateProfilConfirm\",\n        children: [user.providerData[0].providerId !== \"google.com\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pour confirmer les changements, merci de renseigner votre mot de passe actuel dans le champ ci-dessous :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: error.field === \"password\" ? \"formField error\" : \"formField\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => handleSaveUpdate(),\n            color: \"orange\",\n            value: \"Enregistrer les modifications\",\n            disabled: password.length < 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(ButtonSmall, {\n          onClick: () => handleSaveUpdate(),\n          color: \"orange\",\n          value: \"Enregistrer les modifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: confirm && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"green\",\n            children: \"Vos informations personnelles ont bien \\xE9t\\xE9 mis \\xE0 jour.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 13\n  }, this);\n};\n\n_s(UpdateProfil, \"yfc5XvKOEAnAVfHFUuW/vWVDVyI=\", false, function () {\n  return [useAuth];\n});\n\n_c = UpdateProfil;\nexport default UpdateProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfil\");","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/src/components/UpdateProfil.js"],"names":["React","useState","useEffect","useAuth","AdapterDateFns","LocalizationProvider","DatePicker","frLocale","MobileDatePicker","ReactLoading","ButtonSmall","UpdateProfil","props","isMobile","user","getCurrentUserProfil","updateCurrentUserProfil","verifyLogin","updateUserEmail","data","setData","gender","loading","setLoading","error","setError","field","message","isCalendarOpened","setIsCalendarOpened","confirm","setConfirm","newEmail","setNewEmail","confirmEmail","setConfirmEmail","password","setPassword","then","results","birthDate","Date","seconds","email","verifyFields","firstName","undefined","length","name","tel","handleSaveUpdate","res","providerData","providerId","catch","code","e","target","value","toLocaleDateString","year","month","day","position","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from '../context/userContext'\r\n\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport frLocale from 'date-fns/locale/fr';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\n\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport { ButtonSmall } from './utilities/Buttons'\r\n\r\nconst UpdateProfil = (props) => {\r\n\r\n    const isMobile = props.isMobile\r\n\r\n    const { user, getCurrentUserProfil, updateCurrentUserProfil, verifyLogin, updateUserEmail } = useAuth()\r\n\r\n    const [data, setData] = useState({\r\n        gender: \"f\"\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState({\r\n        field: \"\",\r\n        message: \"\"\r\n    })\r\n    const [isCalendarOpened, setIsCalendarOpened] = useState(false)\r\n    const [confirm, setConfirm] = useState(false)\r\n\r\n    const [newEmail, setNewEmail] = useState(\"\")\r\n    const [confirmEmail, setConfirmEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentUserProfil().then(results => {\r\n            setData({ ...data, ...results, birthDate: results.birthDate && new Date(results.birthDate.seconds * 1000) })\r\n            setNewEmail(results.email)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    // function isInputDisabled(input) {\r\n    //     if (data[input] !== undefined && data[input].length >= 2) {\r\n    //         return true\r\n    //     }\r\n    //     else {\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    async function verifyFields() {\r\n        if (data.firstName !== undefined && data.firstName.length >= 2) {\r\n            if (data.name !== undefined && data.name.length >= 2) {\r\n                if (data.gender !== undefined && data.gender.length > 0) {\r\n                    if (data.birthDate !== undefined) {\r\n                        if (data.tel === undefined || data.tel.length === 10 || data.tel.length === 0) {\r\n                            setError({ field: \"\", message: \"\" })\r\n                            return true\r\n                        }\r\n                        else {\r\n                            return setError({ field: \"tel\", message: \"Merci de renseigner un numéro de téléphone valide.\" })\r\n                        }\r\n                    }\r\n                    else {\r\n                        return setError({ field: \"birthDate\", message: \"Merci de renseigner votre date de naissance.\" })\r\n                    }\r\n                }\r\n                else {\r\n                    return setError({ field: \"gender\", message: \"Merci de renseigner votre sexe.\" })\r\n                }\r\n            }\r\n            else {\r\n                return setError({ field: \"name\", message: \"Merci de renseigner votre nom.\" })\r\n            }\r\n        }\r\n        else {\r\n            return setError({ field: \"firstName\", message: \"Merci de renseigner votre prénom.\" })\r\n        }\r\n    }\r\n\r\n    function handleSaveUpdate() {\r\n        verifyFields()\r\n            .then(async res => {\r\n                if (res === true) {\r\n                    if (user.providerData[0].providerId === \"google.com\") {\r\n                        await updateCurrentUserProfil(data)\r\n                        setConfirm(true)\r\n                    }\r\n                    else {\r\n                        if (newEmail === confirmEmail) {\r\n                            verifyLogin(data.email, password).then(async res => {\r\n                                await updateCurrentUserProfil({ ...data, email: newEmail })\r\n                                await updateUserEmail(newEmail)\r\n                                return setConfirm(true)\r\n                            })\r\n                                .catch(error => {\r\n                                    if (error.code === \"auth/wrong-password\") {\r\n                                        return setError({ field: \"password\", message: \"Le mot de passe est incorrect.\" })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            return setError({ field: \"emailConfirm\", message: \"Les deux adresses e-mail doivent être identiques.\" })\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return loading ?\r\n        <div className={isMobile ? \"dashboardUpdate mobile\" : \"dashboardUpdate\"}>\r\n            <ReactLoading className={isMobile ? \"loadingSpinner mobile\" : \"loadingSpinner\"} type=\"spin\" color=\"rgba(245, 192, 67)\" height={50} width={50} />\r\n        </div>\r\n        : (\r\n            <div className={isMobile ? \"dashboardUpdate mobile\" : \"dashboardUpdate\"}>\r\n                <div className=\"leftSide\">\r\n                    <h1>Vos informations personnelles</h1>\r\n                    <div className=\"updateProfilInfoBox\">\r\n                        <p>Pour modifier d'autres informations vous concernant, <span>contactez-nous</span>.</p>\r\n                    </div>\r\n                    <p className=\"errorMessage\">{error.message}</p>\r\n                    <div className=\"updateProfilContent\">\r\n\r\n                        <div className={error.field === \"firstName\" ? \"formField error\" : \"formField\"}>\r\n                            <label>Prénom*</label>\r\n                            <input type=\"text\" name=\"firstName\" value={data.firstName} onChange={(e) => setData({ ...data, firstName: e.target.value })} />\r\n                        </div>\r\n\r\n                        <div className={error.field === \"name\" ? \"formField error\" : \"formField\"}>\r\n                            <label>Nom*</label>\r\n                            <input type=\"text\" name=\"name\" value={data.name} onChange={(e) => setData({ ...data, name: e.target.value })} />\r\n                        </div>\r\n\r\n                        <div className={error.field === \"gender\" ? \"formField error\" : \"formField\"}>\r\n                            <label>Sexe*</label>\r\n                            <select value={data.gender} onChange={(e) => setData({ ...data, gender: e.target.value })}>\r\n                                <option selected={data.gender === \"h\" && \"selected\"} value=\"h\">Homme</option>\r\n                                <option selected={data.gender === \"f\" && \"selected\"} value=\"f\">Femme</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className={error.field === \"birthDate\" ? \"formFieldSpecialDate error\" : \"formFieldSpecialDate\"}>\r\n                            <label>Date de naissance*</label>\r\n                            <div\r\n                                onClick={() => setIsCalendarOpened(!isCalendarOpened)}\r\n                                className=\"etape1DatePicker subscribe\"\r\n                            >\r\n                                {\r\n                                    data.birthDate !== undefined ?\r\n                                        new Date(data.birthDate).toLocaleDateString(\"fr-FR\", { year: \"numeric\", month: \"long\", day: \"numeric\" })\r\n                                        :\r\n                                        \"Date de naissance\"\r\n                                }\r\n                            </div>\r\n                            {isCalendarOpened &&\r\n                                <div className=\"calendarContainerAbsolute\">\r\n                                    <LocalizationProvider style={{ position: \"relative!important\" }} locale={frLocale} dateAdapter={AdapterDateFns}>\r\n                                        {isMobile ?\r\n                                            <MobileDatePicker\r\n                                                label=\"Date de l'évènement\"\r\n                                                open={isCalendarOpened}\r\n                                                onClose={() => setIsCalendarOpened(false)}\r\n                                                value={data.birthDate}\r\n                                                onChange={(val) => (setData({ ...data, birthDate: val }), setIsCalendarOpened(false))}\r\n                                                renderInput={() => null}\r\n                                            />\r\n                                            :\r\n                                            <DatePicker\r\n                                                open={isCalendarOpened}\r\n                                                onClose={() => setIsCalendarOpened(false)}\r\n                                                value={data.birthDate}\r\n                                                onChange={(val) => (setData({ ...data, birthDate: val }), setIsCalendarOpened(false))}\r\n                                                renderInput={() => null}\r\n                                            />\r\n                                        }\r\n                                    </LocalizationProvider>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className={error.field === \"tel\" ? \"formField error\" : \"formField\"}>\r\n                            <label>Numéro de téléphone</label>\r\n                            <input type=\"text\" name=\"tel\" value={data.tel} onChange={(e) => setData({ ...data, tel: e.target.value })} />\r\n                        </div>\r\n\r\n                        {user.providerData[0].providerId !== \"google.com\" &&\r\n                            <div className=\"formField\">\r\n                                <label>Adresse e-mail</label>\r\n                                <input type=\"text\" name=\"email\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} />\r\n                            </div>\r\n                        }\r\n                        {\r\n                            user.providerData[0].providerId !== \"google.com\" &&\r\n                            <div className={error.field === \"emailConfirm\" ? \"formField error\" : \"formField\"}>\r\n                                <label>Confirmation e-mail</label>\r\n                                <input type=\"text\" name=\"email\" onChange={(e) => setConfirmEmail(e.target.value)} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"updateProfilConfirm\">\r\n\r\n                        {\r\n                            user.providerData[0].providerId !== \"google.com\" ?\r\n                                <div>\r\n                                    <p>Pour confirmer les changements, merci de renseigner votre mot de passe actuel dans le champ ci-dessous :</p>\r\n                                    <div className={error.field === \"password\" ? \"formField error\" : \"formField\"}>\r\n                                        <input type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <ButtonSmall\r\n                                        onClick={() => handleSaveUpdate()}\r\n                                        color=\"orange\"\r\n                                        value=\"Enregistrer les modifications\"\r\n                                        disabled={password.length < 2}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <ButtonSmall\r\n                                    onClick={() => handleSaveUpdate()}\r\n                                    color=\"orange\"\r\n                                    value=\"Enregistrer les modifications\"\r\n                                />\r\n\r\n                        }\r\n                        <div>\r\n                            {confirm &&\r\n                                <p className=\"green\">Vos informations personnelles ont bien été mis à jour.</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default UpdateProfil"]},"metadata":{},"sourceType":"module"}