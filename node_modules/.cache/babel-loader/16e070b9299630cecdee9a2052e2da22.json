{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ErrorModel', 'model/GetProcess', 'model/GetProcesses'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/ErrorModel'), require('../model/GetProcess'), require('../model/GetProcesses'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.ProcessApi = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.ErrorModel, root.SibApiV3Sdk.GetProcess, root.SibApiV3Sdk.GetProcesses);\n  }\n})(this, function (ApiClient, ErrorModel, GetProcess, GetProcesses) {\n  'use strict';\n  /**\n   * Process service.\n   * @module api/ProcessApi\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new ProcessApi. \n   * @alias module:api/ProcessApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n\n  var exports = function exports(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n    /**\n     * Return the informations for a process\n     * @param {Number} processId Id of the process\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetProcess} and HTTP response\n     */\n\n    this.getProcessWithHttpInfo = function (processId) {\n      var postBody = null; // verify the required parameter 'processId' is set\n\n      if (processId === undefined || processId === null) {\n        throw new Error(\"Missing the required parameter 'processId' when calling getProcess\");\n      }\n\n      var pathParams = {\n        'processId': processId\n      };\n      var queryParams = {};\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetProcess;\n      return this.apiClient.callApi('/processes/{processId}', 'GET', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Return the informations for a process\n     * @param {Number} processId Id of the process\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetProcess}\n     */\n\n\n    this.getProcess = function (processId) {\n      return this.getProcessWithHttpInfo(processId).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n    /**\n     * Return all the processes for your account\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Number limitation for the result returned (default to 10)\n     * @param {Number} opts.offset Beginning point in the list to retrieve from. (default to 0)\n     * @param {module:model/String} opts.sort Sort the results in the ascending/descending order of record creation. Default order is **descending** if &#x60;sort&#x60; is not passed (default to desc)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetProcesses} and HTTP response\n     */\n\n\n    this.getProcessesWithHttpInfo = function (opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort']\n      };\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetProcesses;\n      return this.apiClient.callApi('/processes', 'GET', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Return all the processes for your account\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Number limitation for the result returned (default to 10)\n     * @param {Number} opts.offset Beginning point in the list to retrieve from. (default to 0)\n     * @param {module:model/String} opts.sort Sort the results in the ascending/descending order of record creation. Default order is **descending** if &#x60;sort&#x60; is not passed (default to desc)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetProcesses}\n     */\n\n\n    this.getProcesses = function (opts) {\n      return this.getProcessesWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n  };\n\n  return exports;\n});","map":{"version":3,"sources":["/Users/bc/Desktop/Nivid/node_modules/sib-api-v3-sdk/src/api/ProcessApi.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","ProcessApi","ApiClient","ErrorModel","GetProcess","GetProcesses","apiClient","instance","getProcessWithHttpInfo","processId","postBody","undefined","Error","pathParams","queryParams","collectionQueryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","callApi","getProcess","then","response_and_data","data","getProcessesWithHttpInfo","opts","getProcesses"],"mappings":"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","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ErrorModel', 'model/GetProcess', 'model/GetProcesses'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/ErrorModel'), require('../model/GetProcess'), require('../model/GetProcesses'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.ProcessApi = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.ErrorModel, root.SibApiV3Sdk.GetProcess, root.SibApiV3Sdk.GetProcesses);\n  }\n}(this, function(ApiClient, ErrorModel, GetProcess, GetProcesses) {\n  'use strict';\n\n  /**\n   * Process service.\n   * @module api/ProcessApi\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new ProcessApi. \n   * @alias module:api/ProcessApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n\n    /**\n     * Return the informations for a process\n     * @param {Number} processId Id of the process\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetProcess} and HTTP response\n     */\n    this.getProcessWithHttpInfo = function(processId) {\n      var postBody = null;\n\n      // verify the required parameter 'processId' is set\n      if (processId === undefined || processId === null) {\n        throw new Error(\"Missing the required parameter 'processId' when calling getProcess\");\n      }\n\n\n      var pathParams = {\n        'processId': processId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetProcess;\n\n      return this.apiClient.callApi(\n        '/processes/{processId}', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Return the informations for a process\n     * @param {Number} processId Id of the process\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetProcess}\n     */\n    this.getProcess = function(processId) {\n      return this.getProcessWithHttpInfo(processId)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Return all the processes for your account\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Number limitation for the result returned (default to 10)\n     * @param {Number} opts.offset Beginning point in the list to retrieve from. (default to 0)\n     * @param {module:model/String} opts.sort Sort the results in the ascending/descending order of record creation. Default order is **descending** if &#x60;sort&#x60; is not passed (default to desc)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetProcesses} and HTTP response\n     */\n    this.getProcessesWithHttpInfo = function(opts) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetProcesses;\n\n      return this.apiClient.callApi(\n        '/processes', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Return all the processes for your account\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Number limitation for the result returned (default to 10)\n     * @param {Number} opts.offset Beginning point in the list to retrieve from. (default to 0)\n     * @param {module:model/String} opts.sort Sort the results in the ascending/descending order of record creation. Default order is **descending** if &#x60;sort&#x60; is not passed (default to desc)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetProcesses}\n     */\n    this.getProcesses = function(opts) {\n      return this.getProcessesWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n  };\n\n  return exports;\n}));\n"]},"metadata":{},"sourceType":"script"}