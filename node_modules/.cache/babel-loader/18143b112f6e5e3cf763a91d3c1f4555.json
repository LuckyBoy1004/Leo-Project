{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bc/Desktop/New Nivid/Leo-Project/src/pages/GiveReview.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/userContext\"; // context\n\nimport { CSSTransition } from 'react-transition-group';\nimport { useHistory } from \"react-router-dom\";\nimport { ButtonSmall } from '../components/utilities/Buttons';\nimport Loader from '../components/Loader';\nimport { FaStar } from 'react-icons/fa';\n\nconst GiveReview = () => {\n  _s();\n\n  const search = useLocation().search;\n  const eventId = new URLSearchParams(search).get('id');\n  const history = useHistory();\n  const [sellers, setSellers] = useState([]);\n  const [isMounted, setIsMounted] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    user,\n    getSalesOfEventIdFromDB,\n    getSellersInDbWithUids,\n    getEventFromUid,\n    getReviewsOfSellerUid,\n    addReviewOfSellerUid,\n    sendInBlue_sendNotificationToSellerOfReview\n  } = useAuth(); // context\n\n  useEffect(() => {\n    if (eventId === null || eventId === undefined || eventId.length < 1) {\n      return history.push('/');\n    } // Si pas connecté\n\n\n    if (!user) {\n      setIsMounted(true);\n      return setError(\"Vous devez être connecté pour laisser un avis.\");\n    } // Si pas le createur de l'event\n\n\n    getEventFromUid(eventId).then(res => {\n      if (!res || user.uid !== res.user) {\n        return history.push('/');\n      }\n    });\n\n    if (eventId !== null && eventId.length > 1) {\n      getAllowedSellers().then(newSellers => {\n        if (newSellers === false) return history.push(\"/\"); // On ne prend que les sellers qui n'ont pas deja un avis avec l'id de l'event\n\n        const filtered = newSellers.filter(seller => seller.reviews.filter(review => review.eventID === eventId).length === 0);\n        const final = filtered.map(item => {\n          return {\n            newReview: {},\n            companyName: item.companyName,\n            reviews: item.reviews,\n            uid: item.uid,\n            firstName: item.firstName,\n            email: item.email\n          };\n        });\n        setSellers(final);\n        setError(\"\");\n        setIsMounted(true);\n      });\n    }\n  }, []);\n\n  async function getAllowedSellers() {\n    const res = await getSalesOfEventIdFromDB(eventId);\n    if (res.length < 1) return false;\n    const sellerIds = res.map(element => element.sellerID);\n    const sellersArray = await getSellersInDbWithUids(sellerIds);\n    const newSellers = new Promise((resolve, reject) => {\n      sellersArray.map(async seller => {\n        const res = await getReviewsOfSellerUid(seller.uid);\n        seller.reviews = res;\n        resolve(seller);\n      });\n    });\n    return Promise.all([newSellers]).then(val => val);\n  }\n\n  function handleNoteChanged(key, note) {\n    let newSellers = [...sellers];\n    newSellers[key].newReview.note = note;\n    setSellers(newSellers);\n  }\n\n  function handleCommentChanged(key, comment) {\n    let newSellers = [...sellers];\n    newSellers[key].newReview.comment = comment;\n    setSellers(newSellers);\n  }\n\n  async function handleSendReview(sellerUID, key) {\n    const note = sellers[key].newReview.note;\n    const comment = sellers[key].newReview.comment;\n    if (note === undefined || comment === undefined) return;\n    const res = await addReviewOfSellerUid(sellerUID, eventId, note, comment, user.displayName);\n\n    if (res) {\n      let newSellers = [...sellers];\n      const newReview = {\n        eventID: eventId,\n        note: note,\n        comment: comment\n      };\n      newSellers[key].reviews.push(newReview);\n      newSellers[key].newReview = newReview;\n      setSellers(newSellers);\n      sendInBlue_sendNotificationToSellerOfReview(newSellers[key].email, newSellers[key].firstName);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GiveReview_container\",\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: !isMounted,\n      timeout: 300,\n      classNames: \"pageTransition\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: isMounted,\n      timeout: 300,\n      classNames: \"pageTransition\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GiveReview\",\n        children: error.length < 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Donnez une note aux prestataires que vous aviez choisi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), sellers.map((seller, key) => seller.newReview.eventID === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"GiveReview__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: seller.companyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stars_container\",\n              children: [/*#__PURE__*/_jsxDEV(FaStar, {\n                className: `${seller.newReview.note > 4 ? \"active\" : \"\"}`,\n                onClick: () => handleNoteChanged(key, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n                className: `${seller.newReview.note > 3 ? \"active\" : \"\"}`,\n                onClick: () => handleNoteChanged(key, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n                className: `${seller.newReview.note > 2 ? \"active\" : \"\"}`,\n                onClick: () => handleNoteChanged(key, 3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n                className: `${seller.newReview.note > 1 ? \"active\" : \"\"}`,\n                onClick: () => handleNoteChanged(key, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n                className: `${seller.newReview.note > 0 ? \"active\" : \"\"}`,\n                onClick: () => handleNoteChanged(key, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formField\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                value: seller.comment,\n                onChange: e => handleCommentChanged(key, e.target.value),\n                placeholder: \"Laissez un commentaire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonSendForm\",\n              children: /*#__PURE__*/_jsxDEV(ButtonSmall, {\n                onClick: () => handleSendReview(seller.uid, key),\n                color: \"blue\",\n                value: \"Valider\",\n                disabled: seller.newReview.note === undefined || seller.newReview.comment === undefined || seller.newReview.comment.length < 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Merci\"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"linkRedirect\",\n            onClick: () => history.push('/compte'),\n            children: \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GiveReview, \"8wKgvvACJyAT8Ok2kZ/8gCi5wx4=\", false, function () {\n  return [useLocation, useHistory, useAuth];\n});\n\n_c = GiveReview;\nexport default GiveReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveReview\");","map":{"version":3,"sources":["/Users/bc/Desktop/New Nivid/Leo-Project/src/pages/GiveReview.js"],"names":["useState","useEffect","useLocation","useAuth","CSSTransition","useHistory","ButtonSmall","Loader","FaStar","GiveReview","search","eventId","URLSearchParams","get","history","sellers","setSellers","isMounted","setIsMounted","error","setError","user","getSalesOfEventIdFromDB","getSellersInDbWithUids","getEventFromUid","getReviewsOfSellerUid","addReviewOfSellerUid","sendInBlue_sendNotificationToSellerOfReview","undefined","length","push","then","res","uid","getAllowedSellers","newSellers","filtered","filter","seller","reviews","review","eventID","final","map","item","newReview","companyName","firstName","email","sellerIds","element","sellerID","sellersArray","Promise","resolve","reject","all","val","handleNoteChanged","key","note","handleCommentChanged","comment","handleSendReview","sellerUID","displayName","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/userContext\"; // context\nimport { CSSTransition } from 'react-transition-group'\nimport { useHistory } from \"react-router-dom\";\nimport { ButtonSmall } from '../components/utilities/Buttons';\n\nimport Loader from '../components/Loader'\n\nimport { FaStar } from 'react-icons/fa';\n\nconst GiveReview = () => {\n\n    const search = useLocation().search\n    const eventId = new URLSearchParams(search).get('id')\n\n    const history = useHistory()\n\n    const [sellers, setSellers] = useState([])\n    const [isMounted, setIsMounted] = useState(false)\n    const [error, setError] = useState(\"\")\n\n    const {\n        user,\n        getSalesOfEventIdFromDB,\n        getSellersInDbWithUids,\n        getEventFromUid,\n        getReviewsOfSellerUid,\n        addReviewOfSellerUid,\n        sendInBlue_sendNotificationToSellerOfReview } = useAuth() // context\n\n\n    useEffect(() => {\n        if (eventId === null || eventId === undefined || eventId.length < 1) {\n            return history.push('/')\n        }\n        // Si pas connecté\n        if (!user) {\n            setIsMounted(true)\n            return setError(\"Vous devez être connecté pour laisser un avis.\")\n        }\n        // Si pas le createur de l'event\n        getEventFromUid(eventId).then(res => {\n            if (!res || user.uid !== res.user) {\n                return history.push('/')\n            }\n        })\n\n\n        if (eventId !== null && eventId.length > 1) {\n            getAllowedSellers().then(newSellers => {\n                if (newSellers === false) return history.push(\"/\")\n                // On ne prend que les sellers qui n'ont pas deja un avis avec l'id de l'event\n                const filtered = newSellers.filter(seller => seller.reviews.filter(review => review.eventID === eventId).length === 0)\n                const final = filtered.map(item => {\n                    return {\n                        newReview: {},\n                        companyName: item.companyName,\n                        reviews: item.reviews,\n                        uid: item.uid,\n                        firstName: item.firstName,\n                        email: item.email\n                    }\n                })\n                setSellers(final)\n                setError(\"\")\n                setIsMounted(true)\n            })\n        }\n    }, [])\n\n    async function getAllowedSellers() {\n        const res = await getSalesOfEventIdFromDB(eventId)\n        if (res.length < 1) return false\n        const sellerIds = res.map(element => element.sellerID)\n\n        const sellersArray = await getSellersInDbWithUids(sellerIds)\n        const newSellers = new Promise((resolve, reject) => {\n            sellersArray.map(async seller => {\n                const res = await getReviewsOfSellerUid(seller.uid)\n                seller.reviews = res\n                resolve(seller)\n            })\n        });\n        return Promise.all([newSellers]).then((val) => val)\n    }\n\n    function handleNoteChanged(key, note) {\n        let newSellers = [...sellers]\n        newSellers[key].newReview.note = note\n        setSellers(newSellers)\n    }\n\n    function handleCommentChanged(key, comment) {\n        let newSellers = [...sellers]\n        newSellers[key].newReview.comment = comment\n        setSellers(newSellers)\n    }\n\n    async function handleSendReview(sellerUID, key) {\n        const note = sellers[key].newReview.note\n        const comment = sellers[key].newReview.comment\n        if (note === undefined || comment === undefined) return\n        const res = await addReviewOfSellerUid(sellerUID, eventId, note, comment, user.displayName)\n        if (res) {\n            let newSellers = [...sellers]\n            const newReview = { eventID: eventId, note: note, comment: comment }\n            newSellers[key].reviews.push(newReview)\n            newSellers[key].newReview = newReview\n            setSellers(newSellers)\n\n            sendInBlue_sendNotificationToSellerOfReview(newSellers[key].email, newSellers[key].firstName)\n        }\n    }\n\n    return (\n        <div className=\"GiveReview_container\">\n            <CSSTransition\n                in={!isMounted}\n                timeout={300}\n                classNames=\"pageTransition\"\n                unmountOnExit\n            >\n                <Loader />\n            </CSSTransition>\n\n            <CSSTransition\n                in={isMounted}\n                timeout={300}\n                classNames=\"pageTransition\"\n                unmountOnExit\n            >\n                <div className=\"GiveReview\">\n                    {error.length < 1 ?\n                        <>\n                            <h1>Donnez une note aux prestataires que vous aviez choisi</h1>\n                            {sellers.map((seller, key) =>\n                                seller.newReview.eventID === undefined ?\n                                    <div key={key} className=\"GiveReview__item\" >\n                                        <h2>{seller.companyName}</h2>\n                                        <div className=\"stars_container\">\n                                            <FaStar className={`${seller.newReview.note > 4 ? \"active\" : \"\"}`} onClick={() => handleNoteChanged(key, 5)} />\n                                            <FaStar className={`${seller.newReview.note > 3 ? \"active\" : \"\"}`} onClick={() => handleNoteChanged(key, 4)} />\n                                            <FaStar className={`${seller.newReview.note > 2 ? \"active\" : \"\"}`} onClick={() => handleNoteChanged(key, 3)} />\n                                            <FaStar className={`${seller.newReview.note > 1 ? \"active\" : \"\"}`} onClick={() => handleNoteChanged(key, 2)} />\n                                            <FaStar className={`${seller.newReview.note > 0 ? \"active\" : \"\"}`} onClick={() => handleNoteChanged(key, 1)} />\n                                        </div>\n                                        <div className=\"formField\">\n                                            <textarea\n                                                type=\"text\"\n                                                value={seller.comment}\n                                                onChange={e => handleCommentChanged(key, e.target.value)}\n                                                placeholder=\"Laissez un commentaire\"\n                                            />\n                                        </div>\n                                        <div className=\"buttonSendForm\">\n                                            <ButtonSmall\n                                                onClick={() => handleSendReview(seller.uid, key)}\n                                                color=\"blue\"\n                                                value=\"Valider\"\n                                                disabled={seller.newReview.note === undefined || seller.newReview.comment === undefined || seller.newReview.comment.length < 3}\n                                            />\n                                        </div>\n                                    </div>\n                                    :\n                                    <div key={key}>Merci</div>\n                            )}\n                        </>\n                        :\n                        <>\n                            <p>{error}</p>\n                            <span className=\"linkRedirect\" onClick={() => history.push('/compte')} >Se connecter</span>\n                        </>\n                    }\n                </div>\n            </CSSTransition>\n        </div >\n    )\n}\n\nexport default GiveReview"]},"metadata":{},"sourceType":"module"}