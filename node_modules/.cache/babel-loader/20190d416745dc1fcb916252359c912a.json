{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.GetReportsReports = factory(root.SibApiV3Sdk.ApiClient);\n  }\n})(this, function (ApiClient) {\n  'use strict';\n  /**\n   * The GetReportsReports model module.\n   * @module model/GetReportsReports\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetReportsReports</code>.\n   * @alias module:model/GetReportsReports\n   * @class\n   * @param _date {Date} Date of the statistics\n   * @param requests {Number} Number of requests for the date\n   * @param delivered {Number} Number of delivered emails for the date\n   * @param hardBounces {Number} Number of hardbounces for the date\n   * @param softBounces {Number} Number of softbounces for the date\n   * @param clicks {Number} Number of clicks for the date\n   * @param uniqueClicks {Number} Number of unique clicks for the date\n   * @param opens {Number} Number of openings for the date\n   * @param uniqueOpens {Number} Number of unique openings for the date\n   * @param spamReports {Number} Number of complaints (spam reports) for the date\n   * @param blocked {Number} Number of blocked emails for the date\n   * @param invalid {Number} Number of invalid emails for the date\n   * @param unsubscribed {Number} Number of unsubscribed emails for the date\n   */\n\n  var exports = function (_date, requests, delivered, hardBounces, softBounces, clicks, uniqueClicks, opens, uniqueOpens, spamReports, blocked, invalid, unsubscribed) {\n    var _this = this;\n\n    _this['date'] = _date;\n    _this['requests'] = requests;\n    _this['delivered'] = delivered;\n    _this['hardBounces'] = hardBounces;\n    _this['softBounces'] = softBounces;\n    _this['clicks'] = clicks;\n    _this['uniqueClicks'] = uniqueClicks;\n    _this['opens'] = opens;\n    _this['uniqueOpens'] = uniqueOpens;\n    _this['spamReports'] = spamReports;\n    _this['blocked'] = blocked;\n    _this['invalid'] = invalid;\n    _this['unsubscribed'] = unsubscribed;\n  };\n  /**\n   * Constructs a <code>GetReportsReports</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetReportsReports} obj Optional instance to populate.\n   * @return {module:model/GetReportsReports} The populated <code>GetReportsReports</code> instance.\n   */\n\n\n  exports.constructFromObject = function (data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('date')) {\n        obj['date'] = ApiClient.convertToType(data['date'], 'Date');\n      }\n\n      if (data.hasOwnProperty('requests')) {\n        obj['requests'] = ApiClient.convertToType(data['requests'], 'Number');\n      }\n\n      if (data.hasOwnProperty('delivered')) {\n        obj['delivered'] = ApiClient.convertToType(data['delivered'], 'Number');\n      }\n\n      if (data.hasOwnProperty('hardBounces')) {\n        obj['hardBounces'] = ApiClient.convertToType(data['hardBounces'], 'Number');\n      }\n\n      if (data.hasOwnProperty('softBounces')) {\n        obj['softBounces'] = ApiClient.convertToType(data['softBounces'], 'Number');\n      }\n\n      if (data.hasOwnProperty('clicks')) {\n        obj['clicks'] = ApiClient.convertToType(data['clicks'], 'Number');\n      }\n\n      if (data.hasOwnProperty('uniqueClicks')) {\n        obj['uniqueClicks'] = ApiClient.convertToType(data['uniqueClicks'], 'Number');\n      }\n\n      if (data.hasOwnProperty('opens')) {\n        obj['opens'] = ApiClient.convertToType(data['opens'], 'Number');\n      }\n\n      if (data.hasOwnProperty('uniqueOpens')) {\n        obj['uniqueOpens'] = ApiClient.convertToType(data['uniqueOpens'], 'Number');\n      }\n\n      if (data.hasOwnProperty('spamReports')) {\n        obj['spamReports'] = ApiClient.convertToType(data['spamReports'], 'Number');\n      }\n\n      if (data.hasOwnProperty('blocked')) {\n        obj['blocked'] = ApiClient.convertToType(data['blocked'], 'Number');\n      }\n\n      if (data.hasOwnProperty('invalid')) {\n        obj['invalid'] = ApiClient.convertToType(data['invalid'], 'Number');\n      }\n\n      if (data.hasOwnProperty('unsubscribed')) {\n        obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Number');\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * Date of the statistics\n   * @member {Date} date\n   */\n\n\n  exports.prototype['date'] = undefined;\n  /**\n   * Number of requests for the date\n   * @member {Number} requests\n   */\n\n  exports.prototype['requests'] = undefined;\n  /**\n   * Number of delivered emails for the date\n   * @member {Number} delivered\n   */\n\n  exports.prototype['delivered'] = undefined;\n  /**\n   * Number of hardbounces for the date\n   * @member {Number} hardBounces\n   */\n\n  exports.prototype['hardBounces'] = undefined;\n  /**\n   * Number of softbounces for the date\n   * @member {Number} softBounces\n   */\n\n  exports.prototype['softBounces'] = undefined;\n  /**\n   * Number of clicks for the date\n   * @member {Number} clicks\n   */\n\n  exports.prototype['clicks'] = undefined;\n  /**\n   * Number of unique clicks for the date\n   * @member {Number} uniqueClicks\n   */\n\n  exports.prototype['uniqueClicks'] = undefined;\n  /**\n   * Number of openings for the date\n   * @member {Number} opens\n   */\n\n  exports.prototype['opens'] = undefined;\n  /**\n   * Number of unique openings for the date\n   * @member {Number} uniqueOpens\n   */\n\n  exports.prototype['uniqueOpens'] = undefined;\n  /**\n   * Number of complaints (spam reports) for the date\n   * @member {Number} spamReports\n   */\n\n  exports.prototype['spamReports'] = undefined;\n  /**\n   * Number of blocked emails for the date\n   * @member {Number} blocked\n   */\n\n  exports.prototype['blocked'] = undefined;\n  /**\n   * Number of invalid emails for the date\n   * @member {Number} invalid\n   */\n\n  exports.prototype['invalid'] = undefined;\n  /**\n   * Number of unsubscribed emails for the date\n   * @member {Number} unsubscribed\n   */\n\n  exports.prototype['unsubscribed'] = undefined;\n  return exports;\n});","map":{"version":3,"sources":["F:/My Project/Copie de Nivid/Copie de Nivid (1)/node_modules/sib-api-v3-sdk/src/model/GetReportsReports.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","GetReportsReports","ApiClient","_date","requests","delivered","hardBounces","softBounces","clicks","uniqueClicks","opens","uniqueOpens","spamReports","blocked","invalid","unsubscribed","_this","constructFromObject","data","obj","hasOwnProperty","convertToType","prototype","undefined"],"mappings":"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","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.GetReportsReports = factory(root.SibApiV3Sdk.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetReportsReports model module.\n   * @module model/GetReportsReports\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetReportsReports</code>.\n   * @alias module:model/GetReportsReports\n   * @class\n   * @param _date {Date} Date of the statistics\n   * @param requests {Number} Number of requests for the date\n   * @param delivered {Number} Number of delivered emails for the date\n   * @param hardBounces {Number} Number of hardbounces for the date\n   * @param softBounces {Number} Number of softbounces for the date\n   * @param clicks {Number} Number of clicks for the date\n   * @param uniqueClicks {Number} Number of unique clicks for the date\n   * @param opens {Number} Number of openings for the date\n   * @param uniqueOpens {Number} Number of unique openings for the date\n   * @param spamReports {Number} Number of complaints (spam reports) for the date\n   * @param blocked {Number} Number of blocked emails for the date\n   * @param invalid {Number} Number of invalid emails for the date\n   * @param unsubscribed {Number} Number of unsubscribed emails for the date\n   */\n  var exports = function(_date, requests, delivered, hardBounces, softBounces, clicks, uniqueClicks, opens, uniqueOpens, spamReports, blocked, invalid, unsubscribed) {\n    var _this = this;\n\n    _this['date'] = _date;\n    _this['requests'] = requests;\n    _this['delivered'] = delivered;\n    _this['hardBounces'] = hardBounces;\n    _this['softBounces'] = softBounces;\n    _this['clicks'] = clicks;\n    _this['uniqueClicks'] = uniqueClicks;\n    _this['opens'] = opens;\n    _this['uniqueOpens'] = uniqueOpens;\n    _this['spamReports'] = spamReports;\n    _this['blocked'] = blocked;\n    _this['invalid'] = invalid;\n    _this['unsubscribed'] = unsubscribed;\n  };\n\n  /**\n   * Constructs a <code>GetReportsReports</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetReportsReports} obj Optional instance to populate.\n   * @return {module:model/GetReportsReports} The populated <code>GetReportsReports</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('date')) {\n        obj['date'] = ApiClient.convertToType(data['date'], 'Date');\n      }\n      if (data.hasOwnProperty('requests')) {\n        obj['requests'] = ApiClient.convertToType(data['requests'], 'Number');\n      }\n      if (data.hasOwnProperty('delivered')) {\n        obj['delivered'] = ApiClient.convertToType(data['delivered'], 'Number');\n      }\n      if (data.hasOwnProperty('hardBounces')) {\n        obj['hardBounces'] = ApiClient.convertToType(data['hardBounces'], 'Number');\n      }\n      if (data.hasOwnProperty('softBounces')) {\n        obj['softBounces'] = ApiClient.convertToType(data['softBounces'], 'Number');\n      }\n      if (data.hasOwnProperty('clicks')) {\n        obj['clicks'] = ApiClient.convertToType(data['clicks'], 'Number');\n      }\n      if (data.hasOwnProperty('uniqueClicks')) {\n        obj['uniqueClicks'] = ApiClient.convertToType(data['uniqueClicks'], 'Number');\n      }\n      if (data.hasOwnProperty('opens')) {\n        obj['opens'] = ApiClient.convertToType(data['opens'], 'Number');\n      }\n      if (data.hasOwnProperty('uniqueOpens')) {\n        obj['uniqueOpens'] = ApiClient.convertToType(data['uniqueOpens'], 'Number');\n      }\n      if (data.hasOwnProperty('spamReports')) {\n        obj['spamReports'] = ApiClient.convertToType(data['spamReports'], 'Number');\n      }\n      if (data.hasOwnProperty('blocked')) {\n        obj['blocked'] = ApiClient.convertToType(data['blocked'], 'Number');\n      }\n      if (data.hasOwnProperty('invalid')) {\n        obj['invalid'] = ApiClient.convertToType(data['invalid'], 'Number');\n      }\n      if (data.hasOwnProperty('unsubscribed')) {\n        obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Date of the statistics\n   * @member {Date} date\n   */\n  exports.prototype['date'] = undefined;\n  /**\n   * Number of requests for the date\n   * @member {Number} requests\n   */\n  exports.prototype['requests'] = undefined;\n  /**\n   * Number of delivered emails for the date\n   * @member {Number} delivered\n   */\n  exports.prototype['delivered'] = undefined;\n  /**\n   * Number of hardbounces for the date\n   * @member {Number} hardBounces\n   */\n  exports.prototype['hardBounces'] = undefined;\n  /**\n   * Number of softbounces for the date\n   * @member {Number} softBounces\n   */\n  exports.prototype['softBounces'] = undefined;\n  /**\n   * Number of clicks for the date\n   * @member {Number} clicks\n   */\n  exports.prototype['clicks'] = undefined;\n  /**\n   * Number of unique clicks for the date\n   * @member {Number} uniqueClicks\n   */\n  exports.prototype['uniqueClicks'] = undefined;\n  /**\n   * Number of openings for the date\n   * @member {Number} opens\n   */\n  exports.prototype['opens'] = undefined;\n  /**\n   * Number of unique openings for the date\n   * @member {Number} uniqueOpens\n   */\n  exports.prototype['uniqueOpens'] = undefined;\n  /**\n   * Number of complaints (spam reports) for the date\n   * @member {Number} spamReports\n   */\n  exports.prototype['spamReports'] = undefined;\n  /**\n   * Number of blocked emails for the date\n   * @member {Number} blocked\n   */\n  exports.prototype['blocked'] = undefined;\n  /**\n   * Number of invalid emails for the date\n   * @member {Number} invalid\n   */\n  exports.prototype['invalid'] = undefined;\n  /**\n   * Number of unsubscribed emails for the date\n   * @member {Number} unsubscribed\n   */\n  exports.prototype['unsubscribed'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n"]},"metadata":{},"sourceType":"script"}