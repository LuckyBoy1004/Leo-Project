{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Boulot\\\\Nivid\\\\src\\\\components\\\\utilities\\\\Title.js\";\n\nconst Title = ({\n  type,\n  color,\n  font,\n  align,\n  value,\n  onClick,\n  customClass\n}) => {\n  if (type === \"h1\") {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: onClick,\n      className: `bigTitle ${customClass}`,\n      style: {\n        color: color,\n        fontFamily: font,\n        textAlign: align\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 16\n    }, this);\n  } else if (type === \"h2\") {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onClick,\n      className: `bigTitle ${customClass}`,\n      style: {\n        color: color,\n        fontFamily: font,\n        textAlign: align\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  } else if (type === \"h3\") {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      onClick: onClick,\n      className: `bigTitle ${customClass}`,\n      style: {\n        color: color,\n        fontFamily: font,\n        textAlign: align\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_c = Title;\nexport default Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/src/components/utilities/Title.js"],"names":["Title","type","color","font","align","value","onClick","customClass","fontFamily","textAlign"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,KAA5B;AAAmCC,EAAAA,OAAnC;AAA4CC,EAAAA;AAA5C,CAAD,KAA+D;AACzE,MAAIN,IAAI,KAAK,IAAb,EAAmB;AACf,wBAAO;AAAI,MAAA,OAAO,EAAEK,OAAb;AAAsB,MAAA,SAAS,EAAG,YAAWC,WAAY,EAAzD;AAA4D,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAEA,KAAT;AAAgBM,QAAAA,UAAU,EAAEL,IAA5B;AAAkCM,QAAAA,SAAS,EAAEL;AAA7C,OAAnE;AAAA,gBAA0HC;AAA1H;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACpB,wBAAO;AAAI,MAAA,OAAO,EAAEK,OAAb;AAAsB,MAAA,SAAS,EAAG,YAAWC,WAAY,EAAzD;AAA4D,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAEA,KAAT;AAAgBM,QAAAA,UAAU,EAAEL,IAA5B;AAAkCM,QAAAA,SAAS,EAAEL;AAA7C,OAAnE;AAAA,gBAA0HC;AAA1H;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFI,MAGA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACpB,wBAAO;AAAI,MAAA,OAAO,EAAEK,OAAb;AAAsB,MAAA,SAAS,EAAG,YAAWC,WAAY,EAAzD;AAA4D,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAEA,KAAT;AAAgBM,QAAAA,UAAU,EAAEL,IAA5B;AAAkCM,QAAAA,SAAS,EAAEL;AAA7C,OAAnE;AAAA,gBAA0HC;AAA1H;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAVD;;KAAML,K;AAYN,eAAeA,KAAf","sourcesContent":["const Title = ({ type, color, font, align, value, onClick, customClass }) => {\r\n    if (type === \"h1\") {\r\n        return <h1 onClick={onClick} className={`bigTitle ${customClass}`} style={{ color: color, fontFamily: font, textAlign: align }}>{value}</h1>\r\n    }\r\n    else if (type === \"h2\") {\r\n        return <h2 onClick={onClick} className={`bigTitle ${customClass}`} style={{ color: color, fontFamily: font, textAlign: align }}>{value}</h2>\r\n    }\r\n    else if (type === \"h3\") {\r\n        return <h3 onClick={onClick} className={`bigTitle ${customClass}`} style={{ color: color, fontFamily: font, textAlign: align }}>{value}</h3>\r\n    }\r\n}\r\n\r\nexport default Title;"]},"metadata":{},"sourceType":"module"}