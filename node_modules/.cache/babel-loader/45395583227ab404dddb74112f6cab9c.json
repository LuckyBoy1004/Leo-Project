{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.GetAccountRelayData = factory(root.SibApiV3Sdk.ApiClient);\n  }\n})(this, function (ApiClient) {\n  'use strict';\n  /**\n   * The GetAccountRelayData model module.\n   * @module model/GetAccountRelayData\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetAccountRelayData</code>.\n   * Data regarding the transactional email account\n   * @alias module:model/GetAccountRelayData\n   * @class\n   * @param userName {String} Email to use as login on transactional platform\n   * @param relay {String} URL of the SMTP Relay\n   * @param port {Number} Port used for SMTP Relay\n   */\n\n  var exports = function exports(userName, relay, port) {\n    var _this = this;\n\n    _this['userName'] = userName;\n    _this['relay'] = relay;\n    _this['port'] = port;\n  };\n  /**\n   * Constructs a <code>GetAccountRelayData</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetAccountRelayData} obj Optional instance to populate.\n   * @return {module:model/GetAccountRelayData} The populated <code>GetAccountRelayData</code> instance.\n   */\n\n\n  exports.constructFromObject = function (data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('userName')) {\n        obj['userName'] = ApiClient.convertToType(data['userName'], 'String');\n      }\n\n      if (data.hasOwnProperty('relay')) {\n        obj['relay'] = ApiClient.convertToType(data['relay'], 'String');\n      }\n\n      if (data.hasOwnProperty('port')) {\n        obj['port'] = ApiClient.convertToType(data['port'], 'Number');\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * Email to use as login on transactional platform\n   * @member {String} userName\n   */\n\n\n  exports.prototype['userName'] = undefined;\n  /**\n   * URL of the SMTP Relay\n   * @member {String} relay\n   */\n\n  exports.prototype['relay'] = undefined;\n  /**\n   * Port used for SMTP Relay\n   * @member {Number} port\n   */\n\n  exports.prototype['port'] = undefined;\n  return exports;\n});","map":{"version":3,"sources":["F:/My Project/Leo/Nivid/node_modules/sib-api-v3-sdk/src/model/GetAccountRelayData.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","GetAccountRelayData","ApiClient","userName","relay","port","_this","constructFromObject","data","obj","hasOwnProperty","convertToType","prototype","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,WAASA,IAAT,EAAeC,OAAf,EAAwB;AACvB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9C;AACAD,IAAAA,MAAM,CAAC,CAAC,WAAD,CAAD,EAAgBD,OAAhB,CAAN;AACD,GAHD,MAGO,IAAI,OAAOG,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AACvD;AACAD,IAAAA,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAACK,OAAO,CAAC,cAAD,CAAR,CAAxB;AACD,GAHM,MAGA;AACL;AACA,QAAI,CAACN,IAAI,CAACO,WAAV,EAAuB;AACrBP,MAAAA,IAAI,CAACO,WAAL,GAAmB,EAAnB;AACD;;AACDP,IAAAA,IAAI,CAACO,WAAL,CAAiBC,mBAAjB,GAAuCP,OAAO,CAACD,IAAI,CAACO,WAAL,CAAiBE,SAAlB,CAA9C;AACD;AACF,CAdA,EAcC,IAdD,EAcO,UAASA,SAAT,EAAoB;AAC1B;AAKA;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAIJ,OAAO,GAAG,SAAVA,OAAU,CAASK,QAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC5C,QAAIC,KAAK,GAAG,IAAZ;;AAEAA,IAAAA,KAAK,CAAC,UAAD,CAAL,GAAoBH,QAApB;AACAG,IAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBF,KAAjB;AACAE,IAAAA,KAAK,CAAC,MAAD,CAAL,GAAgBD,IAAhB;AACD,GAND;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEP,EAAAA,OAAO,CAACS,mBAAR,GAA8B,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAChD,QAAID,IAAJ,EAAU;AACRC,MAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIX,OAAJ,EAAb;;AAEA,UAAIU,IAAI,CAACE,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACnCD,QAAAA,GAAG,CAAC,UAAD,CAAH,GAAkBP,SAAS,CAACS,aAAV,CAAwBH,IAAI,CAAC,UAAD,CAA5B,EAA0C,QAA1C,CAAlB;AACD;;AACD,UAAIA,IAAI,CAACE,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAChCD,QAAAA,GAAG,CAAC,OAAD,CAAH,GAAeP,SAAS,CAACS,aAAV,CAAwBH,IAAI,CAAC,OAAD,CAA5B,EAAuC,QAAvC,CAAf;AACD;;AACD,UAAIA,IAAI,CAACE,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC/BD,QAAAA,GAAG,CAAC,MAAD,CAAH,GAAcP,SAAS,CAACS,aAAV,CAAwBH,IAAI,CAAC,MAAD,CAA5B,EAAsC,QAAtC,CAAd;AACD;AACF;;AACD,WAAOC,GAAP;AACD,GAfD;AAiBA;AACF;AACA;AACA;;;AACEX,EAAAA,OAAO,CAACc,SAAR,CAAkB,UAAlB,IAAgCC,SAAhC;AACA;AACF;AACA;AACA;;AACEf,EAAAA,OAAO,CAACc,SAAR,CAAkB,OAAlB,IAA6BC,SAA7B;AACA;AACF;AACA;AACA;;AACEf,EAAAA,OAAO,CAACc,SAAR,CAAkB,MAAlB,IAA4BC,SAA5B;AAIA,SAAOf,OAAP;AACD,CAtFA,CAAD","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.GetAccountRelayData = factory(root.SibApiV3Sdk.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetAccountRelayData model module.\n   * @module model/GetAccountRelayData\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetAccountRelayData</code>.\n   * Data regarding the transactional email account\n   * @alias module:model/GetAccountRelayData\n   * @class\n   * @param userName {String} Email to use as login on transactional platform\n   * @param relay {String} URL of the SMTP Relay\n   * @param port {Number} Port used for SMTP Relay\n   */\n  var exports = function(userName, relay, port) {\n    var _this = this;\n\n    _this['userName'] = userName;\n    _this['relay'] = relay;\n    _this['port'] = port;\n  };\n\n  /**\n   * Constructs a <code>GetAccountRelayData</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetAccountRelayData} obj Optional instance to populate.\n   * @return {module:model/GetAccountRelayData} The populated <code>GetAccountRelayData</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('userName')) {\n        obj['userName'] = ApiClient.convertToType(data['userName'], 'String');\n      }\n      if (data.hasOwnProperty('relay')) {\n        obj['relay'] = ApiClient.convertToType(data['relay'], 'String');\n      }\n      if (data.hasOwnProperty('port')) {\n        obj['port'] = ApiClient.convertToType(data['port'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Email to use as login on transactional platform\n   * @member {String} userName\n   */\n  exports.prototype['userName'] = undefined;\n  /**\n   * URL of the SMTP Relay\n   * @member {String} relay\n   */\n  exports.prototype['relay'] = undefined;\n  /**\n   * Port used for SMTP Relay\n   * @member {Number} port\n   */\n  exports.prototype['port'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n"]},"metadata":{},"sourceType":"script"}