{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Boulot\\\\Nivid\\\\src\\\\context\\\\userContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport { useFirebase } from \"../assets/base-context\";\nimport publicIp from \"public-ip\";\nimport Stripe from \"stripe\";\nimport functions from \"firebase/firebase-functions\";\nimport { inputAdornmentClasses } from \"@mui/material\";\nimport { createStripeSubscribe } from \"../../functions\";\n\nvar SibApiV3Sdk = require(\"sib-api-v3-sdk\");\n\nvar defaultClient = SibApiV3Sdk.ApiClient.instance;\nlet myAPIKey = process.env.REACT_APP_SENDINBLUE_APIKEY;\nvar apiKey = defaultClient.authentications[\"api-key\"];\napiKey.apiKey = myAPIKey;\nvar partnerKey = defaultClient.authentications[\"partner-key\"];\npartnerKey.apiKey = process.env.REACT_APP_SENDINBLUE_APIKEY;\nvar apiInstance = new SibApiV3Sdk.ContactsApi();\nvar createContact = new SibApiV3Sdk.CreateContact();\nvar apiInstanceSend = new SibApiV3Sdk.TransactionalEmailsApi();\nvar sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail(); // Ce fichier comporte toutes les fonctions d'appels et de traitement bdd, et du context global.\n// Il englobe l'app dans App.js\n\nexport const UserContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(UserContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n\n  const firebaseContext = useFirebase();\n  const auth = firebaseContext.auth();\n  const provider = firebaseContext.provider();\n  const storage = firebaseContext.storage();\n  const firestore = firebaseContext.firestore();\n  let datePlusYear = new Date();\n  datePlusYear.setFullYear(datePlusYear.getFullYear() + 1);\n  const initialEvent = {\n    name: \"\",\n    date: datePlusYear,\n    startAt: 0,\n    endAt: 86360,\n    people: 50,\n    placeSize: 250,\n    place: \"\",\n    latLng: [],\n    budget: 50,\n    budgetLeft: 0,\n    status: null,\n    id: null,\n    choosedServices: []\n  };\n  const initialSeller = {\n    companyName: \"\",\n    adress: \"\",\n    siret: \"\",\n    website: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    description: \"\",\n    category: \"\",\n    subcategory: \"\",\n    image_path: \"\"\n  };\n  const [user, setUser] = useState();\n  const [seller, setSeller] = useState(initialSeller);\n  const [event, setEvent] = useState(initialEvent);\n  const [loading, setLoading] = useState(true);\n  const [currentStepProcess, setCurrentStepProcess] = useState(0);\n  const [loadingButtonAddToCard, setLoadingButtonAddToCard] = useState(true);\n  const refUsers = firestore.collection(\"users\");\n  const refEvents = firestore.collection(\"events\");\n  const refSellers = firestore.collection(\"sellers\");\n  const refSales = firestore.collection(\"sales\");\n  const [homeSellersDisplay, setHomeSellersDisplay] = useState([]);\n  const [isCardWidgetOpen, setIsCardWidgetOpen] = useState(false);\n  console.log(isCardWidgetOpen);\n  const createStripeCheckout = user ? firebase.functions().httpsCallable(\"createStripeCheckout\") : null;\n  const stripe = user ? window.Stripe(\"pk_test_51InLbZBwyEuW61Pj3yTYQlp31JobhK9vIKh32GColDUhXcdtzaKhWF5mVRDa9SGw7HujSuEDPCwvh40GEuo6uJxA00iqmaUXQp\") : null;\n  const checkStripeReturn = user ? firebase.functions().httpsCallable(\"checkStripeReturn\") : null;\n  useEffect(() => {\n    auth.onAuthStateChanged(data => {\n      return handleAuthChanged(data);\n    });\n  }, []);\n\n  async function handleAuthChanged(data) {\n    if (data) {\n      const isSeller = await isThisUserSeller(data.uid);\n      const isUser = await isThisUserUser(data.uid);\n\n      if (isSeller && !isUser) {\n        const sellerData = await getSellerDataFromDB(data.uid);\n        const sellerServices = await getServicesOfCurrentSellerFromDB();\n        setSeller({ ...initialSeller,\n          ...data,\n          ...sellerData,\n          services: sellerServices\n        });\n        setUser();\n        setLoading(false);\n      } else if (isUser && !isSeller) {\n        if (data.emailVerified === false) {\n          setUser();\n          setSeller();\n          setLoading(false);\n          return;\n        }\n\n        setUser(data);\n        setSeller();\n        const eventData = await getEvent(data.uid);\n        eventData && eventData !== null ? await getChoosedServices(eventData) : setEvent(initialEvent);\n        setLoading(false);\n      } else if (isSeller && isUser) {\n        const sellerData = await getSellerDataFromDB(data.uid);\n        setSeller({ ...initialSeller,\n          ...data,\n          ...sellerData\n        });\n        setUser(data);\n        const eventData = await getEvent(data.uid);\n        eventData && eventData !== null ? await getChoosedServices(eventData) : setEvent(initialEvent);\n        setLoading(false);\n      }\n    } else {\n      setSeller();\n      setUser();\n      setLoading(false);\n    }\n  }\n\n  async function getSellerDataFromDB(id) {\n    const query = await refSellers.doc(id).get();\n    const result = query.data();\n    return result;\n  }\n\n  async function isThisUserSeller(id) {\n    const doc = await refSellers.doc(id).get();\n    if (doc.exists) return true;\n    return false;\n  }\n\n  async function isThisUserUser(id) {\n    const doc = await refUsers.doc(id).get();\n    if (doc.exists) return true;\n    return false;\n  }\n\n  async function getEvent(uid) {\n    const getEvent = await refEvents.where(\"user\", \"==\", uid).get();\n\n    if (getEvent.docs.length > 0) {\n      let item = {};\n      getEvent.docs.forEach(doc => {\n        const data = doc.data();\n\n        if (data.status && data.status !== \"passed\") {\n          item = { ...data\n          };\n          item.date = data.date.toMillis();\n          item.id = doc.id;\n        }\n      });\n      return item && item.status && item.status !== \"passed\" ? item : null;\n    } else {\n      return null;\n    }\n  }\n\n  async function addEvent(item) {\n    const myEvent = { ...item\n    };\n    delete myEvent.id;\n    let myNewEvent;\n\n    if (item.status !== \"creating\") {\n      myNewEvent = await createEvent(myEvent);\n    }\n\n    if (item.status === \"creating\") {\n      // event existant\n      myNewEvent = await updateEvent(item, myEvent);\n    }\n\n    await getChoosedServices(myNewEvent);\n  }\n\n  async function createEvent(myEvent) {\n    const req = await refUsers.doc(myEvent.user).get();\n    const res = req.data();\n    var identifier = res.email;\n    var updateContact = {\n      attributes: {\n        NOTIF_DATE: new Date(myEvent.date),\n        EVENTID: event.id\n      }\n    };\n    apiInstance.updateContact(identifier, updateContact).then(() => {}, error => {\n      console.error(error);\n    });\n    myEvent.status = \"creating\";\n    const docRef = await refEvents.add({ ...myEvent,\n      date: new Date(myEvent.date)\n    });\n    myEvent.id = docRef.id;\n    return myEvent;\n  }\n\n  async function updateEvent(item, myEvent) {\n    if (item.place !== event.place) {\n      const getServices = await refEvents.doc(item.id).collection(\"services\").get();\n      getServices.docs.forEach(async doc => {\n        await refEvents.doc(item.id).collection(\"services\").doc(doc.id).delete();\n      });\n    }\n\n    await refEvents.doc(item.id).update({ ...myEvent,\n      date: new Date(myEvent.date)\n    });\n    myEvent.id = item.id;\n    return myEvent;\n  }\n\n  async function getBudgetLeft(budget, choosedServices) {\n    let totalPrice = 0;\n    choosedServices.forEach(item => {\n      if (item.variations && item.variations.length > 0) {\n        totalPrice += item.variations.filter(vari => vari.name === item.variation)[0].price * item.quantity;\n      } else totalPrice += item.price * item.quantity;\n    });\n    const result = budget - totalPrice;\n    return result;\n  }\n\n  async function getChoosedServices(item) {\n    let choosedServices = [];\n    console.log(item);\n    const services = await refEvents.doc(item.id).collection(\"services\").get();\n    services.forEach(doc => {\n      choosedServices.push({ ...doc.data(),\n        uid: doc.id\n      });\n    });\n    const queryPrice = await getBudgetLeft(item.budget, choosedServices);\n    const neWObject = { ...item,\n      budgetLeft: queryPrice,\n      choosedServices: choosedServices\n    };\n    return setEvent(neWObject);\n  }\n\n  async function login(email, password) {\n    console.log(user);\n    return await auth.signInWithEmailAndPassword(email, password).then(data => {\n      if (data.user.emailVerified === false) {\n        setSeller();\n        setUser();\n        return false;\n      }\n\n      setUser(data.user);\n      return true;\n    });\n  }\n\n  async function verifyLogin(email, password) {\n    const data = await auth.signInWithEmailAndPassword(email, password);\n    return data;\n  }\n\n  async function subscribe(email, password, firstName, name, tel, gender, birthDate) {\n    return auth.createUserWithEmailAndPassword(email, password).then(async userData => {\n      await userData.user.updateProfile({\n        displayName: firstName\n      });\n      await refUsers.doc(userData.user.uid).set({\n        firstName: firstName,\n        name: name,\n        tel: tel,\n        gender: gender,\n        birthDate: birthDate,\n        email: email\n      }).catch(error => {\n        return console.log(error);\n      });\n      userData.user.sendEmailVerification();\n      setUser();\n      setSeller();\n      sendInBlue_addContactSubscribe(email, firstName);\n      return true;\n    }).catch(error => {\n      return error.code;\n    });\n  }\n\n  async function sellerSubscribe(companyName, adress, siret, website, firstName, lastName, email, phone, password, latLng, referral) {\n    const referralToken = Date.now().toString().substr(0, 5) + Math.random().toString().substr(2, 7);\n    return auth.createUserWithEmailAndPassword(email, password).then(async userData => {\n      await userData.user.updateProfile({\n        displayName: firstName\n      });\n      await refSellers.doc(userData.user.uid).set({\n        companyName: companyName,\n        adress: adress,\n        latLng: latLng,\n        siret: siret,\n        website: website,\n        firstName: firstName,\n        lastName: lastName,\n        phone: phone,\n        email: email,\n        image_path: \"\",\n        status: \"subscribing\",\n        referralToken: referralToken,\n        referral: referral\n      }).catch(error => {\n        return console.log(error);\n      });\n\n      if (referral.length === 12) {\n        await updateSellerAfterReferralNewSeller(referral, userData.user.uid);\n        sendInBlue_sendToParrainAboutNewReferral(referral);\n      }\n\n      sendInBlue_addContactSubscribe(email, firstName, lastName, userData.user.uid);\n      return userData.user.sendEmailVerification();\n    }).catch(error => {\n      return error.code;\n    });\n  }\n\n  async function updateSellerAfterReferralNewSeller(referral, newSellerUid) {\n    const docs = await refSellers.where(\"referralToken\", \"==\", referral).get();\n    let docSeller = {};\n    docs.forEach(doc => {\n      docSeller = { ...doc.data(),\n        uid: doc.id\n      };\n    });\n    console.log(docSeller);\n\n    if (docSeller.uid !== undefined && docSeller.uid !== null && docSeller.uid.length > 10) {\n      refSellers.doc(docSeller.uid).collection(\"referral\").add({\n        newSeller: newSellerUid,\n        date: Date.now()\n      }).catch(error => {\n        return console.log(error);\n      });\n    }\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  async function signInWithGoogle() {\n    const result = await auth.signInWithPopup(provider);\n    /** @type {firebase.auth.OAuthCredential} */\n\n    var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n    var token = credential.accessToken; // The signed-in user info.\n\n    var user = result.user;\n    var doc = await refUsers.doc(user.uid).get();\n\n    if (doc.exists) {\n      setUser(auth.currentUser);\n    } else {\n      await refUsers.doc(user.uid).set({\n        firstName: user.displayName,\n        email: user.email\n      });\n      setUser(auth.currentUser);\n    }\n  } // Ajouter un service au panier ( BBD et state )\n\n\n  async function addToCard(sellerID, item, quantity) {\n    // Checkons si ce service est deja present dans la liste de cette event\n    const newEvent = { ...event\n    };\n    const refCurrentService = refEvents.doc(event.id).collection(\"services\");\n    const doc = await refCurrentService.where(\"id\", \"==\", item.id).where(\"variation\", \"==\", item.variation).get();\n    const refService = doc.exists && doc.data(); // Si le service existe dans les service séléctionnés pour cet event, on actualise juste en renseignant la nouvelle quantity ( BBD et state )\n\n    if (doc.docs.length > 0) {\n      await refCurrentService.doc(doc.docs[0].id).update({\n        quantity: quantity\n      }); //Ici on chope le service concerné dans le state, puis on le modifie pour ajouter la quantity, et on actualise le state\n\n      const services = [...event.choosedServices];\n      const service = services.find(service => service.variation === item.variation && service.id === item.id);\n      service.quantity = quantity;\n      newEvent.choosedServices = services;\n      getChoosedServices(newEvent);\n      setLoadingButtonAddToCard(false);\n    } // Mais si le service n'existe pas, on l'ajoute completement ( BBD et state )\n    else {\n        const itemCopy = { ...item\n        };\n        itemCopy.quantity = quantity;\n        const newService = [];\n        await refCurrentService.add(itemCopy);\n        newService.push(item);\n        newEvent.choosedServices.push(newService[0]);\n        getChoosedServices(newEvent);\n        setLoadingButtonAddToCard(false);\n      }\n\n    setIsCardWidgetOpen(true);\n  }\n\n  function getServiceQuantityInCard(id) {\n    const services = [...event.choosedServices];\n    const servicefiltered = services.filter(service => service.id === id);\n    let count = 0;\n    if (servicefiltered.length > 1) servicefiltered.forEach(service => count += service.quantity);else if (servicefiltered.length > 0) count += servicefiltered[0].quantity;\n    return count;\n  }\n\n  async function updateQuantityService(serviceID, quantity) {\n    if (quantity === undefined) return;\n    quantity = parseInt(quantity);\n\n    if (quantity !== 0) {\n      await refEvents.doc(event.id).collection(\"services\").doc(serviceID).update({\n        quantity: quantity\n      });\n    } else {\n      await refEvents.doc(event.id).collection(\"services\").doc(serviceID).delete();\n    }\n\n    const eventData = await getEvent(auth.currentUser.uid);\n    await getChoosedServices(eventData);\n    setLoading(false);\n    return;\n  }\n\n  function formatLabelTimePicker(secs) {\n    if (secs === 86400) secs = 86360;\n    var minutes = Math.floor(secs / 60);\n    var hours = Math.floor(minutes / 60);\n    minutes = minutes % 60;\n    return `${hours}:${(\"0\" + minutes).slice(-2)}`;\n  }\n\n  async function getAuthUserFromHisEmail(email) {\n    return auth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    }).catch(function (error) {\n      if (error.code === \"auth/invalid-email\") {\n        return \"invalid\";\n      } else if (error.code === \"auth/user-not-found\") {\n        return \"notexist\";\n      }\n    });\n  }\n\n  async function updateUserEmail(email) {\n    var user = auth.currentUser;\n    await user.updateEmail(email);\n    await refUsers.doc(user.uid).update({\n      email: email\n    });\n    await user.sendEmailVerification();\n    return true;\n  }\n\n  async function getCurrentUserProfil() {\n    var uid = auth.currentUser.uid;\n    const doc = await refUsers.doc(uid).get();\n    return doc.exists ? doc.data() : null;\n  }\n\n  async function updateCurrentUserProfil(data) {\n    var uid = auth.currentUser.uid;\n    refUsers.doc(uid).update(data);\n    user.updateProfile({\n      displayName: data.firstName\n    });\n  }\n\n  async function setImageSellerDB(url, token) {\n    await refSellers.doc(auth.currentUser.uid).update({\n      image_path: {\n        url: url,\n        token: token\n      }\n    });\n  }\n\n  async function addSellerDescription(data, imgURL) {\n    await refSellers.doc(auth.currentUser.uid).update({\n      description: data.description,\n      category: data.category,\n      subcategory: data.subcategory\n    });\n    setSeller({ ...seller,\n      description: data.description,\n      category: data.category,\n      subcategory: data.subcategory,\n      image_path: imgURL !== null && imgURL\n    });\n  }\n\n  async function addSellerServices(services) {\n    setSeller({ ...seller,\n      services: services\n    });\n    services.forEach(async service => {\n      if (service.id.length > 2) {\n        return await refSellers.doc(auth.currentUser.uid).collection(\"services\").doc(service.id).update(service);\n      }\n\n      return await refSellers.doc(auth.currentUser.uid).collection(\"services\").add(service);\n    });\n  }\n\n  async function addOneSellerService(service) {\n    if (service.id.length > 2) {\n      return await refSellers.doc(auth.currentUser.uid).collection(\"services\").doc(service.id).update(service);\n    }\n\n    const docRef = await refSellers.doc(auth.currentUser.uid).collection(\"services\").add(service);\n    return docRef.id;\n  }\n\n  async function getServicesOfCurrentSellerFromDB() {\n    const services = await refSellers.doc(auth.currentUser.uid).collection(\"services\").get();\n    var result = [];\n    services.docs.forEach(doc => {\n      const newResult = { ...doc.data(),\n        id: doc.id\n      };\n      result.push(newResult);\n    });\n    return result;\n  }\n\n  async function addSellerDocuments(documents) {\n    return await refSellers.doc(auth.currentUser.uid).update({\n      documents: documents\n    });\n  }\n\n  async function getSellerDocumentsFromDB() {\n    const query = await refSellers.doc(auth.currentUser.uid).get();\n    const doc = query.data();\n    const result = doc.documents && doc.documents;\n    if (result === undefined) return null;\n    return result;\n  }\n\n  async function setSellerStatus(sellerId, status) {\n    await refSellers.doc(sellerId).update({\n      status: status\n    });\n    return setSeller({ ...seller,\n      status: status\n    });\n  }\n\n  async function updateSellerDocumentsStatus(sellerId, newDocumentsArray) {\n    await refSellers.doc(sellerId).update({\n      documents: newDocumentsArray\n    });\n    newDocumentsArray.status === \"rejected\" && (await refSellers.doc(sellerId).update({\n      status: \"subscribing\"\n    }));\n  }\n\n  async function getSellersInDbWithUids(ids) {\n    let sellers = [];\n\n    for (const id in ids) {\n      const req = await refSellers.doc(ids[id]).get();\n      let result = req.data();\n      result.uid = req.id;\n      sellers = [...sellers, result];\n\n      if (sellers.length === ids.length) {\n        return sellers;\n      }\n    }\n  } // TODO ICi on a la fonction pour delete la photo de profil qu'on ecrase en a remplaceant, faudra faire la meme avec les autres endroits du site avec uploda de picture\n\n\n  async function deleteOldSellerPicture(tokens, type) {\n    tokens.forEach(token => {\n      var imageRef = type && type === \"services\" ? storage.ref(\"services\").child(token) : storage.ref(\"sellers\").child(token);\n      imageRef.delete().catch(error => console.log(error));\n    });\n  }\n\n  async function addSalesInDB(sales) {\n    return sales.map(async sale => await refSales.add(sale));\n  }\n\n  async function getSalesOfEventIdFromDB(eventId) {\n    const req = await refSales.where(\"eventID\", \"==\", eventId).get();\n    let salesOfEvent = [];\n    req.forEach(doc => salesOfEvent.push(doc.data()));\n    return salesOfEvent;\n  }\n\n  async function getSalesOfSellerIdFromDB(sellerId) {\n    const req = await refSales.where(\"sellerID\", \"==\", sellerId).get();\n    let salesOfSeller = [];\n    req.forEach(doc => salesOfSeller.push(doc.data()));\n    return salesOfSeller;\n  }\n\n  async function updateEventStatus(status) {\n    await refEvents.doc(event.id).update({\n      status: status\n    });\n    return setEvent({ ...event,\n      status: status\n    });\n  }\n\n  async function clearEvent() {\n    setEvent(initialEvent);\n  }\n\n  async function getEventOfSaleFromDB(eventId) {\n    const req = await refEvents.doc(eventId).get();\n    let newEvent = req.data();\n    newEvent.choosedServices = [];\n    const reqServices = await refEvents.doc(eventId).collection(\"services\").get();\n    reqServices.forEach(doc => {\n      newEvent.choosedServices = [...newEvent.choosedServices, doc.data()];\n    });\n    return newEvent;\n  }\n\n  function formateToDate(timestamp) {\n    const date = new Date(timestamp);\n    const year = date.getUTCFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return `${day}/${month < 10 ? \"0\" : \"\"}${month}/${year}`;\n  }\n\n  function formateToDateWithWords(timestamp) {\n    const date = new Date(timestamp.seconds ? timestamp.seconds * 1000 : timestamp);\n    const year = date.getUTCFullYear();\n    let month = date.getMonth() + 1;\n    const day = date.getDate();\n    month = month === 1 ? \"janv\" : month === 2 ? \"févr\" : month === 3 ? \"mars\" : month === 4 ? \"avril\" : month === 5 ? \"mai\" : month === 6 ? \"juin\" : month === 7 ? \"juil\" : month === 8 ? \"aout\" : month === 9 ? \"sept\" : month === 10 ? \"oct\" : month === 11 ? \"nov\" : month === 12 && \"déc\";\n    return `${day} ${month} ${year}`;\n  }\n\n  function formateToDateWithFullWords(timestamp) {\n    const date = new Date(timestamp);\n    const year = date.getUTCFullYear();\n    let month = date.getMonth() + 1;\n    const day = date.getDate();\n    month = month === 1 ? \"janvier\" : month === 2 ? \"février\" : month === 3 ? \"mars\" : month === 4 ? \"avril\" : month === 5 ? \"mai\" : month === 6 ? \"juin\" : month === 7 ? \"juillet\" : month === 8 ? \"aout\" : month === 9 ? \"septembre\" : month === 10 ? \"octobre\" : month === 11 ? \"novembre\" : month === 12 && \"décembre\";\n    return `${day} ${month} ${year}`;\n  }\n\n  async function updateSaleStatusInDB(saleID, sellerID, status) {\n    const req = await refSales.where(\"sellerID\", \"==\", sellerID).where(\"id\", \"==\", saleID).get();\n    let saleUID;\n    let userID;\n    let sale;\n    req.forEach(doc => {\n      sale = doc.data();\n      saleUID = doc.id;\n      userID = sale.userID;\n    });\n    const req2 = await refUsers.doc(userID).get();\n    const user = req2.data();\n    await refSales.doc(saleUID).update({\n      status\n    });\n    sendInBlue_sendNotificationToUserOfSaleStatus(user, seller.companyName, sale);\n  }\n\n  async function updateSaleNote(saleID, note) {\n    console.log(saleID);\n    const req = await refSales.where(\"sellerID\", \"==\", auth.currentUser.uid).where(\"id\", \"==\", saleID).get();\n    let saleUID;\n    req.forEach(doc => saleUID = doc.id);\n    await refSales.doc(saleUID).update({\n      note\n    });\n    return;\n  }\n\n  function dateTodayMinusByDay(day) {\n    const date = new Date();\n    date.setHours(date.getHours() - 24 * day);\n    return date;\n  }\n\n  async function addViewsOfSeller(sellerID) {\n    const visitorIP = await publicIp.v4();\n    const reqViews = await refSellers.doc(sellerID).collection(\"views\").get();\n    let recentViews = [];\n    reqViews.forEach(async doc => {\n      const view = doc.data();\n\n      if (view.ip === visitorIP && view.date.seconds * 1000 > dateTodayMinusByDay(1)) {\n        recentViews = [...recentViews, view];\n      }\n    });\n\n    if (recentViews.length === 0) {\n      await refSellers.doc(sellerID).collection(\"views\").add({\n        date: new Date(Date.now()),\n        ip: visitorIP\n      });\n    }\n  }\n\n  async function getViewsOfSeller(sellerID) {\n    const reqViews = await refSellers.doc(sellerID).collection(\"views\").get();\n    let res = [];\n    reqViews.forEach(doc => res.push(doc.data()));\n    return res;\n  }\n\n  async function isSellerAllowedToModifyAndDeleteService(serviceID) {\n    const req = await refSales.where(\"sellerID\", \"==\", auth.currentUser.uid).get();\n    let sellerSales = [];\n    req.forEach(doc => sellerSales.push(doc.data()));\n    let isAllowed = true;\n    sellerSales.forEach(sale => {\n      if (sale.status !== \"passed\" && sale.status !== \"rejected\") {\n        sale.choosedServices.forEach(service => {\n          if (service.id === serviceID) isAllowed = false;\n        });\n      }\n    });\n    return isAllowed;\n  }\n\n  async function deleteServiceOfSeller(serviceID) {\n    return await refSellers.doc(auth.currentUser.uid).collection(\"services\").doc(serviceID).delete();\n  }\n\n  async function updateSellerProfil(data) {\n    await auth.currentUser.updateProfile({\n      displayName: data.firstName\n    });\n    await refSellers.doc(auth.currentUser.uid).update({\n      companyName: data.companyName,\n      website: data.website,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      phone: data.phone\n    });\n    return setSeller({ ...seller,\n      companyName: data.companyName,\n      website: data.website,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      phone: data.phone\n    });\n  }\n\n  async function getSellerReferralCountFromDB() {\n    const res = await refSellers.doc(auth.currentUser.uid).collection(\"referral\").get();\n    let newArray = [];\n    res.forEach(doc => newArray.push(doc.data()));\n    let finalArray = [];\n\n    for (const item of newArray) {\n      const req = await refSellers.doc(item.newSeller).get();\n      const res = req.data();\n      if (res.status === \"opened\") finalArray = [...finalArray, res];\n    }\n\n    return finalArray.length;\n  }\n\n  async function getEventFromUid(uid) {\n    const req = await refEvents.doc(uid).get();\n    return req.data();\n  }\n\n  async function getReviewsOfSellerUid(uid) {\n    const req = await refSellers.doc(uid).collection(\"reviews\").get();\n    let reviews = [];\n    req.forEach(doc => reviews.push(doc.data()));\n    return reviews;\n  }\n\n  async function addReviewOfSellerUid(sellerUID, eventID, note, comment, name) {\n    return await refSellers.doc(sellerUID).collection(\"reviews\").add({\n      eventID: eventID,\n      note: note,\n      comment: comment,\n      name: name,\n      date: new Date(),\n      eventDate: event.date\n    }).then(res => {\n      setTotalNoteOfSeller(sellerUID);\n      return true;\n    }).catch(error => console.log(error));\n  }\n\n  async function setTotalNoteOfSeller(sellerUID) {\n    const reqReviews = await refSellers.doc(sellerUID).collection(\"reviews\").get();\n    const reviewsCount = reqReviews.docs.length;\n    let totalNote = 0;\n    reqReviews.forEach(doc => {\n      const data = doc.data();\n      totalNote += data.note;\n    });\n    let sellerNote = totalNote / reviewsCount;\n    sellerNote = sellerNote.toFixed();\n    await refSellers.doc(sellerUID).update({\n      note: sellerNote\n    });\n    return true;\n  }\n\n  async function getSellerPosition(sellerUID) {\n    const reqSellers = await refSellers.get();\n    let sellersWithNote = [];\n    reqSellers.forEach(doc => {\n      const data = doc.data();\n      if (data.note === undefined) return;\n      const seller = {\n        note: data.note,\n        id: doc.id\n      };\n      sellersWithNote.push(seller);\n    });\n    sellersWithNote.sort((a, b) => {\n      if (a.note > b.note) return -1;\n      if (a.note < b.note) return 1;\n      return 0;\n    });\n    const index = sellersWithNote.findIndex(item => item.id === sellerUID);\n    return index + 1;\n  }\n\n  async function getSellersCount() {\n    const req = await refSellers.get();\n    return req.docs.length;\n  }\n\n  async function sendInBlue_addContactSubscribe(email, firstName, lastName, uid) {\n    createContact = {\n      email: email,\n      listIds: [4],\n      attributes: {\n        PRENOM: firstName,\n        NOM: lastName && lastName,\n        UID: uid ? uid : 0\n      }\n    };\n    apiInstance.createContact(createContact).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function sendInBlue_sendRecapToUserAfterPayment(email, sales, event) {\n    let newSales = [];\n    let paid = 0;\n    let total = 0;\n    sales.forEach(sale => {\n      refSellers.doc(sale.sellerID).get().then(doc => {\n        const seller = doc.data();\n        const newSale = { ...sale,\n          name: seller.companyName\n        };\n        newSales = [...newSales, newSale];\n        total = total + sale.total;\n        paid = paid + sale.paid;\n      });\n    });\n    sendSmtpEmail = {\n      to: [{\n        email: email\n      }],\n      params: {\n        sales: newSales,\n        event: event,\n        paid: paid,\n        total: total\n      },\n      templateId: 10,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function sendInBlue_sendNewSaleToSeller(email, services, event) {\n    sendSmtpEmail = {\n      to: [{\n        email: email\n      }],\n      params: {\n        services: services,\n        event: event\n      },\n      templateId: 12,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function sendInBlue_sendNotificationToSellerOfReview(email, name) {\n    sendSmtpEmail = {\n      to: [{\n        email: email\n      }],\n      params: {\n        name: name\n      },\n      templateId: 4,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function sendInBlue_sendNotificationToUserOfSaleStatus(user, prestName, sale) {\n    sendSmtpEmail = {\n      to: [{\n        email: user.email\n      }],\n      params: {\n        prestName: prestName,\n        userName: user.firstName,\n        services: sale.choosedServices\n      },\n      templateId: sale.status === \"rejected\" ? 8 : sale.status === \"validated\" && 9,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function getTotalAmountDueToSeller(sellerId) {\n    const req = await refSales.where(\"sellerID\", \"==\", sellerId !== undefined ? sellerId : auth.currentUser.uid).get();\n    let salesOfSeller = [];\n    req.forEach(doc => {\n      salesOfSeller = [...salesOfSeller, doc.data()];\n    });\n    const validSales = salesOfSeller.filter(sale => sale.total === sale.paid && sale.status === \"validated\"); // à mettre en passed je pense\n\n    const prices = validSales.map(sale => sale.price);\n    let finalAmount = 0;\n    prices.forEach(price => {\n      finalAmount = finalAmount + price;\n    });\n    return finalAmount;\n  }\n\n  async function sendInBlue_sendPaymentRequestToAdmin(sellerId) {\n    const amount = await getTotalAmountDueToSeller(sellerId);\n    sendSmtpEmail = {\n      to: [{\n        email: process.env.REACT_APP_ADMIN_EMAIL\n      }],\n      params: {\n        sellerId: sellerId,\n        amount: amount\n      },\n      templateId: 16,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  async function sendInBlue_sendBillRequestToAdmin(transactionID, sellerID) {\n    sendSmtpEmail = {\n      to: [{\n        email: process.env.REACT_APP_ADMIN_EMAIL\n      }],\n      params: {\n        sellerId: sellerID,\n        transactionId: transactionID\n      },\n      templateId: 17,\n      headers: {\n        \"X-Mailin-custom\": \"Content-Type:application/json|custom_header_2:custom_value_2\"\n      }\n    };\n    return apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n      return true;\n    }, function (error) {\n      console.error(error);\n      return false;\n    });\n  }\n\n  async function sendInBlue_addContactToNewsletter(email) {\n    createContact = {\n      email: email,\n      listIds: [5]\n    };\n    return apiInstance.createContact(createContact).then(function (data) {\n      return true;\n    }, function (error) {\n      console.log(error);\n      return false;\n    });\n  }\n\n  async function sendInBlue_sendInvitations(emails, message, user, event) {\n    let emailsArray = [];\n    let emailsArrayWithList = [];\n    emails.forEach(email => {\n      const newEntry = {\n        email: email\n      };\n      const newEntryList = {\n        email: email,\n        listIds: [6],\n        attributes: {\n          EVENT_DATE: new Date(event.date)\n        }\n      };\n      emailsArray = [...emailsArray, newEntry];\n      emailsArrayWithList = [...emailsArrayWithList, newEntryList];\n    });\n    const eventDate = formateToDateWithFullWords(event.date);\n    const startAt = formatLabelTimePicker(event.startAt);\n    const endAt = formatLabelTimePicker(event.endAt);\n    const creneaux = startAt + \" et \" + endAt;\n    sendSmtpEmail = {\n      to: emailsArray,\n      params: {\n        prenom: user.displayName,\n        message: message,\n        nomEvent: event.name,\n        adresse: event.place,\n        invites: event.people,\n        date: eventDate,\n        creneaux: creneaux\n      },\n      templateId: 7,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    return apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      return true;\n    }, function (error) {\n      return false;\n    });\n  }\n\n  async function getWishList(userID) {\n    const req = await refUsers.doc(userID).get();\n    const res = req.data();\n    return res.wishlist || [];\n  }\n\n  async function deleteItemFromWishList(sellerID) {\n    let newWishList = await getWishList(auth.currentUser.uid);\n    newWishList = newWishList.filter(item => item !== sellerID);\n    await refUsers.doc(auth.currentUser.uid).update({\n      wishlist: newWishList\n    });\n    return newWishList;\n  }\n\n  async function addItemToWishListOfUser(sellerID) {\n    let newWishList = await getWishList(auth.currentUser.uid);\n    newWishList = [...newWishList, sellerID];\n    refUsers.doc(auth.currentUser.uid).update({\n      wishlist: newWishList\n    });\n    return;\n  }\n\n  async function getWishListCountOfSeller(sellerID) {\n    const users = await refUsers.where(\"wishlist\", \"array-contains\", sellerID).get();\n    return users.docs.length;\n  }\n\n  async function isSellerInWishListOfUser(id) {\n    const currentWishList = await getWishList(auth.currentUser.uid);\n    const isSellerInList = currentWishList.filter(item => item === id);\n    return isSellerInList.length > 0 ? true : false;\n  }\n\n  async function getEmailOfSellerWithUid(sellerID) {\n    const query = await refSellers.doc(sellerID).get();\n    const result = query.data();\n    return result.email;\n  }\n\n  async function sendInBlue_sendToParrainAboutNewReferral(referralCode) {\n    // Aller choper en bdd le seller correspondant au referral code\n    const query = await refSellers.where(\"referralToken\", \"==\", referralCode).get();\n    const result = query[0].data();\n    const email = result.email; // Puis envoyer à ce seller le mail de new referral\n\n    sendSmtpEmail = {\n      to: [{\n        email: email\n      }],\n      params: {\n        name: \"a\"\n      },\n      templateId: 14,\n      headers: {\n        \"X-Mailin-custom\": \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\"\n      }\n    };\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(function (data) {\n      console.log(\"API called successfully. Returned data: \" + data);\n    }, function (error) {\n      console.error(error);\n    });\n  }\n\n  function checkoutStart(price) {\n    const saleToken = Date.now().toString().substr(0, 9) + Math.random().toString().substr(2, 9);\n    refEvents.doc(event.id).update({\n      saleToken: saleToken\n    });\n    createStripeCheckout({\n      price: price,\n      eventId: event.id,\n      saleToken: saleToken\n    }).then(response => {\n      const sessionId = response.data.id;\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    }).catch(error => console.log(error));\n  }\n\n  function checkoutSubscription() {\n    const saleToken = Date.now().toString().substr(0, 9) + Math.random().toString().substr(2, 9);\n    refSellers.doc(seller.uid).update({\n      saleToken: saleToken\n    });\n    createStripeSubscribe({\n      sellerID: seller.uid,\n      saleToken: saleToken\n    }).then(response => {\n      const sessionId = response.data.id;\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    }).catch(error => console.log(error));\n  }\n\n  async function getSaleTokenOfEventFromDb() {\n    const req = await refEvents.doc(event.id).get();\n    const res = req.data();\n    return res.saleToken;\n  }\n\n  async function checkoutCheck(session_id) {\n    console.log(session_id);\n    return checkStripeReturn({\n      session_id: session_id\n    }).then(result => {\n      return {\n        status: result.data.payment_status,\n        amount: result.data.amount_total,\n        id: result.data.payment_intent\n      };\n    });\n  }\n\n  async function addFoodTypeToSeller(type) {\n    if (type === \"Aucun\") return;\n    let newSeller = { ...seller\n    };\n    let newFoodTypes = [];\n\n    if (seller.foodTypes === undefined) {\n      newFoodTypes.push(type);\n    } else {\n      newFoodTypes = seller.foodTypes;\n      newFoodTypes.push(type);\n    }\n\n    newSeller[\"foodTypes\"] = newFoodTypes;\n    await refSellers.doc(auth.currentUser.uid).update({\n      foodTypes: newFoodTypes\n    });\n    setSeller(newSeller);\n  }\n\n  async function deleteFoodTypeToSeller(serviceID) {\n    const req = await refSellers.doc(auth.currentUser.uid).collection(\"services\").doc(serviceID).get();\n    const data = req.data();\n    const type = data.foodType;\n    if (type === \"Aucun\") return;\n    let newSeller = { ...seller\n    };\n    let newFoodTypes = [];\n    if (seller.foodTypes === undefined) return;else {\n      newFoodTypes = seller.foodTypes;\n      let indexes = seller.foodTypes.map((item, index) => item === type ? index : \"\").filter(String);\n      if (indexes[0] === -1) return;else if (newFoodTypes.length > 1) {\n        newFoodTypes.splice(indexes[0], 1);\n      } else newFoodTypes = [];\n      newSeller[\"foodTypes\"] = newFoodTypes;\n      await refSellers.doc(auth.currentUser.uid).update({\n        foodTypes: newFoodTypes\n      });\n      setSeller(newSeller);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      login,\n      subscribe,\n      sellerSubscribe,\n      logout,\n      user,\n      seller,\n      event,\n      setUser,\n      addEvent,\n      addToCard,\n      getServiceQuantityInCard,\n      loadingButtonAddToCard,\n      setLoadingButtonAddToCard,\n      setCurrentStepProcess,\n      currentStepProcess,\n      formatLabelTimePicker,\n      getAuthUserFromHisEmail,\n      updateUserEmail,\n      updateQuantityService,\n      signInWithGoogle,\n      getCurrentUserProfil,\n      verifyLogin,\n      updateCurrentUserProfil,\n      addSellerDescription,\n      setImageSellerDB,\n      addSellerServices,\n      addOneSellerService,\n      getServicesOfCurrentSellerFromDB,\n      addSellerDocuments,\n      getSellerDocumentsFromDB,\n      setSellerStatus,\n      updateSellerDocumentsStatus,\n      getSellersInDbWithUids,\n      deleteOldSellerPicture,\n      addSalesInDB,\n      updateEventStatus,\n      getSalesOfEventIdFromDB,\n      clearEvent,\n      getSalesOfSellerIdFromDB,\n      getEventOfSaleFromDB,\n      formateToDate,\n      formateToDateWithWords,\n      updateSaleStatusInDB,\n      updateSaleNote,\n      addViewsOfSeller,\n      getViewsOfSeller,\n      isSellerAllowedToModifyAndDeleteService,\n      deleteServiceOfSeller,\n      updateSellerProfil,\n      getSellerReferralCountFromDB,\n      getEventFromUid,\n      getReviewsOfSellerUid,\n      addReviewOfSellerUid,\n      sendInBlue_sendNotificationToSellerOfReview,\n      sendInBlue_addContactToNewsletter,\n      sendInBlue_sendInvitations,\n      sendInBlue_sendRecapToUserAfterPayment,\n      sendInBlue_sendNewSaleToSeller,\n      sendInBlue_sendToParrainAboutNewReferral,\n      sendInBlue_sendPaymentRequestToAdmin,\n      getWishList,\n      deleteItemFromWishList,\n      addItemToWishListOfUser,\n      isSellerInWishListOfUser,\n      getEmailOfSellerWithUid,\n      checkoutStart,\n      getSaleTokenOfEventFromDb,\n      checkoutCheck,\n      getTotalAmountDueToSeller,\n      homeSellersDisplay,\n      setHomeSellersDisplay,\n      getWishListCountOfSeller,\n      getSellerPosition,\n      getSellersCount,\n      sendInBlue_sendBillRequestToAdmin,\n      addFoodTypeToSeller,\n      deleteFoodTypeToSeller,\n      isCardWidgetOpen,\n      setIsCardWidgetOpen\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1525,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UserProvider, \"ijKh/7xLhKwz+rLIrfaDJHXVGUc=\", false, function () {\n  return [useFirebase];\n});\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/src/context/userContext.js"],"names":["React","createContext","useState","useEffect","useContext","firebase","useFirebase","publicIp","Stripe","functions","inputAdornmentClasses","createStripeSubscribe","SibApiV3Sdk","require","defaultClient","ApiClient","instance","myAPIKey","process","env","REACT_APP_SENDINBLUE_APIKEY","apiKey","authentications","partnerKey","apiInstance","ContactsApi","createContact","CreateContact","apiInstanceSend","TransactionalEmailsApi","sendSmtpEmail","SendSmtpEmail","UserContext","useAuth","UserProvider","children","firebaseContext","auth","provider","storage","firestore","datePlusYear","Date","setFullYear","getFullYear","initialEvent","name","date","startAt","endAt","people","placeSize","place","latLng","budget","budgetLeft","status","id","choosedServices","initialSeller","companyName","adress","siret","website","firstName","lastName","phone","description","category","subcategory","image_path","user","setUser","seller","setSeller","event","setEvent","loading","setLoading","currentStepProcess","setCurrentStepProcess","loadingButtonAddToCard","setLoadingButtonAddToCard","refUsers","collection","refEvents","refSellers","refSales","homeSellersDisplay","setHomeSellersDisplay","isCardWidgetOpen","setIsCardWidgetOpen","console","log","createStripeCheckout","httpsCallable","stripe","window","checkStripeReturn","onAuthStateChanged","data","handleAuthChanged","isSeller","isThisUserSeller","uid","isUser","isThisUserUser","sellerData","getSellerDataFromDB","sellerServices","getServicesOfCurrentSellerFromDB","services","emailVerified","eventData","getEvent","getChoosedServices","query","doc","get","result","exists","where","docs","length","item","forEach","toMillis","addEvent","myEvent","myNewEvent","createEvent","updateEvent","req","res","identifier","email","updateContact","attributes","NOTIF_DATE","EVENTID","then","error","docRef","add","getServices","delete","update","getBudgetLeft","totalPrice","variations","filter","vari","variation","price","quantity","push","queryPrice","neWObject","login","password","signInWithEmailAndPassword","verifyLogin","subscribe","tel","gender","birthDate","createUserWithEmailAndPassword","userData","updateProfile","displayName","set","catch","sendEmailVerification","sendInBlue_addContactSubscribe","code","sellerSubscribe","referral","referralToken","now","toString","substr","Math","random","updateSellerAfterReferralNewSeller","sendInBlue_sendToParrainAboutNewReferral","newSellerUid","docSeller","undefined","newSeller","logout","signOut","signInWithGoogle","signInWithPopup","credential","token","accessToken","currentUser","addToCard","sellerID","newEvent","refCurrentService","refService","service","find","itemCopy","newService","getServiceQuantityInCard","servicefiltered","count","updateQuantityService","serviceID","parseInt","formatLabelTimePicker","secs","minutes","floor","hours","slice","getAuthUserFromHisEmail","sendPasswordResetEmail","updateUserEmail","updateEmail","getCurrentUserProfil","updateCurrentUserProfil","setImageSellerDB","url","addSellerDescription","imgURL","addSellerServices","addOneSellerService","newResult","addSellerDocuments","documents","getSellerDocumentsFromDB","setSellerStatus","sellerId","updateSellerDocumentsStatus","newDocumentsArray","getSellersInDbWithUids","ids","sellers","deleteOldSellerPicture","tokens","type","imageRef","ref","child","addSalesInDB","sales","map","sale","getSalesOfEventIdFromDB","eventId","salesOfEvent","getSalesOfSellerIdFromDB","salesOfSeller","updateEventStatus","clearEvent","getEventOfSaleFromDB","reqServices","formateToDate","timestamp","year","getUTCFullYear","month","getMonth","day","getDate","formateToDateWithWords","seconds","formateToDateWithFullWords","updateSaleStatusInDB","saleID","saleUID","userID","req2","sendInBlue_sendNotificationToUserOfSaleStatus","updateSaleNote","note","dateTodayMinusByDay","setHours","getHours","addViewsOfSeller","visitorIP","v4","reqViews","recentViews","view","ip","getViewsOfSeller","isSellerAllowedToModifyAndDeleteService","sellerSales","isAllowed","deleteServiceOfSeller","updateSellerProfil","getSellerReferralCountFromDB","newArray","finalArray","getEventFromUid","getReviewsOfSellerUid","reviews","addReviewOfSellerUid","sellerUID","eventID","comment","eventDate","setTotalNoteOfSeller","reqReviews","reviewsCount","totalNote","sellerNote","toFixed","getSellerPosition","reqSellers","sellersWithNote","sort","a","b","index","findIndex","getSellersCount","listIds","PRENOM","NOM","UID","sendInBlue_sendRecapToUserAfterPayment","newSales","paid","total","newSale","to","params","templateId","headers","sendTransacEmail","sendInBlue_sendNewSaleToSeller","sendInBlue_sendNotificationToSellerOfReview","prestName","userName","getTotalAmountDueToSeller","validSales","prices","finalAmount","sendInBlue_sendPaymentRequestToAdmin","amount","REACT_APP_ADMIN_EMAIL","sendInBlue_sendBillRequestToAdmin","transactionID","transactionId","sendInBlue_addContactToNewsletter","sendInBlue_sendInvitations","emails","message","emailsArray","emailsArrayWithList","newEntry","newEntryList","EVENT_DATE","creneaux","prenom","nomEvent","adresse","invites","getWishList","wishlist","deleteItemFromWishList","newWishList","addItemToWishListOfUser","getWishListCountOfSeller","users","isSellerInWishListOfUser","currentWishList","isSellerInList","getEmailOfSellerWithUid","referralCode","checkoutStart","saleToken","response","sessionId","redirectToCheckout","checkoutSubscription","getSaleTokenOfEventFromDb","checkoutCheck","session_id","payment_status","amount_total","payment_intent","addFoodTypeToSeller","newFoodTypes","foodTypes","deleteFoodTypeToSeller","foodType","indexes","String","splice"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useFirebase } from \"../assets/base-context\";\r\nimport publicIp from \"public-ip\";\r\n\r\nimport Stripe from \"stripe\";\r\nimport functions from \"firebase/firebase-functions\";\r\nimport { inputAdornmentClasses } from \"@mui/material\";\r\nimport { createStripeSubscribe } from \"../../functions\";\r\n\r\nvar SibApiV3Sdk = require(\"sib-api-v3-sdk\");\r\n\r\nvar defaultClient = SibApiV3Sdk.ApiClient.instance;\r\n\r\nlet myAPIKey = process.env.REACT_APP_SENDINBLUE_APIKEY;\r\nvar apiKey = defaultClient.authentications[\"api-key\"];\r\napiKey.apiKey = myAPIKey;\r\n\r\nvar partnerKey = defaultClient.authentications[\"partner-key\"];\r\npartnerKey.apiKey = process.env.REACT_APP_SENDINBLUE_APIKEY;\r\n\r\nvar apiInstance = new SibApiV3Sdk.ContactsApi();\r\nvar createContact = new SibApiV3Sdk.CreateContact();\r\n\r\nvar apiInstanceSend = new SibApiV3Sdk.TransactionalEmailsApi();\r\nvar sendSmtpEmail = new SibApiV3Sdk.SendSmtpEmail();\r\n\r\n// Ce fichier comporte toutes les fonctions d'appels et de traitement bdd, et du context global.\r\n// Il englobe l'app dans App.js\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(UserContext);\r\n}\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const firebaseContext = useFirebase();\r\n  const auth = firebaseContext.auth();\r\n  const provider = firebaseContext.provider();\r\n  const storage = firebaseContext.storage();\r\n  const firestore = firebaseContext.firestore();\r\n\r\n  let datePlusYear = new Date();\r\n  datePlusYear.setFullYear(datePlusYear.getFullYear() + 1);\r\n\r\n  const initialEvent = {\r\n    name: \"\",\r\n    date: datePlusYear,\r\n    startAt: 0,\r\n    endAt: 86360,\r\n    people: 50,\r\n    placeSize: 250,\r\n    place: \"\",\r\n    latLng: [],\r\n    budget: 50,\r\n    budgetLeft: 0,\r\n    status: null,\r\n    id: null,\r\n    choosedServices: [],\r\n  };\r\n\r\n  const initialSeller = {\r\n    companyName: \"\",\r\n    adress: \"\",\r\n    siret: \"\",\r\n    website: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    image_path: \"\",\r\n  };\r\n\r\n  const [user, setUser] = useState();\r\n  const [seller, setSeller] = useState(initialSeller);\r\n  const [event, setEvent] = useState(initialEvent);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentStepProcess, setCurrentStepProcess] = useState(0);\r\n  const [loadingButtonAddToCard, setLoadingButtonAddToCard] = useState(true);\r\n\r\n  const refUsers = firestore.collection(\"users\");\r\n  const refEvents = firestore.collection(\"events\");\r\n  const refSellers = firestore.collection(\"sellers\");\r\n  const refSales = firestore.collection(\"sales\");\r\n\r\n  const [homeSellersDisplay, setHomeSellersDisplay] = useState([]);\r\n\r\n  const [isCardWidgetOpen, setIsCardWidgetOpen] = useState(false);\r\n  console.log(isCardWidgetOpen);\r\n\r\n  const createStripeCheckout = user\r\n    ? firebase.functions().httpsCallable(\"createStripeCheckout\")\r\n    : null;\r\n  const stripe = user\r\n    ? window.Stripe(\r\n        \"pk_test_51InLbZBwyEuW61Pj3yTYQlp31JobhK9vIKh32GColDUhXcdtzaKhWF5mVRDa9SGw7HujSuEDPCwvh40GEuo6uJxA00iqmaUXQp\"\r\n      )\r\n    : null;\r\n\r\n  const checkStripeReturn = user\r\n    ? firebase.functions().httpsCallable(\"checkStripeReturn\")\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((data) => {\r\n      return handleAuthChanged(data);\r\n    });\r\n  }, []);\r\n\r\n  async function handleAuthChanged(data) {\r\n    if (data) {\r\n      const isSeller = await isThisUserSeller(data.uid);\r\n      const isUser = await isThisUserUser(data.uid);\r\n      if (isSeller && !isUser) {\r\n        const sellerData = await getSellerDataFromDB(data.uid);\r\n        const sellerServices = await getServicesOfCurrentSellerFromDB();\r\n        setSeller({\r\n          ...initialSeller,\r\n          ...data,\r\n          ...sellerData,\r\n          services: sellerServices,\r\n        });\r\n        setUser();\r\n        setLoading(false);\r\n      } else if (isUser && !isSeller) {\r\n        if (data.emailVerified === false) {\r\n          setUser();\r\n          setSeller();\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        setUser(data);\r\n        setSeller();\r\n        const eventData = await getEvent(data.uid);\r\n        eventData && eventData !== null\r\n          ? await getChoosedServices(eventData)\r\n          : setEvent(initialEvent);\r\n        setLoading(false);\r\n      } else if (isSeller && isUser) {\r\n        const sellerData = await getSellerDataFromDB(data.uid);\r\n        setSeller({ ...initialSeller, ...data, ...sellerData });\r\n        setUser(data);\r\n        const eventData = await getEvent(data.uid);\r\n        eventData && eventData !== null\r\n          ? await getChoosedServices(eventData)\r\n          : setEvent(initialEvent);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setSeller();\r\n      setUser();\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function getSellerDataFromDB(id) {\r\n    const query = await refSellers.doc(id).get();\r\n    const result = query.data();\r\n    return result;\r\n  }\r\n\r\n  async function isThisUserSeller(id) {\r\n    const doc = await refSellers.doc(id).get();\r\n    if (doc.exists) return true;\r\n    return false;\r\n  }\r\n\r\n  async function isThisUserUser(id) {\r\n    const doc = await refUsers.doc(id).get();\r\n    if (doc.exists) return true;\r\n    return false;\r\n  }\r\n\r\n  async function getEvent(uid) {\r\n    const getEvent = await refEvents.where(\"user\", \"==\", uid).get();\r\n    if (getEvent.docs.length > 0) {\r\n      let item = {};\r\n      getEvent.docs.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.status && data.status !== \"passed\") {\r\n          item = { ...data };\r\n          item.date = data.date.toMillis();\r\n          item.id = doc.id;\r\n        }\r\n      });\r\n      return item && item.status && item.status !== \"passed\" ? item : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async function addEvent(item) {\r\n    const myEvent = { ...item };\r\n    delete myEvent.id;\r\n    let myNewEvent;\r\n\r\n    if (item.status !== \"creating\") {\r\n      myNewEvent = await createEvent(myEvent);\r\n    }\r\n\r\n    if (item.status === \"creating\") {\r\n      // event existant\r\n      myNewEvent = await updateEvent(item, myEvent);\r\n    }\r\n    await getChoosedServices(myNewEvent);\r\n  }\r\n\r\n  async function createEvent(myEvent) {\r\n    const req = await refUsers.doc(myEvent.user).get();\r\n    const res = req.data();\r\n    var identifier = res.email;\r\n\r\n    var updateContact = {\r\n      attributes: {\r\n        NOTIF_DATE: new Date(myEvent.date),\r\n        EVENTID: event.id,\r\n      },\r\n    };\r\n\r\n    apiInstance.updateContact(identifier, updateContact).then(\r\n      () => {},\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    myEvent.status = \"creating\";\r\n    const docRef = await refEvents.add({\r\n      ...myEvent,\r\n      date: new Date(myEvent.date),\r\n    });\r\n    myEvent.id = docRef.id;\r\n    return myEvent;\r\n  }\r\n\r\n  async function updateEvent(item, myEvent) {\r\n    if (item.place !== event.place) {\r\n      const getServices = await refEvents\r\n        .doc(item.id)\r\n        .collection(\"services\")\r\n        .get();\r\n      getServices.docs.forEach(async (doc) => {\r\n        await refEvents\r\n          .doc(item.id)\r\n          .collection(\"services\")\r\n          .doc(doc.id)\r\n          .delete();\r\n      });\r\n    }\r\n\r\n    await refEvents.doc(item.id).update({\r\n      ...myEvent,\r\n      date: new Date(myEvent.date),\r\n    });\r\n    myEvent.id = item.id;\r\n    return myEvent;\r\n  }\r\n\r\n  async function getBudgetLeft(budget, choosedServices) {\r\n    let totalPrice = 0;\r\n    choosedServices.forEach((item) => {\r\n      if (item.variations && item.variations.length > 0) {\r\n        totalPrice +=\r\n          item.variations.filter((vari) => vari.name === item.variation)[0]\r\n            .price * item.quantity;\r\n      } else totalPrice += item.price * item.quantity;\r\n    });\r\n    const result = budget - totalPrice;\r\n    return result;\r\n  }\r\n\r\n  async function getChoosedServices(item) {\r\n    let choosedServices = [];\r\n    console.log(item);\r\n    const services = await refEvents.doc(item.id).collection(\"services\").get();\r\n    services.forEach((doc) => {\r\n      choosedServices.push({ ...doc.data(), uid: doc.id });\r\n    });\r\n    const queryPrice = await getBudgetLeft(item.budget, choosedServices);\r\n    const neWObject = {\r\n      ...item,\r\n      budgetLeft: queryPrice,\r\n      choosedServices: choosedServices,\r\n    };\r\n    return setEvent(neWObject);\r\n  }\r\n\r\n  async function login(email, password) {\r\n    console.log(user);\r\n    return await auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((data) => {\r\n        if (data.user.emailVerified === false) {\r\n          setSeller();\r\n          setUser();\r\n          return false;\r\n        }\r\n        setUser(data.user);\r\n        return true;\r\n      });\r\n  }\r\n\r\n  async function verifyLogin(email, password) {\r\n    const data = await auth.signInWithEmailAndPassword(email, password);\r\n    return data;\r\n  }\r\n\r\n  async function subscribe(\r\n    email,\r\n    password,\r\n    firstName,\r\n    name,\r\n    tel,\r\n    gender,\r\n    birthDate\r\n  ) {\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (userData) => {\r\n        await userData.user.updateProfile({\r\n          displayName: firstName,\r\n        });\r\n        await refUsers\r\n          .doc(userData.user.uid)\r\n          .set({\r\n            firstName: firstName,\r\n            name: name,\r\n            tel: tel,\r\n            gender: gender,\r\n            birthDate: birthDate,\r\n            email: email,\r\n          })\r\n          .catch((error) => {\r\n            return console.log(error);\r\n          });\r\n        userData.user.sendEmailVerification();\r\n        setUser();\r\n        setSeller();\r\n        sendInBlue_addContactSubscribe(email, firstName);\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        return error.code;\r\n      });\r\n  }\r\n\r\n  async function sellerSubscribe(\r\n    companyName,\r\n    adress,\r\n    siret,\r\n    website,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phone,\r\n    password,\r\n    latLng,\r\n    referral\r\n  ) {\r\n    const referralToken =\r\n      Date.now().toString().substr(0, 5) +\r\n      Math.random().toString().substr(2, 7);\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (userData) => {\r\n        await userData.user.updateProfile({\r\n          displayName: firstName,\r\n        });\r\n        await refSellers\r\n          .doc(userData.user.uid)\r\n          .set({\r\n            companyName: companyName,\r\n            adress: adress,\r\n            latLng: latLng,\r\n            siret: siret,\r\n            website: website,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            phone: phone,\r\n            email: email,\r\n            image_path: \"\",\r\n            status: \"subscribing\",\r\n            referralToken: referralToken,\r\n            referral: referral,\r\n          })\r\n          .catch((error) => {\r\n            return console.log(error);\r\n          });\r\n        if (referral.length === 12) {\r\n          await updateSellerAfterReferralNewSeller(referral, userData.user.uid);\r\n          sendInBlue_sendToParrainAboutNewReferral(referral);\r\n        }\r\n        sendInBlue_addContactSubscribe(\r\n          email,\r\n          firstName,\r\n          lastName,\r\n          userData.user.uid\r\n        );\r\n        return userData.user.sendEmailVerification();\r\n      })\r\n      .catch((error) => {\r\n        return error.code;\r\n      });\r\n  }\r\n\r\n  async function updateSellerAfterReferralNewSeller(referral, newSellerUid) {\r\n    const docs = await refSellers.where(\"referralToken\", \"==\", referral).get();\r\n    let docSeller = {};\r\n    docs.forEach((doc) => {\r\n      docSeller = { ...doc.data(), uid: doc.id };\r\n    });\r\n    console.log(docSeller);\r\n    if (\r\n      docSeller.uid !== undefined &&\r\n      docSeller.uid !== null &&\r\n      docSeller.uid.length > 10\r\n    ) {\r\n      refSellers\r\n        .doc(docSeller.uid)\r\n        .collection(\"referral\")\r\n        .add({\r\n          newSeller: newSellerUid,\r\n          date: Date.now(),\r\n        })\r\n        .catch((error) => {\r\n          return console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  async function signInWithGoogle() {\r\n    const result = await auth.signInWithPopup(provider);\r\n    /** @type {firebase.auth.OAuthCredential} */\r\n    var credential = result.credential;\r\n\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    var token = credential.accessToken;\r\n    // The signed-in user info.\r\n    var user = result.user;\r\n    var doc = await refUsers.doc(user.uid).get();\r\n    if (doc.exists) {\r\n      setUser(auth.currentUser);\r\n    } else {\r\n      await refUsers.doc(user.uid).set({\r\n        firstName: user.displayName,\r\n        email: user.email,\r\n      });\r\n      setUser(auth.currentUser);\r\n    }\r\n  }\r\n\r\n  // Ajouter un service au panier ( BBD et state )\r\n  async function addToCard(sellerID, item, quantity) {\r\n    // Checkons si ce service est deja present dans la liste de cette event\r\n    const newEvent = { ...event };\r\n\r\n    const refCurrentService = refEvents.doc(event.id).collection(\"services\");\r\n\r\n    const doc = await refCurrentService\r\n      .where(\"id\", \"==\", item.id)\r\n      .where(\"variation\", \"==\", item.variation)\r\n      .get();\r\n    const refService = doc.exists && doc.data();\r\n\r\n    // Si le service existe dans les service séléctionnés pour cet event, on actualise juste en renseignant la nouvelle quantity ( BBD et state )\r\n    if (doc.docs.length > 0) {\r\n      await refCurrentService\r\n        .doc(doc.docs[0].id)\r\n        .update({ quantity: quantity });\r\n      //Ici on chope le service concerné dans le state, puis on le modifie pour ajouter la quantity, et on actualise le state\r\n      const services = [...event.choosedServices];\r\n      const service = services.find(\r\n        (service) =>\r\n          service.variation === item.variation && service.id === item.id\r\n      );\r\n      service.quantity = quantity;\r\n      newEvent.choosedServices = services;\r\n      getChoosedServices(newEvent);\r\n      setLoadingButtonAddToCard(false);\r\n    }\r\n    // Mais si le service n'existe pas, on l'ajoute completement ( BBD et state )\r\n    else {\r\n      const itemCopy = { ...item };\r\n      itemCopy.quantity = quantity;\r\n      const newService = [];\r\n      await refCurrentService.add(itemCopy);\r\n      newService.push(item);\r\n      newEvent.choosedServices.push(newService[0]);\r\n      getChoosedServices(newEvent);\r\n      setLoadingButtonAddToCard(false);\r\n    }\r\n    setIsCardWidgetOpen(true);\r\n  }\r\n\r\n  function getServiceQuantityInCard(id) {\r\n    const services = [...event.choosedServices];\r\n    const servicefiltered = services.filter((service) => service.id === id);\r\n    let count = 0;\r\n    if (servicefiltered.length > 1)\r\n      servicefiltered.forEach((service) => (count += service.quantity));\r\n    else if (servicefiltered.length > 0) count += servicefiltered[0].quantity;\r\n    return count;\r\n  }\r\n\r\n  async function updateQuantityService(serviceID, quantity) {\r\n    if (quantity === undefined) return;\r\n    quantity = parseInt(quantity);\r\n\r\n    if (quantity !== 0) {\r\n      await refEvents\r\n        .doc(event.id)\r\n        .collection(\"services\")\r\n        .doc(serviceID)\r\n        .update({ quantity: quantity });\r\n    } else {\r\n      await refEvents\r\n        .doc(event.id)\r\n        .collection(\"services\")\r\n        .doc(serviceID)\r\n        .delete();\r\n    }\r\n\r\n    const eventData = await getEvent(auth.currentUser.uid);\r\n    await getChoosedServices(eventData);\r\n    setLoading(false);\r\n    return;\r\n  }\r\n\r\n  function formatLabelTimePicker(secs) {\r\n    if (secs === 86400) secs = 86360;\r\n    var minutes = Math.floor(secs / 60);\r\n    var hours = Math.floor(minutes / 60);\r\n    minutes = minutes % 60;\r\n    return `${hours}:${(\"0\" + minutes).slice(-2)}`;\r\n  }\r\n\r\n  async function getAuthUserFromHisEmail(email) {\r\n    return auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        return true;\r\n      })\r\n      .catch(function (error) {\r\n        if (error.code === \"auth/invalid-email\") {\r\n          return \"invalid\";\r\n        } else if (error.code === \"auth/user-not-found\") {\r\n          return \"notexist\";\r\n        }\r\n      });\r\n  }\r\n\r\n  async function updateUserEmail(email) {\r\n    var user = auth.currentUser;\r\n    await user.updateEmail(email);\r\n    await refUsers.doc(user.uid).update({ email: email });\r\n    await user.sendEmailVerification();\r\n    return true;\r\n  }\r\n\r\n  async function getCurrentUserProfil() {\r\n    var uid = auth.currentUser.uid;\r\n    const doc = await refUsers.doc(uid).get();\r\n    return doc.exists ? doc.data() : null;\r\n  }\r\n\r\n  async function updateCurrentUserProfil(data) {\r\n    var uid = auth.currentUser.uid;\r\n    refUsers.doc(uid).update(data);\r\n    user.updateProfile({\r\n      displayName: data.firstName,\r\n    });\r\n  }\r\n\r\n  async function setImageSellerDB(url, token) {\r\n    await refSellers.doc(auth.currentUser.uid).update({\r\n      image_path: { url: url, token: token },\r\n    });\r\n  }\r\n\r\n  async function addSellerDescription(data, imgURL) {\r\n    await refSellers.doc(auth.currentUser.uid).update({\r\n      description: data.description,\r\n      category: data.category,\r\n      subcategory: data.subcategory,\r\n    });\r\n    setSeller({\r\n      ...seller,\r\n      description: data.description,\r\n      category: data.category,\r\n      subcategory: data.subcategory,\r\n      image_path: imgURL !== null && imgURL,\r\n    });\r\n  }\r\n\r\n  async function addSellerServices(services) {\r\n    setSeller({ ...seller, services: services });\r\n    services.forEach(async (service) => {\r\n      if (service.id.length > 2) {\r\n        return await refSellers\r\n          .doc(auth.currentUser.uid)\r\n          .collection(\"services\")\r\n          .doc(service.id)\r\n          .update(service);\r\n      }\r\n      return await refSellers\r\n        .doc(auth.currentUser.uid)\r\n        .collection(\"services\")\r\n        .add(service);\r\n    });\r\n  }\r\n\r\n  async function addOneSellerService(service) {\r\n    if (service.id.length > 2) {\r\n      return await refSellers\r\n        .doc(auth.currentUser.uid)\r\n        .collection(\"services\")\r\n        .doc(service.id)\r\n        .update(service);\r\n    }\r\n    const docRef = await refSellers\r\n      .doc(auth.currentUser.uid)\r\n      .collection(\"services\")\r\n      .add(service);\r\n    return docRef.id;\r\n  }\r\n\r\n  async function getServicesOfCurrentSellerFromDB() {\r\n    const services = await refSellers\r\n      .doc(auth.currentUser.uid)\r\n      .collection(\"services\")\r\n      .get();\r\n    var result = [];\r\n    services.docs.forEach((doc) => {\r\n      const newResult = { ...doc.data(), id: doc.id };\r\n      result.push(newResult);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  async function addSellerDocuments(documents) {\r\n    return await refSellers.doc(auth.currentUser.uid).update({\r\n      documents: documents,\r\n    });\r\n  }\r\n\r\n  async function getSellerDocumentsFromDB() {\r\n    const query = await refSellers.doc(auth.currentUser.uid).get();\r\n    const doc = query.data();\r\n    const result = doc.documents && doc.documents;\r\n    if (result === undefined) return null;\r\n    return result;\r\n  }\r\n\r\n  async function setSellerStatus(sellerId, status) {\r\n    await refSellers.doc(sellerId).update({\r\n      status: status,\r\n    });\r\n    return setSeller({ ...seller, status: status });\r\n  }\r\n\r\n  async function updateSellerDocumentsStatus(sellerId, newDocumentsArray) {\r\n    await refSellers.doc(sellerId).update({\r\n      documents: newDocumentsArray,\r\n    });\r\n\r\n    newDocumentsArray.status === \"rejected\" &&\r\n      (await refSellers.doc(sellerId).update({\r\n        status: \"subscribing\",\r\n      }));\r\n  }\r\n\r\n  async function getSellersInDbWithUids(ids) {\r\n    let sellers = [];\r\n    for (const id in ids) {\r\n      const req = await refSellers.doc(ids[id]).get();\r\n      let result = req.data();\r\n      result.uid = req.id;\r\n      sellers = [...sellers, result];\r\n      if (sellers.length === ids.length) {\r\n        return sellers;\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO ICi on a la fonction pour delete la photo de profil qu'on ecrase en a remplaceant, faudra faire la meme avec les autres endroits du site avec uploda de picture\r\n  async function deleteOldSellerPicture(tokens, type) {\r\n    tokens.forEach((token) => {\r\n      var imageRef =\r\n        type && type === \"services\"\r\n          ? storage.ref(\"services\").child(token)\r\n          : storage.ref(\"sellers\").child(token);\r\n      imageRef.delete().catch((error) => console.log(error));\r\n    });\r\n  }\r\n\r\n  async function addSalesInDB(sales) {\r\n    return sales.map(async (sale) => await refSales.add(sale));\r\n  }\r\n\r\n  async function getSalesOfEventIdFromDB(eventId) {\r\n    const req = await refSales.where(\"eventID\", \"==\", eventId).get();\r\n    let salesOfEvent = [];\r\n    req.forEach((doc) => salesOfEvent.push(doc.data()));\r\n    return salesOfEvent;\r\n  }\r\n\r\n  async function getSalesOfSellerIdFromDB(sellerId) {\r\n    const req = await refSales.where(\"sellerID\", \"==\", sellerId).get();\r\n    let salesOfSeller = [];\r\n    req.forEach((doc) => salesOfSeller.push(doc.data()));\r\n    return salesOfSeller;\r\n  }\r\n\r\n  async function updateEventStatus(status) {\r\n    await refEvents.doc(event.id).update({ status: status });\r\n    return setEvent({ ...event, status: status });\r\n  }\r\n\r\n  async function clearEvent() {\r\n    setEvent(initialEvent);\r\n  }\r\n\r\n  async function getEventOfSaleFromDB(eventId) {\r\n    const req = await refEvents.doc(eventId).get();\r\n    let newEvent = req.data();\r\n    newEvent.choosedServices = [];\r\n\r\n    const reqServices = await refEvents\r\n      .doc(eventId)\r\n      .collection(\"services\")\r\n      .get();\r\n    reqServices.forEach((doc) => {\r\n      newEvent.choosedServices = [...newEvent.choosedServices, doc.data()];\r\n    });\r\n    return newEvent;\r\n  }\r\n\r\n  function formateToDate(timestamp) {\r\n    const date = new Date(timestamp);\r\n    const year = date.getUTCFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    return `${day}/${month < 10 ? \"0\" : \"\"}${month}/${year}`;\r\n  }\r\n\r\n  function formateToDateWithWords(timestamp) {\r\n    const date = new Date(\r\n      timestamp.seconds ? timestamp.seconds * 1000 : timestamp\r\n    );\r\n    const year = date.getUTCFullYear();\r\n    let month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    month =\r\n      month === 1\r\n        ? \"janv\"\r\n        : month === 2\r\n        ? \"févr\"\r\n        : month === 3\r\n        ? \"mars\"\r\n        : month === 4\r\n        ? \"avril\"\r\n        : month === 5\r\n        ? \"mai\"\r\n        : month === 6\r\n        ? \"juin\"\r\n        : month === 7\r\n        ? \"juil\"\r\n        : month === 8\r\n        ? \"aout\"\r\n        : month === 9\r\n        ? \"sept\"\r\n        : month === 10\r\n        ? \"oct\"\r\n        : month === 11\r\n        ? \"nov\"\r\n        : month === 12 && \"déc\";\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n\r\n  function formateToDateWithFullWords(timestamp) {\r\n    const date = new Date(timestamp);\r\n    const year = date.getUTCFullYear();\r\n    let month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    month =\r\n      month === 1\r\n        ? \"janvier\"\r\n        : month === 2\r\n        ? \"février\"\r\n        : month === 3\r\n        ? \"mars\"\r\n        : month === 4\r\n        ? \"avril\"\r\n        : month === 5\r\n        ? \"mai\"\r\n        : month === 6\r\n        ? \"juin\"\r\n        : month === 7\r\n        ? \"juillet\"\r\n        : month === 8\r\n        ? \"aout\"\r\n        : month === 9\r\n        ? \"septembre\"\r\n        : month === 10\r\n        ? \"octobre\"\r\n        : month === 11\r\n        ? \"novembre\"\r\n        : month === 12 && \"décembre\";\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n\r\n  async function updateSaleStatusInDB(saleID, sellerID, status) {\r\n    const req = await refSales\r\n      .where(\"sellerID\", \"==\", sellerID)\r\n      .where(\"id\", \"==\", saleID)\r\n      .get();\r\n    let saleUID;\r\n    let userID;\r\n    let sale;\r\n    req.forEach((doc) => {\r\n      sale = doc.data();\r\n      saleUID = doc.id;\r\n      userID = sale.userID;\r\n    });\r\n    const req2 = await refUsers.doc(userID).get();\r\n    const user = req2.data();\r\n    await refSales.doc(saleUID).update({ status });\r\n    sendInBlue_sendNotificationToUserOfSaleStatus(\r\n      user,\r\n      seller.companyName,\r\n      sale\r\n    );\r\n  }\r\n\r\n  async function updateSaleNote(saleID, note) {\r\n    console.log(saleID);\r\n    const req = await refSales\r\n      .where(\"sellerID\", \"==\", auth.currentUser.uid)\r\n      .where(\"id\", \"==\", saleID)\r\n      .get();\r\n    let saleUID;\r\n    req.forEach((doc) => (saleUID = doc.id));\r\n    await refSales.doc(saleUID).update({ note });\r\n    return;\r\n  }\r\n\r\n  function dateTodayMinusByDay(day) {\r\n    const date = new Date();\r\n    date.setHours(date.getHours() - 24 * day);\r\n    return date;\r\n  }\r\n\r\n  async function addViewsOfSeller(sellerID) {\r\n    const visitorIP = await publicIp.v4();\r\n    const reqViews = await refSellers.doc(sellerID).collection(\"views\").get();\r\n\r\n    let recentViews = [];\r\n\r\n    reqViews.forEach(async (doc) => {\r\n      const view = doc.data();\r\n      if (\r\n        view.ip === visitorIP &&\r\n        view.date.seconds * 1000 > dateTodayMinusByDay(1)\r\n      ) {\r\n        recentViews = [...recentViews, view];\r\n      }\r\n    });\r\n    if (recentViews.length === 0) {\r\n      await refSellers\r\n        .doc(sellerID)\r\n        .collection(\"views\")\r\n        .add({\r\n          date: new Date(Date.now()),\r\n          ip: visitorIP,\r\n        });\r\n    }\r\n  }\r\n\r\n  async function getViewsOfSeller(sellerID) {\r\n    const reqViews = await refSellers.doc(sellerID).collection(\"views\").get();\r\n    let res = [];\r\n    reqViews.forEach((doc) => res.push(doc.data()));\r\n    return res;\r\n  }\r\n\r\n  async function isSellerAllowedToModifyAndDeleteService(serviceID) {\r\n    const req = await refSales\r\n      .where(\"sellerID\", \"==\", auth.currentUser.uid)\r\n      .get();\r\n    let sellerSales = [];\r\n    req.forEach((doc) => sellerSales.push(doc.data()));\r\n\r\n    let isAllowed = true;\r\n    sellerSales.forEach((sale) => {\r\n      if (sale.status !== \"passed\" && sale.status !== \"rejected\") {\r\n        sale.choosedServices.forEach((service) => {\r\n          if (service.id === serviceID) isAllowed = false;\r\n        });\r\n      }\r\n    });\r\n    return isAllowed;\r\n  }\r\n\r\n  async function deleteServiceOfSeller(serviceID) {\r\n    return await refSellers\r\n      .doc(auth.currentUser.uid)\r\n      .collection(\"services\")\r\n      .doc(serviceID)\r\n      .delete();\r\n  }\r\n\r\n  async function updateSellerProfil(data) {\r\n    await auth.currentUser.updateProfile({\r\n      displayName: data.firstName,\r\n    });\r\n    await refSellers.doc(auth.currentUser.uid).update({\r\n      companyName: data.companyName,\r\n      website: data.website,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      phone: data.phone,\r\n    });\r\n    return setSeller({\r\n      ...seller,\r\n      companyName: data.companyName,\r\n      website: data.website,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      phone: data.phone,\r\n    });\r\n  }\r\n\r\n  async function getSellerReferralCountFromDB() {\r\n    const res = await refSellers\r\n      .doc(auth.currentUser.uid)\r\n      .collection(\"referral\")\r\n      .get();\r\n    let newArray = [];\r\n    res.forEach((doc) => newArray.push(doc.data()));\r\n\r\n    let finalArray = [];\r\n    for (const item of newArray) {\r\n      const req = await refSellers.doc(item.newSeller).get();\r\n      const res = req.data();\r\n      if (res.status === \"opened\") finalArray = [...finalArray, res];\r\n    }\r\n    return finalArray.length;\r\n  }\r\n\r\n  async function getEventFromUid(uid) {\r\n    const req = await refEvents.doc(uid).get();\r\n    return req.data();\r\n  }\r\n\r\n  async function getReviewsOfSellerUid(uid) {\r\n    const req = await refSellers.doc(uid).collection(\"reviews\").get();\r\n    let reviews = [];\r\n    req.forEach((doc) => reviews.push(doc.data()));\r\n    return reviews;\r\n  }\r\n\r\n  async function addReviewOfSellerUid(sellerUID, eventID, note, comment, name) {\r\n    return await refSellers\r\n      .doc(sellerUID)\r\n      .collection(\"reviews\")\r\n      .add({\r\n        eventID: eventID,\r\n        note: note,\r\n        comment: comment,\r\n        name: name,\r\n        date: new Date(),\r\n        eventDate: event.date,\r\n      })\r\n      .then((res) => {\r\n        setTotalNoteOfSeller(sellerUID);\r\n        return true;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  async function setTotalNoteOfSeller(sellerUID) {\r\n    const reqReviews = await refSellers\r\n      .doc(sellerUID)\r\n      .collection(\"reviews\")\r\n      .get();\r\n    const reviewsCount = reqReviews.docs.length;\r\n    let totalNote = 0;\r\n    reqReviews.forEach((doc) => {\r\n      const data = doc.data();\r\n      totalNote += data.note;\r\n    });\r\n    let sellerNote = totalNote / reviewsCount;\r\n    sellerNote = sellerNote.toFixed();\r\n    await refSellers.doc(sellerUID).update({\r\n      note: sellerNote,\r\n    });\r\n    return true;\r\n  }\r\n\r\n  async function getSellerPosition(sellerUID) {\r\n    const reqSellers = await refSellers.get();\r\n    let sellersWithNote = [];\r\n    reqSellers.forEach((doc) => {\r\n      const data = doc.data();\r\n      if (data.note === undefined) return;\r\n      const seller = { note: data.note, id: doc.id };\r\n      sellersWithNote.push(seller);\r\n    });\r\n\r\n    sellersWithNote.sort((a, b) => {\r\n      if (a.note > b.note) return -1;\r\n      if (a.note < b.note) return 1;\r\n      return 0;\r\n    });\r\n    const index = sellersWithNote.findIndex((item) => item.id === sellerUID);\r\n    return index + 1;\r\n  }\r\n\r\n  async function getSellersCount() {\r\n    const req = await refSellers.get();\r\n    return req.docs.length;\r\n  }\r\n\r\n  async function sendInBlue_addContactSubscribe(\r\n    email,\r\n    firstName,\r\n    lastName,\r\n    uid\r\n  ) {\r\n    createContact = {\r\n      email: email,\r\n      listIds: [4],\r\n      attributes: {\r\n        PRENOM: firstName,\r\n        NOM: lastName && lastName,\r\n        UID: uid ? uid : 0,\r\n      },\r\n    };\r\n\r\n    apiInstance.createContact(createContact).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendRecapToUserAfterPayment(email, sales, event) {\r\n    let newSales = [];\r\n    let paid = 0;\r\n    let total = 0;\r\n    sales.forEach((sale) => {\r\n      refSellers\r\n        .doc(sale.sellerID)\r\n        .get()\r\n        .then((doc) => {\r\n          const seller = doc.data();\r\n          const newSale = { ...sale, name: seller.companyName };\r\n          newSales = [...newSales, newSale];\r\n\r\n          total = total + sale.total;\r\n          paid = paid + sale.paid;\r\n        });\r\n    });\r\n\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: email,\r\n        },\r\n      ],\r\n      params: {\r\n        sales: newSales,\r\n        event: event,\r\n        paid: paid,\r\n        total: total,\r\n      },\r\n      templateId: 10,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendNewSaleToSeller(email, services, event) {\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: email,\r\n        },\r\n      ],\r\n      params: {\r\n        services: services,\r\n        event: event,\r\n      },\r\n      templateId: 12,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendNotificationToSellerOfReview(email, name) {\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: email,\r\n        },\r\n      ],\r\n      params: {\r\n        name: name,\r\n      },\r\n      templateId: 4,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendNotificationToUserOfSaleStatus(\r\n    user,\r\n    prestName,\r\n    sale\r\n  ) {\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: user.email,\r\n        },\r\n      ],\r\n      params: {\r\n        prestName: prestName,\r\n        userName: user.firstName,\r\n        services: sale.choosedServices,\r\n      },\r\n      templateId:\r\n        sale.status === \"rejected\" ? 8 : sale.status === \"validated\" && 9,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function getTotalAmountDueToSeller(sellerId) {\r\n    const req = await refSales\r\n      .where(\r\n        \"sellerID\",\r\n        \"==\",\r\n        sellerId !== undefined ? sellerId : auth.currentUser.uid\r\n      )\r\n      .get();\r\n    let salesOfSeller = [];\r\n    req.forEach((doc) => {\r\n      salesOfSeller = [...salesOfSeller, doc.data()];\r\n    });\r\n    const validSales = salesOfSeller.filter(\r\n      (sale) => sale.total === sale.paid && sale.status === \"validated\"\r\n    ); // à mettre en passed je pense\r\n    const prices = validSales.map((sale) => sale.price);\r\n    let finalAmount = 0;\r\n    prices.forEach((price) => {\r\n      finalAmount = finalAmount + price;\r\n    });\r\n    return finalAmount;\r\n  }\r\n\r\n  async function sendInBlue_sendPaymentRequestToAdmin(sellerId) {\r\n    const amount = await getTotalAmountDueToSeller(sellerId);\r\n\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: process.env.REACT_APP_ADMIN_EMAIL,\r\n        },\r\n      ],\r\n      params: {\r\n        sellerId: sellerId,\r\n        amount: amount,\r\n      },\r\n      templateId: 16,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendBillRequestToAdmin(transactionID, sellerID) {\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: process.env.REACT_APP_ADMIN_EMAIL,\r\n        },\r\n      ],\r\n      params: {\r\n        sellerId: sellerID,\r\n        transactionId: transactionID,\r\n      },\r\n      templateId: 17,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"Content-Type:application/json|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    return apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n        return true;\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_addContactToNewsletter(email) {\r\n    createContact = {\r\n      email: email,\r\n      listIds: [5],\r\n    };\r\n\r\n    return apiInstance.createContact(createContact).then(\r\n      function (data) {\r\n        return true;\r\n      },\r\n      function (error) {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  async function sendInBlue_sendInvitations(emails, message, user, event) {\r\n    let emailsArray = [];\r\n    let emailsArrayWithList = [];\r\n    emails.forEach((email) => {\r\n      const newEntry = { email: email };\r\n      const newEntryList = {\r\n        email: email,\r\n        listIds: [6],\r\n        attributes: {\r\n          EVENT_DATE: new Date(event.date),\r\n        },\r\n      };\r\n      emailsArray = [...emailsArray, newEntry];\r\n      emailsArrayWithList = [...emailsArrayWithList, newEntryList];\r\n    });\r\n\r\n    const eventDate = formateToDateWithFullWords(event.date);\r\n    const startAt = formatLabelTimePicker(event.startAt);\r\n    const endAt = formatLabelTimePicker(event.endAt);\r\n    const creneaux = startAt + \" et \" + endAt;\r\n\r\n    sendSmtpEmail = {\r\n      to: emailsArray,\r\n      params: {\r\n        prenom: user.displayName,\r\n        message: message,\r\n        nomEvent: event.name,\r\n        adresse: event.place,\r\n        invites: event.people,\r\n        date: eventDate,\r\n        creneaux: creneaux,\r\n      },\r\n      templateId: 7,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    return apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        return true;\r\n      },\r\n      function (error) {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  async function getWishList(userID) {\r\n    const req = await refUsers.doc(userID).get();\r\n    const res = req.data();\r\n    return res.wishlist || [];\r\n  }\r\n\r\n  async function deleteItemFromWishList(sellerID) {\r\n    let newWishList = await getWishList(auth.currentUser.uid);\r\n    newWishList = newWishList.filter((item) => item !== sellerID);\r\n    await refUsers.doc(auth.currentUser.uid).update({\r\n      wishlist: newWishList,\r\n    });\r\n    return newWishList;\r\n  }\r\n\r\n  async function addItemToWishListOfUser(sellerID) {\r\n    let newWishList = await getWishList(auth.currentUser.uid);\r\n    newWishList = [...newWishList, sellerID];\r\n    refUsers.doc(auth.currentUser.uid).update({\r\n      wishlist: newWishList,\r\n    });\r\n    return;\r\n  }\r\n\r\n  async function getWishListCountOfSeller(sellerID) {\r\n    const users = await refUsers\r\n      .where(\"wishlist\", \"array-contains\", sellerID)\r\n      .get();\r\n    return users.docs.length;\r\n  }\r\n\r\n  async function isSellerInWishListOfUser(id) {\r\n    const currentWishList = await getWishList(auth.currentUser.uid);\r\n    const isSellerInList = currentWishList.filter((item) => item === id);\r\n\r\n    return isSellerInList.length > 0 ? true : false;\r\n  }\r\n\r\n  async function getEmailOfSellerWithUid(sellerID) {\r\n    const query = await refSellers.doc(sellerID).get();\r\n    const result = query.data();\r\n    return result.email;\r\n  }\r\n\r\n  async function sendInBlue_sendToParrainAboutNewReferral(referralCode) {\r\n    // Aller choper en bdd le seller correspondant au referral code\r\n    const query = await refSellers\r\n      .where(\"referralToken\", \"==\", referralCode)\r\n      .get();\r\n    const result = query[0].data();\r\n    const email = result.email;\r\n\r\n    // Puis envoyer à ce seller le mail de new referral\r\n    sendSmtpEmail = {\r\n      to: [\r\n        {\r\n          email: email,\r\n        },\r\n      ],\r\n      params: {\r\n        name: \"a\",\r\n      },\r\n      templateId: 14,\r\n      headers: {\r\n        \"X-Mailin-custom\":\r\n          \"custom_header_1:custom_value_1|custom_header_2:custom_value_2\",\r\n      },\r\n    };\r\n\r\n    apiInstanceSend.sendTransacEmail(sendSmtpEmail).then(\r\n      function (data) {\r\n        console.log(\"API called successfully. Returned data: \" + data);\r\n      },\r\n      function (error) {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  function checkoutStart(price) {\r\n    const saleToken =\r\n      Date.now().toString().substr(0, 9) +\r\n      Math.random().toString().substr(2, 9);\r\n    refEvents.doc(event.id).update({\r\n      saleToken: saleToken,\r\n    });\r\n    createStripeCheckout({\r\n      price: price,\r\n      eventId: event.id,\r\n      saleToken: saleToken,\r\n    })\r\n      .then((response) => {\r\n        const sessionId = response.data.id;\r\n        stripe.redirectToCheckout({ sessionId: sessionId });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n  \r\n  function checkoutSubscription() {\r\n    const saleToken =\r\n      Date.now().toString().substr(0, 9) +\r\n      Math.random().toString().substr(2, 9);\r\n    refSellers.doc(seller.uid).update({\r\n      saleToken: saleToken,\r\n    });\r\n    createStripeSubscribe({\r\n      sellerID: seller.uid,\r\n      saleToken: saleToken,\r\n    })\r\n      .then((response) => {\r\n        const sessionId = response.data.id;\r\n        stripe.redirectToCheckout({ sessionId: sessionId });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  async function getSaleTokenOfEventFromDb() {\r\n    const req = await refEvents.doc(event.id).get();\r\n    const res = req.data();\r\n    return res.saleToken;\r\n  }\r\n\r\n  async function checkoutCheck(session_id) {\r\n    console.log(session_id);\r\n    return checkStripeReturn({ session_id: session_id }).then((result) => {\r\n      return {\r\n        status: result.data.payment_status,\r\n        amount: result.data.amount_total,\r\n        id: result.data.payment_intent,\r\n      };\r\n    });\r\n  }\r\n\r\n  async function addFoodTypeToSeller(type) {\r\n    if (type === \"Aucun\") return;\r\n    let newSeller = { ...seller };\r\n    let newFoodTypes = [];\r\n    if (seller.foodTypes === undefined) {\r\n      newFoodTypes.push(type);\r\n    } else {\r\n      newFoodTypes = seller.foodTypes;\r\n      newFoodTypes.push(type);\r\n    }\r\n    newSeller[\"foodTypes\"] = newFoodTypes;\r\n    await refSellers.doc(auth.currentUser.uid).update({\r\n      foodTypes: newFoodTypes,\r\n    });\r\n    setSeller(newSeller);\r\n  }\r\n\r\n  async function deleteFoodTypeToSeller(serviceID) {\r\n    const req = await refSellers\r\n      .doc(auth.currentUser.uid)\r\n      .collection(\"services\")\r\n      .doc(serviceID)\r\n      .get();\r\n    const data = req.data();\r\n    const type = data.foodType;\r\n\r\n    if (type === \"Aucun\") return;\r\n    let newSeller = { ...seller };\r\n    let newFoodTypes = [];\r\n    if (seller.foodTypes === undefined) return;\r\n    else {\r\n      newFoodTypes = seller.foodTypes;\r\n      let indexes = seller.foodTypes\r\n        .map((item, index) => (item === type ? index : \"\"))\r\n        .filter(String);\r\n      if (indexes[0] === -1) return;\r\n      else if (newFoodTypes.length > 1) {\r\n        newFoodTypes.splice(indexes[0], 1);\r\n      } else newFoodTypes = [];\r\n\r\n      newSeller[\"foodTypes\"] = newFoodTypes;\r\n      await refSellers.doc(auth.currentUser.uid).update({\r\n        foodTypes: newFoodTypes,\r\n      });\r\n      setSeller(newSeller);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        login,\r\n        subscribe,\r\n        sellerSubscribe,\r\n        logout,\r\n        user,\r\n        seller,\r\n        event,\r\n        setUser,\r\n        addEvent,\r\n        addToCard,\r\n        getServiceQuantityInCard,\r\n        loadingButtonAddToCard,\r\n        setLoadingButtonAddToCard,\r\n        setCurrentStepProcess,\r\n        currentStepProcess,\r\n        formatLabelTimePicker,\r\n        getAuthUserFromHisEmail,\r\n        updateUserEmail,\r\n        updateQuantityService,\r\n        signInWithGoogle,\r\n        getCurrentUserProfil,\r\n        verifyLogin,\r\n        updateCurrentUserProfil,\r\n        addSellerDescription,\r\n        setImageSellerDB,\r\n        addSellerServices,\r\n        addOneSellerService,\r\n        getServicesOfCurrentSellerFromDB,\r\n        addSellerDocuments,\r\n        getSellerDocumentsFromDB,\r\n        setSellerStatus,\r\n        updateSellerDocumentsStatus,\r\n        getSellersInDbWithUids,\r\n        deleteOldSellerPicture,\r\n        addSalesInDB,\r\n        updateEventStatus,\r\n        getSalesOfEventIdFromDB,\r\n        clearEvent,\r\n        getSalesOfSellerIdFromDB,\r\n        getEventOfSaleFromDB,\r\n        formateToDate,\r\n        formateToDateWithWords,\r\n        updateSaleStatusInDB,\r\n        updateSaleNote,\r\n        addViewsOfSeller,\r\n        getViewsOfSeller,\r\n        isSellerAllowedToModifyAndDeleteService,\r\n        deleteServiceOfSeller,\r\n        updateSellerProfil,\r\n        getSellerReferralCountFromDB,\r\n        getEventFromUid,\r\n        getReviewsOfSellerUid,\r\n        addReviewOfSellerUid,\r\n        sendInBlue_sendNotificationToSellerOfReview,\r\n        sendInBlue_addContactToNewsletter,\r\n        sendInBlue_sendInvitations,\r\n        sendInBlue_sendRecapToUserAfterPayment,\r\n        sendInBlue_sendNewSaleToSeller,\r\n        sendInBlue_sendToParrainAboutNewReferral,\r\n        sendInBlue_sendPaymentRequestToAdmin,\r\n        getWishList,\r\n        deleteItemFromWishList,\r\n        addItemToWishListOfUser,\r\n        isSellerInWishListOfUser,\r\n        getEmailOfSellerWithUid,\r\n        checkoutStart,\r\n        getSaleTokenOfEventFromDb,\r\n        checkoutCheck,\r\n        getTotalAmountDueToSeller,\r\n        homeSellersDisplay,\r\n        setHomeSellersDisplay,\r\n        getWishListCountOfSeller,\r\n        getSellerPosition,\r\n        getSellersCount,\r\n        sendInBlue_sendBillRequestToAdmin,\r\n        addFoodTypeToSeller,\r\n        deleteFoodTypeToSeller,\r\n        isCardWidgetOpen,\r\n        setIsCardWidgetOpen,\r\n      }}\r\n    >\r\n      {!loading && children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}