{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CreateModel', 'model/CreateWebhook', 'model/ErrorModel', 'model/GetWebhook', 'model/GetWebhooks', 'model/UpdateWebhook'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CreateModel'), require('../model/CreateWebhook'), require('../model/ErrorModel'), require('../model/GetWebhook'), require('../model/GetWebhooks'), require('../model/UpdateWebhook'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.WebhooksApi = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.CreateModel, root.SibApiV3Sdk.CreateWebhook, root.SibApiV3Sdk.ErrorModel, root.SibApiV3Sdk.GetWebhook, root.SibApiV3Sdk.GetWebhooks, root.SibApiV3Sdk.UpdateWebhook);\n  }\n})(this, function (ApiClient, CreateModel, CreateWebhook, ErrorModel, GetWebhook, GetWebhooks, UpdateWebhook) {\n  'use strict';\n  /**\n   * Webhooks service.\n   * @module api/WebhooksApi\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new WebhooksApi. \n   * @alias module:api/WebhooksApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n\n  var exports = function exports(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n    /**\n     * Create a webhook\n     * @param {module:model/CreateWebhook} createWebhook Values to create a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CreateModel} and HTTP response\n     */\n\n    this.createWebhookWithHttpInfo = function (createWebhook) {\n      var postBody = createWebhook; // verify the required parameter 'createWebhook' is set\n\n      if (createWebhook === undefined || createWebhook === null) {\n        throw new Error(\"Missing the required parameter 'createWebhook' when calling createWebhook\");\n      }\n\n      var pathParams = {};\n      var queryParams = {};\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CreateModel;\n      return this.apiClient.callApi('/webhooks', 'POST', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Create a webhook\n     * @param {module:model/CreateWebhook} createWebhook Values to create a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CreateModel}\n     */\n\n\n    this.createWebhook = function (createWebhook) {\n      return this.createWebhookWithHttpInfo(createWebhook).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n    /**\n     * Delete a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n\n\n    this.deleteWebhookWithHttpInfo = function (webhookId) {\n      var postBody = null; // verify the required parameter 'webhookId' is set\n\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling deleteWebhook\");\n      }\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {};\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n      return this.apiClient.callApi('/webhooks/{webhookId}', 'DELETE', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Delete a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n\n\n    this.deleteWebhook = function (webhookId) {\n      return this.deleteWebhookWithHttpInfo(webhookId).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n    /**\n     * Get a webhook details\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetWebhook} and HTTP response\n     */\n\n\n    this.getWebhookWithHttpInfo = function (webhookId) {\n      var postBody = null; // verify the required parameter 'webhookId' is set\n\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling getWebhook\");\n      }\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {};\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetWebhook;\n      return this.apiClient.callApi('/webhooks/{webhookId}', 'GET', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Get a webhook details\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetWebhook}\n     */\n\n\n    this.getWebhook = function (webhookId) {\n      return this.getWebhookWithHttpInfo(webhookId).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n    /**\n     * Get all webhooks\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.type Filter on webhook type (default to transactional)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetWebhooks} and HTTP response\n     */\n\n\n    this.getWebhooksWithHttpInfo = function (opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {\n        'type': opts['type']\n      };\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetWebhooks;\n      return this.apiClient.callApi('/webhooks', 'GET', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Get all webhooks\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.type Filter on webhook type (default to transactional)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetWebhooks}\n     */\n\n\n    this.getWebhooks = function (opts) {\n      return this.getWebhooksWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n    /**\n     * Update a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @param {module:model/UpdateWebhook} updateWebhook Values to update a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n\n\n    this.updateWebhookWithHttpInfo = function (webhookId, updateWebhook) {\n      var postBody = updateWebhook; // verify the required parameter 'webhookId' is set\n\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling updateWebhook\");\n      } // verify the required parameter 'updateWebhook' is set\n\n\n      if (updateWebhook === undefined || updateWebhook === null) {\n        throw new Error(\"Missing the required parameter 'updateWebhook' when calling updateWebhook\");\n      }\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {};\n      var collectionQueryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n      return this.apiClient.callApi('/webhooks/{webhookId}', 'PUT', pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    };\n    /**\n     * Update a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @param {module:model/UpdateWebhook} updateWebhook Values to update a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n\n\n    this.updateWebhook = function (webhookId, updateWebhook) {\n      return this.updateWebhookWithHttpInfo(webhookId, updateWebhook).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    };\n  };\n\n  return exports;\n});","map":{"version":3,"sources":["/Users/bonnieclyde/Desktop/Copie de Nivid (1)/node_modules/sib-api-v3-sdk/src/api/WebhooksApi.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","WebhooksApi","ApiClient","CreateModel","CreateWebhook","ErrorModel","GetWebhook","GetWebhooks","UpdateWebhook","apiClient","instance","createWebhookWithHttpInfo","createWebhook","postBody","undefined","Error","pathParams","queryParams","collectionQueryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","callApi","then","response_and_data","data","deleteWebhookWithHttpInfo","webhookId","deleteWebhook","getWebhookWithHttpInfo","getWebhook","getWebhooksWithHttpInfo","opts","getWebhooks","updateWebhookWithHttpInfo","updateWebhook"],"mappings":"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","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CreateModel', 'model/CreateWebhook', 'model/ErrorModel', 'model/GetWebhook', 'model/GetWebhooks', 'model/UpdateWebhook'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CreateModel'), require('../model/CreateWebhook'), require('../model/ErrorModel'), require('../model/GetWebhook'), require('../model/GetWebhooks'), require('../model/UpdateWebhook'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.WebhooksApi = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.CreateModel, root.SibApiV3Sdk.CreateWebhook, root.SibApiV3Sdk.ErrorModel, root.SibApiV3Sdk.GetWebhook, root.SibApiV3Sdk.GetWebhooks, root.SibApiV3Sdk.UpdateWebhook);\n  }\n}(this, function(ApiClient, CreateModel, CreateWebhook, ErrorModel, GetWebhook, GetWebhooks, UpdateWebhook) {\n  'use strict';\n\n  /**\n   * Webhooks service.\n   * @module api/WebhooksApi\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new WebhooksApi. \n   * @alias module:api/WebhooksApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n\n    /**\n     * Create a webhook\n     * @param {module:model/CreateWebhook} createWebhook Values to create a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CreateModel} and HTTP response\n     */\n    this.createWebhookWithHttpInfo = function(createWebhook) {\n      var postBody = createWebhook;\n\n      // verify the required parameter 'createWebhook' is set\n      if (createWebhook === undefined || createWebhook === null) {\n        throw new Error(\"Missing the required parameter 'createWebhook' when calling createWebhook\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CreateModel;\n\n      return this.apiClient.callApi(\n        '/webhooks', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Create a webhook\n     * @param {module:model/CreateWebhook} createWebhook Values to create a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CreateModel}\n     */\n    this.createWebhook = function(createWebhook) {\n      return this.createWebhookWithHttpInfo(createWebhook)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Delete a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n    this.deleteWebhookWithHttpInfo = function(webhookId) {\n      var postBody = null;\n\n      // verify the required parameter 'webhookId' is set\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling deleteWebhook\");\n      }\n\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/webhooks/{webhookId}', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Delete a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n    this.deleteWebhook = function(webhookId) {\n      return this.deleteWebhookWithHttpInfo(webhookId)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Get a webhook details\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetWebhook} and HTTP response\n     */\n    this.getWebhookWithHttpInfo = function(webhookId) {\n      var postBody = null;\n\n      // verify the required parameter 'webhookId' is set\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling getWebhook\");\n      }\n\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetWebhook;\n\n      return this.apiClient.callApi(\n        '/webhooks/{webhookId}', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get a webhook details\n     * @param {Number} webhookId Id of the webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetWebhook}\n     */\n    this.getWebhook = function(webhookId) {\n      return this.getWebhookWithHttpInfo(webhookId)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Get all webhooks\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.type Filter on webhook type (default to transactional)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetWebhooks} and HTTP response\n     */\n    this.getWebhooksWithHttpInfo = function(opts) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'type': opts['type'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetWebhooks;\n\n      return this.apiClient.callApi(\n        '/webhooks', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get all webhooks\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.type Filter on webhook type (default to transactional)\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetWebhooks}\n     */\n    this.getWebhooks = function(opts) {\n      return this.getWebhooksWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Update a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @param {module:model/UpdateWebhook} updateWebhook Values to update a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n    this.updateWebhookWithHttpInfo = function(webhookId, updateWebhook) {\n      var postBody = updateWebhook;\n\n      // verify the required parameter 'webhookId' is set\n      if (webhookId === undefined || webhookId === null) {\n        throw new Error(\"Missing the required parameter 'webhookId' when calling updateWebhook\");\n      }\n\n      // verify the required parameter 'updateWebhook' is set\n      if (updateWebhook === undefined || updateWebhook === null) {\n        throw new Error(\"Missing the required parameter 'updateWebhook' when calling updateWebhook\");\n      }\n\n\n      var pathParams = {\n        'webhookId': webhookId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['api-key', 'partner-key'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/webhooks/{webhookId}', 'PUT',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Update a webhook\n     * @param {Number} webhookId Id of the webhook\n     * @param {module:model/UpdateWebhook} updateWebhook Values to update a webhook\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n    this.updateWebhook = function(webhookId, updateWebhook) {\n      return this.updateWebhookWithHttpInfo(webhookId, updateWebhook)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n  };\n\n  return exports;\n}));\n"]},"metadata":{},"sourceType":"script"}