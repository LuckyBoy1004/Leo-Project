{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Boulot\\\\Nivid\\\\src\\\\components\\\\SellersMap.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { useAuth } from \"../context/userContext\"; // context\n\nconst SellersMap = props => {\n  _s();\n\n  const {\n    event\n  } = useAuth(); // context\n\n  const allSellers = props.allSellers;\n  const sellers = props.sellers;\n\n  function _mapLoaded(mapProps, map) {\n    map.setOptions({\n      styles: mapStyle\n    });\n  }\n\n  const containerStyle = {\n    width: '100%'\n  };\n  const mapStyle = [{\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"poi\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }, {\n    \"featureType\": \"transit\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  }];\n  const maxCharInPlace = 40;\n  return /*#__PURE__*/_jsxDEV(Map, {\n    containerStyle: containerStyle,\n    initialCenter: event.latLng,\n    style: {\n      width: '100%'\n    },\n    google: props.google,\n    zoom: 15,\n    mapId: \"a6dc99a9af73907\",\n    onReady: (mapProps, map) => _mapLoaded(mapProps, map),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blackAdressOnMap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: \"/images/5km.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [event.place.substr(0, maxCharInPlace), maxCharInPlace < event.place.length && \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      title: 'The marker`s title will appear as a tooltip.',\n      name: 'SOMA',\n      position: event.latLng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), Object.entries(allSellers).map(([key, seller]) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        name: 'SOMA',\n        position: {\n          lat: seller.latLng.lat,\n          lng: seller.latLng.lng\n        },\n        icon: {\n          url: \"/images/grey_marker.png\",\n          anchor: new props.google.maps.Point(12, 30),\n          scaledSize: new props.google.maps.Size(28, 30)\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 28\n      }, this);\n    }), Object.entries(sellers).map(([key, seller]) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        name: 'SOMA',\n        position: {\n          lat: seller.latLng.lat,\n          lng: seller.latLng.lng\n        },\n        icon: {\n          url: \"/images/blue_marker.png\",\n          anchor: new props.google.maps.Point(12, 30),\n          scaledSize: new props.google.maps.Size(28, 30)\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SellersMap, \"lBhEXkOqt34g4yq65ryNP7+CyWc=\", false, function () {\n  return [useAuth];\n});\n\n_c = SellersMap;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAim92JbJjr_fgoP0bYxzdCAz9PsAu5JWY\"\n})(SellersMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"SellersMap\");","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/src/components/SellersMap.js"],"names":["React","Map","Marker","GoogleApiWrapper","useAuth","SellersMap","props","event","allSellers","sellers","_mapLoaded","mapProps","map","setOptions","styles","mapStyle","containerStyle","width","maxCharInPlace","latLng","google","place","substr","length","Object","entries","key","seller","lat","lng","url","anchor","maps","Point","scaledSize","Size","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport { useAuth } from \"../context/userContext\"; // context\r\n\r\nconst SellersMap = (props) => {\r\n\r\n\r\n    const { event } = useAuth() // context\r\n    const allSellers = props.allSellers\r\n    const sellers = props.sellers\r\n\r\n\r\n    function _mapLoaded(mapProps, map) {\r\n        map.setOptions({\r\n            styles: mapStyle\r\n        })\r\n    }\r\n\r\n    const containerStyle = {\r\n        width: '100%'\r\n    }\r\n\r\n\r\n    const mapStyle = [\r\n        {\r\n            \"featureType\": \"administrative\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n        },\r\n        {\r\n            \"featureType\": \"poi\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"labels.icon\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n        },\r\n        {\r\n            \"featureType\": \"transit\",\r\n            \"stylers\": [{ \"visibility\": \"off\" }]\r\n        }\r\n    ]\r\n\r\n    const maxCharInPlace = 40;\r\n\r\n    return (\r\n        <Map\r\n            containerStyle={containerStyle}\r\n            initialCenter={event.latLng}\r\n            style={{ width: '100%' }}\r\n            google={props.google}\r\n            zoom={15}\r\n            mapId=\"a6dc99a9af73907\"\r\n            onReady={(mapProps, map) => _mapLoaded(mapProps, map)}\r\n        >\r\n                <div className=\"blackAdressOnMap\">\r\n                    <img alt=\"\" src=\"/images/5km.png\" />\r\n                    <p>\r\n                        {event.place.substr(0, maxCharInPlace)}\r\n                        {maxCharInPlace < event.place.length && \"...\"}\r\n                    </p>\r\n                </div>\r\n                <Marker\r\n                    title={'The marker`s title will appear as a tooltip.'}\r\n                    name={'SOMA'}\r\n                    position={event.latLng} />\r\n\r\n                {Object.entries(allSellers).map(([key, seller]) => {\r\n                    return <Marker\r\n                        key={key}\r\n                        name={'SOMA'}\r\n                        position={{ lat: seller.latLng.lat, lng: seller.latLng.lng }}\r\n                        icon={{\r\n                            url: \"/images/grey_marker.png\",\r\n                            anchor: new props.google.maps.Point(12, 30),\r\n                            scaledSize: new props.google.maps.Size(28, 30)\r\n                        }}\r\n                    />\r\n                })}\r\n\r\n                {Object.entries(sellers).map(([key, seller]) => {\r\n                    return <Marker\r\n                        key={key}\r\n                        name={'SOMA'}\r\n                        position={{ lat: seller.latLng.lat, lng: seller.latLng.lng }}\r\n                        icon={{\r\n                            url: \"/images/blue_marker.png\",\r\n                            anchor: new props.google.maps.Point(12, 30),\r\n                            scaledSize: new props.google.maps.Size(28, 30)\r\n                        }}\r\n                    />\r\n                })}\r\n            </Map>\r\n\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: (\"AIzaSyAim92JbJjr_fgoP0bYxzdCAz9PsAu5JWY\")\r\n})(SellersMap)"]},"metadata":{},"sourceType":"module"}