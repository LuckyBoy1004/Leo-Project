{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/GetSmtpTemplateOverviewSender'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./GetSmtpTemplateOverviewSender'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.GetSmtpTemplateOverview = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.GetSmtpTemplateOverviewSender);\n  }\n})(this, function (ApiClient, GetSmtpTemplateOverviewSender) {\n  'use strict';\n  /**\n   * The GetSmtpTemplateOverview model module.\n   * @module model/GetSmtpTemplateOverview\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetSmtpTemplateOverview</code>.\n   * @alias module:model/GetSmtpTemplateOverview\n   * @class\n   * @param id {Number} ID of the template\n   * @param name {String} Name of the template\n   * @param subject {String} Subject of the template\n   * @param isActive {Boolean} Status of template (true=active, false=inactive)\n   * @param testSent {Boolean} Status of test sending for the template (true=test email has been sent, false=test email has not been sent)\n   * @param sender {module:model/GetSmtpTemplateOverviewSender} \n   * @param replyTo {String} Email defined as the \\\"Reply to\\\" for the template\n   * @param toField {String} Customisation of the \\\"to\\\" field for the template\n   * @param tag {String} Tag of the template\n   * @param htmlContent {String} HTML content of the template\n   * @param createdAt {Date} Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @param modifiedAt {Date} Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   */\n\n  var exports = function exports(id, name, subject, isActive, testSent, sender, replyTo, toField, tag, htmlContent, createdAt, modifiedAt) {\n    var _this = this;\n\n    _this['id'] = id;\n    _this['name'] = name;\n    _this['subject'] = subject;\n    _this['isActive'] = isActive;\n    _this['testSent'] = testSent;\n    _this['sender'] = sender;\n    _this['replyTo'] = replyTo;\n    _this['toField'] = toField;\n    _this['tag'] = tag;\n    _this['htmlContent'] = htmlContent;\n    _this['createdAt'] = createdAt;\n    _this['modifiedAt'] = modifiedAt;\n  };\n  /**\n   * Constructs a <code>GetSmtpTemplateOverview</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetSmtpTemplateOverview} obj Optional instance to populate.\n   * @return {module:model/GetSmtpTemplateOverview} The populated <code>GetSmtpTemplateOverview</code> instance.\n   */\n\n\n  exports.constructFromObject = function (data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n\n      if (data.hasOwnProperty('subject')) {\n        obj['subject'] = ApiClient.convertToType(data['subject'], 'String');\n      }\n\n      if (data.hasOwnProperty('isActive')) {\n        obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');\n      }\n\n      if (data.hasOwnProperty('testSent')) {\n        obj['testSent'] = ApiClient.convertToType(data['testSent'], 'Boolean');\n      }\n\n      if (data.hasOwnProperty('sender')) {\n        obj['sender'] = GetSmtpTemplateOverviewSender.constructFromObject(data['sender']);\n      }\n\n      if (data.hasOwnProperty('replyTo')) {\n        obj['replyTo'] = ApiClient.convertToType(data['replyTo'], 'String');\n      }\n\n      if (data.hasOwnProperty('toField')) {\n        obj['toField'] = ApiClient.convertToType(data['toField'], 'String');\n      }\n\n      if (data.hasOwnProperty('tag')) {\n        obj['tag'] = ApiClient.convertToType(data['tag'], 'String');\n      }\n\n      if (data.hasOwnProperty('htmlContent')) {\n        obj['htmlContent'] = ApiClient.convertToType(data['htmlContent'], 'String');\n      }\n\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');\n      }\n\n      if (data.hasOwnProperty('modifiedAt')) {\n        obj['modifiedAt'] = ApiClient.convertToType(data['modifiedAt'], 'Date');\n      }\n\n      if (data.hasOwnProperty('doiTemplate')) {\n        obj['doiTemplate'] = ApiClient.convertToType(data['doiTemplate'], 'Boolean');\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * ID of the template\n   * @member {Number} id\n   */\n\n\n  exports.prototype['id'] = undefined;\n  /**\n   * Name of the template\n   * @member {String} name\n   */\n\n  exports.prototype['name'] = undefined;\n  /**\n   * Subject of the template\n   * @member {String} subject\n   */\n\n  exports.prototype['subject'] = undefined;\n  /**\n   * Status of template (true=active, false=inactive)\n   * @member {Boolean} isActive\n   */\n\n  exports.prototype['isActive'] = undefined;\n  /**\n   * Status of test sending for the template (true=test email has been sent, false=test email has not been sent)\n   * @member {Boolean} testSent\n   */\n\n  exports.prototype['testSent'] = undefined;\n  /**\n   * @member {module:model/GetSmtpTemplateOverviewSender} sender\n   */\n\n  exports.prototype['sender'] = undefined;\n  /**\n   * Email defined as the \\\"Reply to\\\" for the template\n   * @member {String} replyTo\n   */\n\n  exports.prototype['replyTo'] = undefined;\n  /**\n   * Customisation of the \\\"to\\\" field for the template\n   * @member {String} toField\n   */\n\n  exports.prototype['toField'] = undefined;\n  /**\n   * Tag of the template\n   * @member {String} tag\n   */\n\n  exports.prototype['tag'] = undefined;\n  /**\n   * HTML content of the template\n   * @member {String} htmlContent\n   */\n\n  exports.prototype['htmlContent'] = undefined;\n  /**\n   * Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @member {Date} createdAt\n   */\n\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @member {Date} modifiedAt\n   */\n\n  exports.prototype['modifiedAt'] = undefined;\n  /**\n   * It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.\n   * @member {Boolean} doiTemplate\n   */\n\n  exports.prototype['doiTemplate'] = undefined;\n  return exports;\n});","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/node_modules/sib-api-v3-sdk/src/model/GetSmtpTemplateOverview.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","GetSmtpTemplateOverview","ApiClient","GetSmtpTemplateOverviewSender","id","name","subject","isActive","testSent","sender","replyTo","toField","tag","htmlContent","createdAt","modifiedAt","_this","constructFromObject","data","obj","hasOwnProperty","convertToType","prototype","undefined"],"mappings":"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","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/GetSmtpTemplateOverviewSender'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./GetSmtpTemplateOverviewSender'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.GetSmtpTemplateOverview = factory(root.SibApiV3Sdk.ApiClient, root.SibApiV3Sdk.GetSmtpTemplateOverviewSender);\n  }\n}(this, function(ApiClient, GetSmtpTemplateOverviewSender) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetSmtpTemplateOverview model module.\n   * @module model/GetSmtpTemplateOverview\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>GetSmtpTemplateOverview</code>.\n   * @alias module:model/GetSmtpTemplateOverview\n   * @class\n   * @param id {Number} ID of the template\n   * @param name {String} Name of the template\n   * @param subject {String} Subject of the template\n   * @param isActive {Boolean} Status of template (true=active, false=inactive)\n   * @param testSent {Boolean} Status of test sending for the template (true=test email has been sent, false=test email has not been sent)\n   * @param sender {module:model/GetSmtpTemplateOverviewSender} \n   * @param replyTo {String} Email defined as the \\\"Reply to\\\" for the template\n   * @param toField {String} Customisation of the \\\"to\\\" field for the template\n   * @param tag {String} Tag of the template\n   * @param htmlContent {String} HTML content of the template\n   * @param createdAt {Date} Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @param modifiedAt {Date} Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   */\n  var exports = function(id, name, subject, isActive, testSent, sender, replyTo, toField, tag, htmlContent, createdAt, modifiedAt) {\n    var _this = this;\n\n    _this['id'] = id;\n    _this['name'] = name;\n    _this['subject'] = subject;\n    _this['isActive'] = isActive;\n    _this['testSent'] = testSent;\n    _this['sender'] = sender;\n    _this['replyTo'] = replyTo;\n    _this['toField'] = toField;\n    _this['tag'] = tag;\n    _this['htmlContent'] = htmlContent;\n    _this['createdAt'] = createdAt;\n    _this['modifiedAt'] = modifiedAt;\n\n  };\n\n  /**\n   * Constructs a <code>GetSmtpTemplateOverview</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetSmtpTemplateOverview} obj Optional instance to populate.\n   * @return {module:model/GetSmtpTemplateOverview} The populated <code>GetSmtpTemplateOverview</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('subject')) {\n        obj['subject'] = ApiClient.convertToType(data['subject'], 'String');\n      }\n      if (data.hasOwnProperty('isActive')) {\n        obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');\n      }\n      if (data.hasOwnProperty('testSent')) {\n        obj['testSent'] = ApiClient.convertToType(data['testSent'], 'Boolean');\n      }\n      if (data.hasOwnProperty('sender')) {\n        obj['sender'] = GetSmtpTemplateOverviewSender.constructFromObject(data['sender']);\n      }\n      if (data.hasOwnProperty('replyTo')) {\n        obj['replyTo'] = ApiClient.convertToType(data['replyTo'], 'String');\n      }\n      if (data.hasOwnProperty('toField')) {\n        obj['toField'] = ApiClient.convertToType(data['toField'], 'String');\n      }\n      if (data.hasOwnProperty('tag')) {\n        obj['tag'] = ApiClient.convertToType(data['tag'], 'String');\n      }\n      if (data.hasOwnProperty('htmlContent')) {\n        obj['htmlContent'] = ApiClient.convertToType(data['htmlContent'], 'String');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');\n      }\n      if (data.hasOwnProperty('modifiedAt')) {\n        obj['modifiedAt'] = ApiClient.convertToType(data['modifiedAt'], 'Date');\n      }\n      if (data.hasOwnProperty('doiTemplate')) {\n        obj['doiTemplate'] = ApiClient.convertToType(data['doiTemplate'], 'Boolean');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * ID of the template\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Name of the template\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Subject of the template\n   * @member {String} subject\n   */\n  exports.prototype['subject'] = undefined;\n  /**\n   * Status of template (true=active, false=inactive)\n   * @member {Boolean} isActive\n   */\n  exports.prototype['isActive'] = undefined;\n  /**\n   * Status of test sending for the template (true=test email has been sent, false=test email has not been sent)\n   * @member {Boolean} testSent\n   */\n  exports.prototype['testSent'] = undefined;\n  /**\n   * @member {module:model/GetSmtpTemplateOverviewSender} sender\n   */\n  exports.prototype['sender'] = undefined;\n  /**\n   * Email defined as the \\\"Reply to\\\" for the template\n   * @member {String} replyTo\n   */\n  exports.prototype['replyTo'] = undefined;\n  /**\n   * Customisation of the \\\"to\\\" field for the template\n   * @member {String} toField\n   */\n  exports.prototype['toField'] = undefined;\n  /**\n   * Tag of the template\n   * @member {String} tag\n   */\n  exports.prototype['tag'] = undefined;\n  /**\n   * HTML content of the template\n   * @member {String} htmlContent\n   */\n  exports.prototype['htmlContent'] = undefined;\n  /**\n   * Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @member {Date} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)\n   * @member {Date} modifiedAt\n   */\n  exports.prototype['modifiedAt'] = undefined;\n  /**\n   * It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.\n   * @member {Boolean} doiTemplate\n   */\n  exports.prototype['doiTemplate'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n"]},"metadata":{},"sourceType":"script"}