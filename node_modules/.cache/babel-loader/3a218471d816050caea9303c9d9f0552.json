{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\My Project\\\\Leo\\\\Nivid\\\\src\\\\components\\\\Prest_Dashboard_Services.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/userContext';\nimport { useFirebase } from \"../assets/base-context\";\nimport Title from './utilities/Title';\nimport SubTitle from './utilities/SubTitle';\nimport { ButtonSmall, ButtonLarge } from './utilities/Buttons';\nimport Image from '../components/utilities/Image';\nimport DeleteIcon from '@mui/icons-material/DeleteOutline';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport NumericInput from 'react-numeric-input';\nimport { useDetectClickOutside } from 'react-detect-click-outside';\nimport { CSSTransition } from 'react-transition-group';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FaTimes } from 'react-icons/fa';\nimport Loader from './Loader';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nconst BoxConfirm = ({\n  type,\n  position,\n  callback,\n  callbackClose\n}) => {\n  _s();\n\n  const refConfirmBox = useDetectClickOutside({\n    onTriggered: callbackClose\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refConfirmBox,\n    className: `confirmBox ${position}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [type === \"delete\" && \"Confirmation de suprresion d'une variation\", type === \"save\" && \"Confirmation de sauvegarde\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [type === \"delete\" && \"Êtes-vous sûr de vouloir supprimer cette variation ?\", type === \"save\" && \"Vous n'avez rien oublié ?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [type === \"delete\" && \"Cette action est irréversible\", type === \"save\" && \"Si jamais... Vous pouvez toujours modifier ce service directement depuis votre dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n      onClick: callback,\n      color: type === \"delete\" ? \"red\" : \"green\",\n      value: \"Je confirme\",\n      marginTop: \"20px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_s(BoxConfirm, \"Mqm6DHivUEoOi7PWz+tHvxIRV+Y=\", false, function () {\n  return [useDetectClickOutside];\n});\n\n_c = BoxConfirm;\nconst initialNewService = {\n  // category: seller.category,\n  name: \"\",\n  images: [],\n  description: \"\",\n  price: 0,\n  variations: [],\n  foodType: \"Aucun\",\n  id: null\n};\n\nconst Prest_Dashboard_Services = ({\n  setStep\n}) => {\n  _s2();\n\n  const firebaseContext = useFirebase();\n  const storage = firebaseContext.storage();\n  const [error, setError] = useState({\n    type: \"\",\n    message: \"\"\n  });\n  const [services, setServices] = useState([]);\n  const [pictureTokensToDelete, setPictureTokensToDelete] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [isMounted, setIsMounted] = useState(false);\n  const [newService, setNewService] = useState(initialNewService);\n  const [addingService, setAddingService] = useState(false);\n  const [isPopupConfirmDeleteOpened, setIsPopupConfirmDeleteOpened] = useState(false);\n  const [isPopupConfirmSaveOpened, setIsPopupConfirmSaveOpened] = useState(false);\n  const [currentDeletingVariation, setCurrentDeletingVariation] = useState(-1);\n  const [isServiceAddedCorrectly, setIsServiceAddedCorrectly] = useState(false);\n  const [isVariations, setIsVariations] = useState(false);\n  const {\n    seller,\n    addOneSellerService,\n    getServicesOfCurrentSellerFromDB,\n    deleteOldSellerPicture,\n    isSellerAllowedToModifyAndDeleteService,\n    deleteServiceOfSeller,\n    addFoodTypeToSeller,\n    deleteFoodTypeToSeller\n  } = useAuth();\n  useEffect(() => {\n    getServicesOfCurrentSellerFromDB().then(services => {\n      setServices(services);\n      setIsMounted(true);\n    });\n  }, []);\n\n  function euroFormat(num) {\n    return num + '€';\n  }\n\n  function handleChange(e) {\n    const type = e.target.files[0].type;\n    const size = e.target.files[0].size;\n\n    if (type !== \"image/png\" && type !== \"image/jpeg\" && type !== \"image/jpg\") {\n      setError({\n        type: \"imageType\",\n        message: \"Votre fichier n'est ni une image jpeg, jpg ou PNG.\"\n      });\n    } else if (size > 2000000) {\n      setError({\n        type: \"imageSize\",\n        message: \"Votre image fait plus de 2Mo.\"\n      });\n    } else {\n      const newURL = URL.createObjectURL(e.target.files[0]);\n      e.target.files[0].localURL = newURL;\n      setNewService({ ...newService,\n        images: [...newService.images, e.target.files[0]]\n      });\n      setError({\n        type: \"\",\n        message: \"\"\n      });\n    }\n  }\n\n  function handleDeletePicture(item) {\n    const newPictures = [...newService.images];\n\n    for (var i = 0; i < newPictures.length; i++) {\n      if (newPictures[i].localURL === item || newPictures[i].url === item) {\n        if (newPictures[i].url === item) {\n          setPictureTokensToDelete([...pictureTokensToDelete, newPictures[i].token]);\n        }\n\n        newPictures.splice(i, 1);\n      }\n    }\n\n    setNewService({ ...newService,\n      images: newPictures\n    });\n  }\n\n  function handleServiceClicked(item) {\n    setIsFormOpen(true);\n    setIsVariations(item.variations.length > 0 ? true : false);\n\n    if (newService.id === item.id) {\n      return;\n    }\n\n    clearInputs();\n    setNewService(item);\n  }\n\n  function clearInputs() {\n    setNewService(initialNewService);\n    setError({\n      type: \"\",\n      message: \"\"\n    });\n  }\n\n  async function handleAddService() {\n    setIsPopupConfirmSaveOpened(false);\n    setAddingService(true);\n\n    if (newService.name.length < 5) {\n      setError({\n        type: \"name\",\n        message: \"Le nom de votre offre doit faire au minimum 5 caractères.\"\n      });\n    } else if (newService.description.length < 20 || newService.description.length > 300) {\n      setError({\n        type: \"description\",\n        message: \"Votre description doit comporter entre 20 et 300 caractères.\"\n      });\n    } else if (newService.images.length === 0) {\n      setError({\n        type: \"noPictures\",\n        message: \"Vous devez ajouter au moins une photo de votre service.\"\n      });\n    } else if (newService.images.length > 3) {\n      setError({\n        type: \"tooMuchPictures\",\n        message: \"Impossible d'ajouter plus de 3 photos au service.\"\n      });\n    } else {\n      //Si l'id est égal à Null, c'est que le service est nouveau\n      //Si l'id n'est pas null, on ne créera pas un nouveau service on modifiera l'actuel\n      if (newService.id !== null) {\n        const isAllowed = await isSellerAllowedToModifyAndDeleteService(newService.id);\n\n        if (isAllowed) {\n          const newServicesList = [...services];\n          var index = newServicesList.findIndex(service => service.id === newService.id);\n          const serviceToUpload = { ...newService\n          };\n          if (!isVariations) serviceToUpload.variations = [];\n          newServicesList[index] = serviceToUpload;\n          const service = await handleImagesFiles(serviceToUpload);\n          setServices(newServicesList);\n          await addOneSellerService(service);\n          clearInputs();\n          setIsServiceAddedCorrectly(true);\n          setTimeout(() => {\n            setIsServiceAddedCorrectly(false);\n          }, 2000);\n        }\n      } else {\n        if (services.length >= 5) {\n          setError({\n            type: \"maxServices\",\n            message: \"Vous avez déjà atteint le maximum d'offres sur votre boutique.\"\n          });\n        } else {\n          const reconstructedService = newService;\n          reconstructedService.id = services.length;\n          if (!isVariations) reconstructedService.variations = [];\n          const service = await handleImagesFiles(reconstructedService);\n          const refDocID = await addOneSellerService(service);\n          if (seller.category === \"nourriture\") await addFoodTypeToSeller(service.foodType !== undefined ? service.foodType : \"Aucun\");\n          const newServiceWithId = { ...service,\n            id: refDocID\n          };\n          setServices([...services, newServiceWithId]);\n          clearInputs();\n          setIsServiceAddedCorrectly(true);\n          setTimeout(() => {\n            setIsServiceAddedCorrectly(false);\n          }, 2000);\n        }\n      }\n\n      setIsFormOpen(false);\n      window.scrollTo(0, 0);\n    }\n\n    setAddingService(false);\n  }\n\n  async function handleImagesFiles(service) {\n    let newServiceImageArray = service.images.filter(image => !image.localURL);\n    let newServiceArray = {\n      description: service.description,\n      id: service.id,\n      name: service.name,\n      images: newServiceImageArray,\n      price: service.price,\n      category: seller.category,\n      variations: service.variations,\n      foodType: service.foodType !== undefined ? service.foodType : \"Aucun\"\n    };\n\n    for (var i = 0; i < service.images.length; i++) {\n      if (service.images[i].localURL) {\n        const token = Math.random().toString(36).substr(2, 19);\n        const url = await handleUploadFile(service.images[i], token);\n        let newImg = {\n          url: url,\n          token: token\n        };\n        newServiceImageArray.push(newImg);\n        newServiceArray.images = newServiceImageArray;\n        pictureTokensToDelete.length > 0 && deleteOldSellerPicture(pictureTokensToDelete, \"services\");\n      }\n    }\n\n    return newServiceArray;\n  }\n\n  function handleUploadFile(image, token) {\n    return new Promise((resolve, reject) => {\n      const upload = storage.ref(`services/${token}`).put(image);\n      upload.on(\"state_changed\", snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(\"services\").child(token).getDownloadURL().then(url => {\n          resolve(url);\n        }).catch(error => {\n          console.error(error);\n          reject(error);\n        });\n      });\n    });\n  }\n\n  function handleClickedAddService() {\n    setIsVariations(false);\n    clearInputs();\n    setIsFormOpen(true);\n  }\n\n  async function handleDeleteService(serviceID) {\n    const isAllowed = await isSellerAllowedToModifyAndDeleteService(serviceID);\n\n    if (isAllowed) {\n      if (seller.category === \"nourriture\") await deleteFoodTypeToSeller(serviceID);\n      await deleteServiceOfSeller(serviceID);\n      const services = await getServicesOfCurrentSellerFromDB();\n      setServices(services);\n    }\n  }\n\n  function handleVariationChanged(type, val, key) {\n    let newVariations = [...newService.variations];\n    let newVariation = { ...newService.variations[key]\n    };\n    if (type === \"name\") newVariation.name = val;else if (type === \"price\") newVariation.price = val;\n    newVariations[key] = newVariation;\n    setNewService({ ...newService,\n      variations: newVariations\n    });\n  }\n\n  function handleDeleteVariation(key) {\n    let newVariations = [...newService.variations];\n    newVariations.splice(key, key + 1);\n    setNewService({ ...newService,\n      variations: newVariations\n    });\n    setCurrentDeletingVariation(-1);\n    setIsPopupConfirmDeleteOpened(false);\n  }\n\n  function handleFoodTypeChanged(e) {\n    let newNewService = { ...newService\n    };\n    newNewService.foodType = e.target.value;\n    setNewService(newNewService);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: !isMounted,\n      timeout: 300,\n      classNames: \"pageTransition\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: isMounted,\n      timeout: 300,\n      classNames: \"pageTransition\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prest_Dashboard_Services\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"prest_dashboard_header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Header\",\n            children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n              type: \"big\",\n              font: \"roboto-bold\",\n              value: \"Modifications de vos services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sur cette page, vous pourrez modifier les services que vous aurez cr\\xE9\\xE9s au pr\\xE9alable lors de votre inscription.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 45\n              }, this), \"L'indication de vos services maximales autoris\\xE9s est en lien avec notre programme de parrainage.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 129\n              }, this), \"Pour en savoir plus cliquez-ici\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"servicesListeContainer\",\n              children: [services.map((item, key) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsServiceItem active\",\n                    onClick: () => handleServiceClicked(item),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"serviceItem\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"imgDetailsServiceItem\",\n                        children: /*#__PURE__*/_jsxDEV(Image, {\n                          url: item.images[0].localURL || item.images[0].url\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 348,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"contentDetailsServiceItem\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"title\",\n                          children: item.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [item.variations.length > 0 ? item.variations[0].price : item.price, \",00\\u20AC\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 53\n                    }, this)\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailsServiceItem_buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n                      onClick: () => handleServiceClicked(item),\n                      color: \"grey\",\n                      value: \"Modifier le service\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n                      onClick: () => handleDeleteService(item.id),\n                      color: \"red\",\n                      value: \"Supprimer le service\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 45\n                }, this);\n              }), services.length < 5 && /*#__PURE__*/_jsxDEV(\"label\", {\n                onClick: () => handleClickedAddService(),\n                className: \"label-file\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [services.length, \" / 5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: `addServiceWrapper ${isFormOpen && \"active\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Section0\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              value: \"Type de service:\",\n              type: \"h3\",\n              font: \"roboto-medium\",\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Prest-Step2-Section0_serviceType\",\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                onClick: () => setIsVariations(false),\n                customClass: !isVariations && \"active\",\n                value: \"Service simple\",\n                type: \"h2\",\n                font: \"roboto-medium\",\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Title, {\n                onClick: () => {\n                  newService.variations.length === 0 && setNewService({ ...newService,\n                    variations: [{\n                      name: \"\",\n                      price: 0\n                    }]\n                  });\n                  setIsVariations(true);\n                },\n                customClass: isVariations && \"active\",\n                value: \"Service variable\",\n                type: \"h2\",\n                font: \"roboto-medium\",\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setIsFormOpen(false),\n            className: \"closeIcon\",\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `Prest-Step2-Section1 ${isVariations ? \"noFlex\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                value: \"Intitul\\xE9 du service\",\n                type: \"h2\",\n                font: \"roboto-medium\",\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Le nom de votre offre, par exemple : x5 fleurs de d\\xE9corations de table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formField withoutMargin\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: error.type === \"name\" && \"invalid\",\n                  id: \"serviceName\",\n                  type: \"text\",\n                  value: newService.name,\n                  onChange: e => (setError({\n                    type: \"\",\n                    message: \"\"\n                  }), setNewService({ ...newService,\n                    name: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), !isVariations && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                value: \"Prix de votre service\",\n                type: \"h2\",\n                font: \"roboto-medium\",\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Prix\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formField withoutMargin\",\n                children: /*#__PURE__*/_jsxDEV(NumericInput, {\n                  format: euroFormat,\n                  className: \"form-control\",\n                  value: newService.price,\n                  min: 0,\n                  max: 1000,\n                  step: 20,\n                  precision: 0,\n                  size: 9,\n                  mobile: true,\n                  onChange: value => (setError({\n                    type: \"\",\n                    message: \"\"\n                  }), setNewService({ ...newService,\n                    price: value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), seller.category === \"nourriture\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Section1bis\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              value: \"R\\xE9gime alimentaire\",\n              type: \"h2\",\n              font: \"roboto-medium\",\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              \"aria-label\": \"gender\",\n              name: \"row-radio-buttons-group\",\n              onChange: handleFoodTypeChanged,\n              value: newService.foodType !== undefined ? newService.foodType : \"Aucun\",\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Vegan\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 78\n                }, this),\n                label: \"Vegan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Casher\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 79\n                }, this),\n                label: \"Casher\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Halal\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 78\n                }, this),\n                label: \"Halal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Vegetarien\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 83\n                }, this),\n                label: \"V\\xE9g\\xE9tarien\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Aucun\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 78\n                }, this),\n                label: \"Aucun\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Section2\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              value: \"Description de votre service\",\n              type: \"h2\",\n              font: \"roboto-medium\",\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"D\\xE9crivez au mieux le service que vous proposez au travers de cette offre.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newService.description,\n              onChange: e => setNewService({ ...newService,\n                description: e.target.value\n              }),\n              className: error.type === \"description\" && \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this), isVariations > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Section2bis\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              value: \"Cr\\xE9ation des d\\xE9clinaisons\",\n              type: \"h2\",\n              font: \"roboto-medium\",\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Prest-Step2-Section2bis_variations\",\n              children: newService.variations.map((variation, key) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"variation_header\",\n                    children: [/*#__PURE__*/_jsxDEV(Title, {\n                      value: `Variation ${key}`,\n                      type: \"h3\",\n                      font: \"roboto-medium\",\n                      align: \"left\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => {\n                        setCurrentDeletingVariation(key);\n                        setIsPopupConfirmDeleteOpened(true);\n                      },\n                      color: \"error\",\n                      \"aria-label\": \"delete\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 49\n                    }, this), isPopupConfirmDeleteOpened && currentDeletingVariation === key && /*#__PURE__*/_jsxDEV(BoxConfirm, {\n                      type: \"delete\",\n                      position: \"bottom\",\n                      callback: () => handleDeleteVariation(key),\n                      callbackClose: () => {\n                        setCurrentDeletingVariation(-1);\n                        setIsPopupConfirmDeleteOpened(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Prest-Step2-Section2bis_variation_item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Title, {\n                        value: \"Intitul\\xE9 de la variation\",\n                        type: \"h2\",\n                        font: \"roboto-medium\",\n                        align: \"left\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Le nom de votre variation, par exemple : 6 parts/6 personnes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 482,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"formField withoutMargin\",\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          className: error.type === \"name\" && \"invalid\",\n                          id: \"serviceName\",\n                          type: \"text\",\n                          value: newService.variations[key].name,\n                          onChange: e => handleVariationChanged(\"name\", e.target.value, key)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 101\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"right\",\n                      children: [/*#__PURE__*/_jsxDEV(Title, {\n                        value: \"Prix de la variation\",\n                        type: \"h2\",\n                        font: \"roboto-medium\",\n                        align: \"left\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"formField withoutMargin\",\n                        children: /*#__PURE__*/_jsxDEV(NumericInput, {\n                          format: euroFormat,\n                          className: \"form-control\",\n                          value: newService.variations[key].price,\n                          min: 20,\n                          max: 1000,\n                          step: 1,\n                          precision: 0,\n                          size: 9,\n                          mobile: true,\n                          onChange: value => handleVariationChanged(\"price\", value, key)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: () => setNewService({ ...newService,\n                variations: [...newService.variations, {\n                  name: \"\",\n                  price: 0\n                }]\n              }),\n              color: \"blue\",\n              value: \"Ajouter une variation\",\n              marginTop: \"20px\",\n              classname: \"flex\",\n              iconMUIStart: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Prest-Step2-Section3\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              value: \"Photos du services\",\n              type: \"h2\",\n              font: \"roboto-medium\",\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), (error.type === \"imageSize\" || error.type === \"imageType\" || error.type === \"noPictures\") && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMessage\",\n              children: error.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 123\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Plusieurs photos peuvent \\xEAtre utile pour le client, cela lui permettra de voir votre service plus en d\\xE9tails.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"servicesListeContainer\",\n              children: [newService.images.map((item, key) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => handleDeletePicture(item.localURL || item.url),\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    url: item.localURL || item.url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 158\n                  }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n                    color: \"white\",\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 199\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 80\n                }, this);\n              }), newService.images.length < 3 && /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                className: \"label-file\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/jpeg, image/jpg, image/png\",\n              id: \"file\",\n              className: \"input-file\",\n              type: \"file\",\n              onChange: e => handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Prest-Step2-Section3-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2Mo max par photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Type de fichiers accept\\xE9s : jpeg, jpg, PNG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n                onClick: () => document.getElementById('file').click(),\n                color: \"grey\",\n                value: \"Ajouter une image\",\n                marginTop: \"20px\",\n                disabled: newService.images.length >= 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonSaveOffer\",\n              children: [error.type === \"maxServices\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMessage\",\n                children: error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 66\n              }, this), error.type === \"name\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMessage\",\n                children: error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 59\n              }, this), error.type === \"description\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMessage\",\n                children: error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n                onClick: () => setIsPopupConfirmSaveOpened(true),\n                color: \"green\",\n                value: \"Sauvergarder cette offre\",\n                marginTop: \"20px\",\n                disabled: addingService\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 33\n              }, this), isPopupConfirmSaveOpened && /*#__PURE__*/_jsxDEV(BoxConfirm, {\n                type: \"save\",\n                position: \"top\",\n                callback: () => handleAddService(),\n                callbackClose: () => setIsPopupConfirmSaveOpened(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Prest-Step2-Section4\",\n          children: /*#__PURE__*/_jsxDEV(ButtonLarge, {\n            onClick: () => setStep(1),\n            color: \"orange\",\n            width: \"400px\",\n            value: \"Revenir au tableau de bord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: isServiceAddedCorrectly,\n      timeout: 300,\n      classNames: \"pageTransition\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serviceAddedMessage inDashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Annonce sauvegard\\xE9e avec succ\\xE8s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Prest_Dashboard_Services, \"wIbchjpEsADfKFtKL4517tj/L8Y=\", false, function () {\n  return [useFirebase, useAuth];\n});\n\n_c2 = Prest_Dashboard_Services;\nexport default Prest_Dashboard_Services;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoxConfirm\");\n$RefreshReg$(_c2, \"Prest_Dashboard_Services\");","map":{"version":3,"sources":["F:/My Project/Leo/Nivid/src/components/Prest_Dashboard_Services.js"],"names":["React","useState","useEffect","useAuth","useFirebase","Title","SubTitle","ButtonSmall","ButtonLarge","Image","DeleteIcon","IconButton","AddIcon","NumericInput","useDetectClickOutside","CSSTransition","FaTrashAlt","FaTimes","Loader","Radio","RadioGroup","FormControlLabel","BoxConfirm","type","position","callback","callbackClose","refConfirmBox","onTriggered","initialNewService","name","images","description","price","variations","foodType","id","Prest_Dashboard_Services","setStep","firebaseContext","storage","error","setError","message","services","setServices","pictureTokensToDelete","setPictureTokensToDelete","isFormOpen","setIsFormOpen","isMounted","setIsMounted","newService","setNewService","addingService","setAddingService","isPopupConfirmDeleteOpened","setIsPopupConfirmDeleteOpened","isPopupConfirmSaveOpened","setIsPopupConfirmSaveOpened","currentDeletingVariation","setCurrentDeletingVariation","isServiceAddedCorrectly","setIsServiceAddedCorrectly","isVariations","setIsVariations","seller","addOneSellerService","getServicesOfCurrentSellerFromDB","deleteOldSellerPicture","isSellerAllowedToModifyAndDeleteService","deleteServiceOfSeller","addFoodTypeToSeller","deleteFoodTypeToSeller","then","euroFormat","num","handleChange","e","target","files","size","newURL","URL","createObjectURL","localURL","handleDeletePicture","item","newPictures","i","length","url","token","splice","handleServiceClicked","clearInputs","handleAddService","isAllowed","newServicesList","index","findIndex","service","serviceToUpload","handleImagesFiles","setTimeout","reconstructedService","refDocID","category","undefined","newServiceWithId","window","scrollTo","newServiceImageArray","filter","image","newServiceArray","Math","random","toString","substr","handleUploadFile","newImg","push","Promise","resolve","reject","upload","ref","put","on","snapshot","console","log","child","getDownloadURL","catch","handleClickedAddService","handleDeleteService","serviceID","handleVariationChanged","val","key","newVariations","newVariation","handleDeleteVariation","handleFoodTypeChanged","newNewService","value","map","variation","document","getElementById","click"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../context/userContext'\r\nimport { useFirebase } from \"../assets/base-context\";\r\n\r\nimport Title from './utilities/Title'\r\nimport SubTitle from './utilities/SubTitle'\r\nimport { ButtonSmall, ButtonLarge } from './utilities/Buttons'\r\nimport Image from '../components/utilities/Image'\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutline';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nimport NumericInput from 'react-numeric-input';\r\nimport { useDetectClickOutside } from 'react-detect-click-outside';\r\n\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { FaTrashAlt } from 'react-icons/fa'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nimport Loader from './Loader'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst BoxConfirm = ({ type, position, callback, callbackClose }) => {\r\n    const refConfirmBox = useDetectClickOutside({ onTriggered: callbackClose });\r\n    return <div ref={refConfirmBox} className={`confirmBox ${position}`}>\r\n        <span>\r\n            {type === \"delete\" && \"Confirmation de suprresion d'une variation\"}\r\n            {type === \"save\" && \"Confirmation de sauvegarde\"}\r\n        </span>\r\n        <h2>\r\n            {type === \"delete\" && \"Êtes-vous sûr de vouloir supprimer cette variation ?\"}\r\n            {type === \"save\" && \"Vous n'avez rien oublié ?\"}\r\n        </h2>\r\n        <p>\r\n            {type === \"delete\" && \"Cette action est irréversible\"}\r\n            {type === \"save\" && \"Si jamais... Vous pouvez toujours modifier ce service directement depuis votre dashboard\"}\r\n        </p>\r\n\r\n        <ButtonSmall\r\n            onClick={callback}\r\n            color={type === \"delete\" ? \"red\" : \"green\"}\r\n            value=\"Je confirme\"\r\n            marginTop=\"20px\"\r\n        />\r\n    </div>\r\n}\r\n\r\nconst initialNewService = {\r\n    // category: seller.category,\r\n    name: \"\",\r\n    images: [],\r\n    description: \"\",\r\n    price: 0,\r\n    variations: [],\r\n    foodType: \"Aucun\",\r\n    id: null\r\n}\r\n\r\nconst Prest_Dashboard_Services = ({ setStep }) => {\r\n\r\n    const firebaseContext = useFirebase()\r\n    const storage = firebaseContext.storage()\r\n\r\n    const [error, setError] = useState({ type: \"\", message: \"\" });\r\n\r\n    const [services, setServices] = useState([])\r\n    const [pictureTokensToDelete, setPictureTokensToDelete] = useState([])\r\n    const [isFormOpen, setIsFormOpen] = useState(false)\r\n\r\n    const [isMounted, setIsMounted] = useState(false);\r\n\r\n    const [newService, setNewService] = useState(initialNewService)\r\n\r\n    const [addingService, setAddingService] = useState(false)\r\n\r\n    const [isPopupConfirmDeleteOpened, setIsPopupConfirmDeleteOpened] = useState(false)\r\n    const [isPopupConfirmSaveOpened, setIsPopupConfirmSaveOpened] = useState(false)\r\n    const [currentDeletingVariation, setCurrentDeletingVariation] = useState(-1)\r\n\r\n    const [isServiceAddedCorrectly, setIsServiceAddedCorrectly] = useState(false)\r\n\r\n    const [isVariations, setIsVariations] = useState(false)\r\n\r\n    const { seller,\r\n        addOneSellerService,\r\n        getServicesOfCurrentSellerFromDB,\r\n        deleteOldSellerPicture,\r\n        isSellerAllowedToModifyAndDeleteService,\r\n        deleteServiceOfSeller,\r\n        addFoodTypeToSeller,\r\n        deleteFoodTypeToSeller\r\n    } = useAuth()\r\n\r\n    useEffect(() => {\r\n        getServicesOfCurrentSellerFromDB().then(services => {\r\n            setServices(services)\r\n            setIsMounted(true)\r\n        })\r\n    }, [])\r\n\r\n\r\n    function euroFormat(num) { return num + '€'; }\r\n\r\n    function handleChange(e) {\r\n        const type = e.target.files[0].type\r\n        const size = e.target.files[0].size\r\n        if (type !== \"image/png\" && type !== \"image/jpeg\" && type !== \"image/jpg\") {\r\n            setError({ type: \"imageType\", message: \"Votre fichier n'est ni une image jpeg, jpg ou PNG.\" })\r\n        }\r\n        else if (size > 2000000) {\r\n            setError({ type: \"imageSize\", message: \"Votre image fait plus de 2Mo.\" })\r\n        }\r\n        else {\r\n            const newURL = URL.createObjectURL(e.target.files[0])\r\n            e.target.files[0].localURL = newURL\r\n            setNewService({ ...newService, images: [...newService.images, e.target.files[0]] })\r\n            setError({ type: \"\", message: \"\" })\r\n        }\r\n    }\r\n\r\n    function handleDeletePicture(item) {\r\n        const newPictures = [...newService.images]\r\n        for (var i = 0; i < newPictures.length; i++) {\r\n            if (newPictures[i].localURL === item || newPictures[i].url === item) {\r\n                if (newPictures[i].url === item) {\r\n                    setPictureTokensToDelete([...pictureTokensToDelete, newPictures[i].token])\r\n                }\r\n                newPictures.splice(i, 1);\r\n            }\r\n        }\r\n        setNewService({ ...newService, images: newPictures })\r\n    }\r\n\r\n    function handleServiceClicked(item) {\r\n        setIsFormOpen(true)\r\n\r\n        setIsVariations(item.variations.length > 0 ? true : false)\r\n        if (newService.id === item.id) {\r\n            return\r\n        }\r\n        clearInputs()\r\n        setNewService(item)\r\n    }\r\n\r\n    function clearInputs() {\r\n        setNewService(initialNewService)\r\n        setError({ type: \"\", message: \"\" })\r\n    }\r\n\r\n    async function handleAddService() {\r\n        setIsPopupConfirmSaveOpened(false)\r\n        setAddingService(true)\r\n        if (newService.name.length < 5) {\r\n            setError({ type: \"name\", message: \"Le nom de votre offre doit faire au minimum 5 caractères.\" })\r\n        }\r\n        else if (newService.description.length < 20 || newService.description.length > 300) {\r\n            setError({ type: \"description\", message: \"Votre description doit comporter entre 20 et 300 caractères.\" })\r\n        }\r\n        else if (newService.images.length === 0) {\r\n            setError({ type: \"noPictures\", message: \"Vous devez ajouter au moins une photo de votre service.\" })\r\n        }\r\n        else if (newService.images.length > 3) {\r\n            setError({ type: \"tooMuchPictures\", message: \"Impossible d'ajouter plus de 3 photos au service.\" })\r\n        }\r\n        else {\r\n\r\n            //Si l'id est égal à Null, c'est que le service est nouveau\r\n            //Si l'id n'est pas null, on ne créera pas un nouveau service on modifiera l'actuel\r\n            if (newService.id !== null) {\r\n                const isAllowed = await isSellerAllowedToModifyAndDeleteService(newService.id)\r\n                if (isAllowed) {\r\n                    const newServicesList = [...services]\r\n                    var index = newServicesList.findIndex(service => service.id === newService.id)\r\n                    const serviceToUpload = { ...newService }\r\n                    if (!isVariations) serviceToUpload.variations = []\r\n                    newServicesList[index] = serviceToUpload\r\n\r\n                    const service = await handleImagesFiles(serviceToUpload)\r\n                    setServices(newServicesList)\r\n                    await addOneSellerService(service)\r\n                    clearInputs()\r\n                    setIsServiceAddedCorrectly(true)\r\n                    setTimeout(() => {\r\n                        setIsServiceAddedCorrectly(false)\r\n                    }, 2000)\r\n                }\r\n            }\r\n            else {\r\n\r\n                if (services.length >= 5) {\r\n                    setError({ type: \"maxServices\", message: \"Vous avez déjà atteint le maximum d'offres sur votre boutique.\" })\r\n                }\r\n                else {\r\n                    const reconstructedService = newService\r\n                    reconstructedService.id = services.length\r\n                    if (!isVariations) reconstructedService.variations = []\r\n\r\n                    const service = await handleImagesFiles(reconstructedService)\r\n                    const refDocID = await addOneSellerService(service)\r\n                    if (seller.category === \"nourriture\")\r\n                        await addFoodTypeToSeller(service.foodType !== undefined ? service.foodType : \"Aucun\")\r\n                    const newServiceWithId = { ...service, id: refDocID }\r\n                    setServices([...services, newServiceWithId])\r\n                    clearInputs()\r\n                    setIsServiceAddedCorrectly(true)\r\n                    setTimeout(() => {\r\n                        setIsServiceAddedCorrectly(false)\r\n                    }, 2000)\r\n                }\r\n            }\r\n            setIsFormOpen(false)\r\n            window.scrollTo(0, 0);\r\n        }\r\n        setAddingService(false)\r\n    }\r\n\r\n    async function handleImagesFiles(service) {\r\n        let newServiceImageArray = service.images.filter(image => !image.localURL)\r\n        let newServiceArray = {\r\n            description: service.description,\r\n            id: service.id,\r\n            name: service.name,\r\n            images: newServiceImageArray,\r\n            price: service.price,\r\n            category: seller.category,\r\n            variations: service.variations,\r\n            foodType: service.foodType !== undefined ? service.foodType : \"Aucun\"\r\n        }\r\n\r\n        for (var i = 0; i < service.images.length; i++) {\r\n            if (service.images[i].localURL) {\r\n                const token = Math.random().toString(36).substr(2, 19)\r\n                const url = await handleUploadFile(service.images[i], token)\r\n                let newImg = { url: url, token: token }\r\n                newServiceImageArray.push(newImg)\r\n                newServiceArray.images = newServiceImageArray\r\n                pictureTokensToDelete.length > 0 && deleteOldSellerPicture(pictureTokensToDelete, \"services\")\r\n            }\r\n        }\r\n        return newServiceArray\r\n    }\r\n\r\n    function handleUploadFile(image, token) {\r\n        return new Promise((resolve, reject) => {\r\n            const upload = storage.ref(`services/${token}`).put(image)\r\n            upload.on(\r\n                \"state_changed\", snapshot => { },\r\n                error => {\r\n                    console.log(error)\r\n                }, () => {\r\n                    storage\r\n                        .ref(\"services\")\r\n                        .child(token)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            resolve(url);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error(error)\r\n                            reject(error);\r\n                        })\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    function handleClickedAddService() {\r\n        setIsVariations(false)\r\n        clearInputs()\r\n        setIsFormOpen(true)\r\n    }\r\n\r\n    async function handleDeleteService(serviceID) {\r\n        const isAllowed = await isSellerAllowedToModifyAndDeleteService(serviceID)\r\n        if (isAllowed) {\r\n            if (seller.category === \"nourriture\")\r\n                await deleteFoodTypeToSeller(serviceID)\r\n            await deleteServiceOfSeller(serviceID)\r\n            const services = await getServicesOfCurrentSellerFromDB()\r\n            setServices(services)\r\n        }\r\n    }\r\n\r\n    function handleVariationChanged(type, val, key) {\r\n        let newVariations = [...newService.variations]\r\n        let newVariation = { ...newService.variations[key] }\r\n        if (type === \"name\") newVariation.name = val\r\n        else if (type === \"price\") newVariation.price = val\r\n        newVariations[key] = newVariation\r\n        setNewService({ ...newService, variations: newVariations })\r\n    }\r\n\r\n    function handleDeleteVariation(key) {\r\n        let newVariations = [...newService.variations]\r\n        newVariations.splice(key, key + 1)\r\n        setNewService({ ...newService, variations: newVariations })\r\n        setCurrentDeletingVariation(-1)\r\n        setIsPopupConfirmDeleteOpened(false)\r\n    }\r\n\r\n    function handleFoodTypeChanged(e) {\r\n        let newNewService = { ...newService }\r\n        newNewService.foodType = e.target.value\r\n        setNewService(newNewService)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={!isMounted}\r\n                timeout={300}\r\n                classNames=\"pageTransition\"\r\n                unmountOnExit\r\n            >\r\n                <Loader />\r\n            </CSSTransition>\r\n\r\n            <CSSTransition\r\n                in={isMounted}\r\n                timeout={300}\r\n                classNames=\"pageTransition\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"prest_Dashboard_Services\">\r\n\r\n                    <section className=\"prest_dashboard_header\">\r\n                        <div className=\"Prest-Step2-Header\">\r\n                            <SubTitle type=\"big\" font=\"roboto-bold\" value=\"Modifications de vos services\" />\r\n                            <p>Sur cette page, vous pourrez modifier les services que vous aurez créés au préalable lors de votre\r\n                                inscription.<br />\r\n                                L'indication de vos services maximales autorisés est en lien avec notre programme de parrainage.<br />\r\n                                Pour en savoir plus cliquez-ici</p>\r\n                            <div className=\"servicesListeContainer\">\r\n                                {\r\n                                    services.map((item, key) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <div\r\n                                                    className=\"detailsServiceItem active\"\r\n                                                    onClick={() => handleServiceClicked(item)}\r\n                                                    key={key}\r\n                                                >\r\n                                                    <div className=\"serviceItem\">\r\n                                                        <div className=\"imgDetailsServiceItem\">\r\n                                                            <Image url={item.images[0].localURL || item.images[0].url} />\r\n                                                        </div>\r\n                                                        <div className=\"contentDetailsServiceItem\">\r\n                                                            <p className=\"title\">{item.name}</p>\r\n                                                            <p>{item.variations.length > 0 ? item.variations[0].price : item.price},00€</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"detailsServiceItem_buttons\">\r\n                                                    <ButtonSmall\r\n                                                        onClick={() => handleServiceClicked(item)}\r\n                                                        color=\"grey\"\r\n                                                        value=\"Modifier le service\"\r\n                                                    />\r\n                                                    <ButtonSmall\r\n                                                        onClick={() => handleDeleteService(item.id)}\r\n                                                        color=\"red\"\r\n                                                        value=\"Supprimer le service\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                {services.length < 5 && <label onClick={() => handleClickedAddService()} className=\"label-file\">+</label>}\r\n                            </div>\r\n                            <span>{services.length} / 5</span>\r\n                        </div>\r\n                    </section>\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <section className={`addServiceWrapper ${isFormOpen && \"active\"}`}>\r\n                        <div className=\"Prest-Step2-Section0\">\r\n                            <Title value=\"Type de service:\" type=\"h3\" font=\"roboto-medium\" align=\"left\" />\r\n                            <div className=\"Prest-Step2-Section0_serviceType\">\r\n                                <Title onClick={() => setIsVariations(false)} customClass={!isVariations && \"active\"} value=\"Service simple\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                <Title onClick={() => { newService.variations.length === 0 && setNewService({ ...newService, variations: [{ name: \"\", price: 0 }] }); setIsVariations(true) }} customClass={isVariations && \"active\"} value=\"Service variable\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                            </div>\r\n                        </div>\r\n                        <span onClick={() => setIsFormOpen(false)} className=\"closeIcon\">\r\n                            <FaTimes />\r\n                        </span>\r\n                        <div className={`Prest-Step2-Section1 ${isVariations ? \"noFlex\" : \"\"}`}>\r\n                            <div className=\"left\">\r\n                                <Title value=\"Intitulé du service\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                <p>Le nom de votre offre, par exemple : x5 fleurs de décorations de table</p>\r\n                                <div className=\"formField withoutMargin\">\r\n                                    <input\r\n                                        className={error.type === \"name\" && \"invalid\"}\r\n                                        id=\"serviceName\"\r\n                                        type=\"text\"\r\n                                        value={newService.name}\r\n                                        onChange={(e) => (setError({ type: \"\", message: \"\" }), setNewService({ ...newService, name: e.target.value }))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {!isVariations &&\r\n                                <div className=\"right\">\r\n                                    <Title value=\"Prix de votre service\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                    <p>Prix</p>\r\n                                    <div className=\"formField withoutMargin\">\r\n                                        <NumericInput\r\n                                            format={euroFormat}\r\n                                            className=\"form-control\"\r\n                                            value={newService.price}\r\n                                            min={0}\r\n                                            max={1000}\r\n                                            step={20}\r\n                                            precision={0}\r\n                                            size={9}\r\n                                            mobile\r\n                                            onChange={(value) => (setError({ type: \"\", message: \"\" }), setNewService({ ...newService, price: value }))}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            seller.category === \"nourriture\" &&\r\n                            <div className=\"Prest-Step2-Section1bis\">\r\n                                <Title value=\"Régime alimentaire\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                <RadioGroup\r\n                                    row\r\n                                    aria-label=\"gender\"\r\n                                    name=\"row-radio-buttons-group\"\r\n                                    onChange={handleFoodTypeChanged}\r\n                                    value={newService.foodType !== undefined ? newService.foodType : \"Aucun\"}\r\n                                >\r\n                                    <FormControlLabel value=\"Vegan\" control={<Radio />} label=\"Vegan\" />\r\n                                    <FormControlLabel value=\"Casher\" control={<Radio />} label=\"Casher\" />\r\n                                    <FormControlLabel value=\"Halal\" control={<Radio />} label=\"Halal\" />\r\n                                    <FormControlLabel value=\"Vegetarien\" control={<Radio />} label=\"Végétarien\" />\r\n                                    <FormControlLabel value=\"Aucun\" control={<Radio />} label=\"Aucun\" />\r\n                                </RadioGroup>\r\n                            </div>\r\n\r\n                        }\r\n\r\n                        <div className=\"Prest-Step2-Section2\">\r\n                            <Title value=\"Description de votre service\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                            <p>Décrivez au mieux le service que vous proposez au travers de cette offre.</p>\r\n                            <textarea\r\n                                value={newService.description}\r\n                                onChange={(e) => setNewService({ ...newService, description: e.target.value })}\r\n                                className={error.type === \"description\" && \"invalid\"}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        {isVariations > 0 &&\r\n                            <div className=\"Prest-Step2-Section2bis\">\r\n                                <Title value=\"Création des déclinaisons\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                <div className=\"Prest-Step2-Section2bis_variations\">\r\n                                    {newService.variations.map((variation, key) => {\r\n                                        return <>\r\n                                            <div className=\"variation_header\">\r\n                                                <Title value={`Variation ${key}`} type=\"h3\" font=\"roboto-medium\" align=\"left\" />\r\n                                                <IconButton\r\n                                                    onClick={() => { setCurrentDeletingVariation(key); setIsPopupConfirmDeleteOpened(true) }}\r\n                                                    color=\"error\"\r\n                                                    aria-label=\"delete\"\r\n                                                >\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                                {(isPopupConfirmDeleteOpened && currentDeletingVariation === key) &&\r\n                                                    <BoxConfirm\r\n                                                        type=\"delete\"\r\n                                                        position=\"bottom\"\r\n                                                        callback={() => handleDeleteVariation(key)}\r\n                                                        callbackClose={() => { setCurrentDeletingVariation(-1); setIsPopupConfirmDeleteOpened(false) }}\r\n                                                    />\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"Prest-Step2-Section2bis_variation_item\"><div className=\"left\">\r\n                                                <Title value=\"Intitulé de la variation\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                                <p>Le nom de votre variation, par exemple : 6 parts/6 personnes</p>\r\n                                                <div className=\"formField withoutMargin\">\r\n                                                    <input\r\n                                                        className={error.type === \"name\" && \"invalid\"}\r\n                                                        id=\"serviceName\"\r\n                                                        type=\"text\"\r\n                                                        value={newService.variations[key].name}\r\n                                                        onChange={(e) => handleVariationChanged(\"name\", e.target.value, key)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                                <div className=\"right\">\r\n                                                    <Title value=\"Prix de la variation\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                                                    <div className=\"formField withoutMargin\">\r\n                                                        <NumericInput\r\n                                                            format={euroFormat}\r\n                                                            className=\"form-control\"\r\n                                                            value={newService.variations[key].price}\r\n                                                            min={20}\r\n                                                            max={1000}\r\n                                                            step={1}\r\n                                                            precision={0}\r\n                                                            size={9}\r\n                                                            mobile\r\n                                                            onChange={(value) => handleVariationChanged(\"price\", value, key)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    })}\r\n                                </div>\r\n                                <ButtonSmall\r\n                                    onClick={() => setNewService({ ...newService, variations: [...newService.variations, { name: \"\", price: 0 }] })}\r\n                                    color=\"blue\"\r\n                                    value=\"Ajouter une variation\"\r\n                                    marginTop=\"20px\"\r\n                                    classname=\"flex\"\r\n                                    iconMUIStart={<AddIcon />}\r\n                                />\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"Prest-Step2-Section3\">\r\n                            <Title value=\"Photos du services\" type=\"h2\" font=\"roboto-medium\" align=\"left\" />\r\n                            {(error.type === \"imageSize\" || error.type === \"imageType\" || error.type === \"noPictures\") && <p className=\"errorMessage\">{error.message}</p>}\r\n                            <p>Plusieurs photos peuvent être utile pour le client, cela lui permettra de voir votre service plus en détails.</p>\r\n                            <div className=\"servicesListeContainer\">\r\n                                {newService.images.map((item, key) => { return <div key={key} onClick={() => handleDeletePicture(item.localURL || item.url)}><Image url={item.localURL || item.url} /><FaTrashAlt color={\"white\"} size={32} /></div> })}\r\n                                {newService.images.length < 3 && <label htmlFor=\"file\" className=\"label-file\">+</label>}\r\n                            </div>\r\n\r\n                            <input accept=\"image/jpeg, image/jpg, image/png\" id=\"file\" className=\"input-file\" type=\"file\" onChange={(e) => handleChange(e)} />\r\n                            <div className=\"Prest-Step2-Section3-bottom\">\r\n                                <p>2Mo max par photo</p>\r\n                                <p>Type de fichiers acceptés : jpeg, jpg, PNG</p>\r\n                                <ButtonSmall\r\n                                    onClick={() => document.getElementById('file').click()}\r\n                                    color=\"grey\"\r\n                                    value=\"Ajouter une image\"\r\n                                    marginTop=\"20px\"\r\n                                    disabled={newService.images.length >= 4}\r\n                                />\r\n                            </div>\r\n                            <div className=\"buttonSaveOffer\">\r\n                                {error.type === \"maxServices\" && <p className=\"errorMessage\">{error.message}</p>}\r\n                                {error.type === \"name\" && <p className=\"errorMessage\">{error.message}</p>}\r\n                                {error.type === \"description\" && <p className=\"errorMessage\">{error.message}</p>}\r\n                                <ButtonSmall\r\n                                    onClick={() => setIsPopupConfirmSaveOpened(true)}\r\n                                    color=\"green\"\r\n                                    value=\"Sauvergarder cette offre\"\r\n                                    marginTop=\"20px\"\r\n                                    disabled={addingService}\r\n                                />\r\n                                {isPopupConfirmSaveOpened &&\r\n                                    <BoxConfirm\r\n                                        type=\"save\"\r\n                                        position=\"top\"\r\n                                        callback={() => handleAddService()}\r\n                                        callbackClose={() => setIsPopupConfirmSaveOpened(false)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"divider\"></div>\r\n\r\n                    </section>\r\n                    <div className=\"Prest-Step2-Section4\">\r\n                        <ButtonLarge\r\n                            onClick={() => setStep(1)}\r\n                            color=\"orange\"\r\n                            width=\"400px\"\r\n                            value=\"Revenir au tableau de bord\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n                in={isServiceAddedCorrectly}\r\n                timeout={300}\r\n                classNames=\"pageTransition\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"serviceAddedMessage inDashboard\">\r\n                    <p>Annonce sauvegardée avec succès</p>\r\n                </div>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Prest_Dashboard_Services"]},"metadata":{},"sourceType":"module"}