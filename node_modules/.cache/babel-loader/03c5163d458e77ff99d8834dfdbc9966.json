{"ast":null,"code":"/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n\n    root.SibApiV3Sdk.RequestContactExportCustomContactFilter = factory(root.SibApiV3Sdk.ApiClient);\n  }\n})(this, function (ApiClient) {\n  'use strict';\n  /**\n   * The RequestContactExportCustomContactFilter model module.\n   * @module model/RequestContactExportCustomContactFilter\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>RequestContactExportCustomContactFilter</code>.\n   * Only one of the two filter options (contactFilter or customContactFilter) can be passed in the request. Set the filter for the contacts to be exported.\n   * @alias module:model/RequestContactExportCustomContactFilter\n   * @class\n   */\n\n  var exports = function () {\n    var _this = this;\n  };\n  /**\n   * Constructs a <code>RequestContactExportCustomContactFilter</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/RequestContactExportCustomContactFilter} obj Optional instance to populate.\n   * @return {module:model/RequestContactExportCustomContactFilter} The populated <code>RequestContactExportCustomContactFilter</code> instance.\n   */\n\n\n  exports.constructFromObject = function (data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionForContacts')) {\n        obj['actionForContacts'] = ApiClient.convertToType(data['actionForContacts'], 'String');\n      }\n\n      if (data.hasOwnProperty('actionForEmailCampaigns')) {\n        obj['actionForEmailCampaigns'] = ApiClient.convertToType(data['actionForEmailCampaigns'], 'String');\n      }\n\n      if (data.hasOwnProperty('actionForSmsCampaigns')) {\n        obj['actionForSmsCampaigns'] = ApiClient.convertToType(data['actionForSmsCampaigns'], 'String');\n      }\n\n      if (data.hasOwnProperty('listId')) {\n        obj['listId'] = ApiClient.convertToType(data['listId'], 'Number');\n      }\n\n      if (data.hasOwnProperty('emailCampaignId')) {\n        obj['emailCampaignId'] = ApiClient.convertToType(data['emailCampaignId'], 'Number');\n      }\n\n      if (data.hasOwnProperty('smsCampaignId')) {\n        obj['smsCampaignId'] = ApiClient.convertToType(data['smsCampaignId'], 'Number');\n      }\n    }\n\n    return obj;\n  };\n  /**\n   * Mandatory if neither actionForEmailCampaigns nor actionForSmsCampaigns is passed. This will export the contacts on the basis of provided action applied on contacts as per the list id. * allContacts - Fetch the list of all contacts for a particular list. * subscribed & unsubscribed - Fetch the list of subscribed / unsubscribed (blacklisted via any means) contacts for a particular list. * unsubscribedPerList - Fetch the list of contacts that are unsubscribed from a particular list only. \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForContactsEnum} actionForContacts\n   */\n\n\n  exports.prototype['actionForContacts'] = undefined;\n  /**\n   * Mandatory if neither actionForContacts nor actionForSmsCampaigns is passed. This will export the contacts on the basis of provided action applied on email campaigns. * openers & nonOpeners - emailCampaignId is mandatory. Fetch the list of readers / non-readers for a particular email campaign. * clickers & nonClickers - emailCampaignId is mandatory. Fetch the list of clickers / non-clickers for a particular email campaign. * unsubscribed - emailCampaignId is mandatory. Fetch the list of all unsubscribed (blacklisted via any means) contacts for a particular email campaign. * hardBounces & softBounces - emailCampaignId is optional. Fetch the list of hard bounces / soft bounces for a particular / all email campaign(s). \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum} actionForEmailCampaigns\n   */\n\n  exports.prototype['actionForEmailCampaigns'] = undefined;\n  /**\n   * Mandatory if neither actionForContacts nor actionForEmailCampaigns is passed. This will export the contacts on the basis of provided action applied on sms campaigns. * unsubscribed - Fetch the list of all unsubscribed (blacklisted via any means) contacts for all / particular sms campaigns. * hardBounces & softBounces - Fetch the list of hard bounces / soft bounces for all / particular sms campaigns. \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum} actionForSmsCampaigns\n   */\n\n  exports.prototype['actionForSmsCampaigns'] = undefined;\n  /**\n   * Mandatory if actionForContacts is passed, ignored otherwise. Id of the list for which the corresponding action shall be applied in the filter.\n   * @member {Number} listId\n   */\n\n  exports.prototype['listId'] = undefined;\n  /**\n   * Considered only if actionForEmailCampaigns is passed, ignored otherwise. Mandatory if action is one of the following - openers, nonOpeners, clickers, nonClickers, unsubscribed. The id of the email campaign for which the corresponding action shall be applied in the filter.\n   * @member {Number} emailCampaignId\n   */\n\n  exports.prototype['emailCampaignId'] = undefined;\n  /**\n   * Considered only if actionForSmsCampaigns is passed, ignored otherwise. The id of sms campaign for which the corresponding action shall be applied in the filter.\n   * @member {Number} smsCampaignId\n   */\n\n  exports.prototype['smsCampaignId'] = undefined;\n  /**\n   * Allowed values for the <code>actionForContacts</code> property.\n   * @enum {String}\n   * @readonly\n   */\n\n  exports.ActionForContactsEnum = {\n    /**\n     * value: \"allContacts\"\n     * @const\n     */\n    \"allContacts\": \"allContacts\",\n\n    /**\n     * value: \"subscribed\"\n     * @const\n     */\n    \"subscribed\": \"subscribed\",\n\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\",\n\n    /**\n     * value: \"unsubscribedPerList\"\n     * @const\n     */\n    \"unsubscribedPerList\": \"unsubscribedPerList\"\n  };\n  /**\n   * Allowed values for the <code>actionForEmailCampaigns</code> property.\n   * @enum {String}\n   * @readonly\n   */\n\n  exports.ActionForEmailCampaignsEnum = {\n    /**\n     * value: \"openers\"\n     * @const\n     */\n    \"openers\": \"openers\",\n\n    /**\n     * value: \"nonOpeners\"\n     * @const\n     */\n    \"nonOpeners\": \"nonOpeners\",\n\n    /**\n     * value: \"clickers\"\n     * @const\n     */\n    \"clickers\": \"clickers\",\n\n    /**\n     * value: \"nonClickers\"\n     * @const\n     */\n    \"nonClickers\": \"nonClickers\",\n\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\",\n\n    /**\n     * value: \"hardBounces\"\n     * @const\n     */\n    \"hardBounces\": \"hardBounces\",\n\n    /**\n     * value: \"softBounces\"\n     * @const\n     */\n    \"softBounces\": \"softBounces\"\n  };\n  /**\n   * Allowed values for the <code>actionForSmsCampaigns</code> property.\n   * @enum {String}\n   * @readonly\n   */\n\n  exports.ActionForSmsCampaignsEnum = {\n    /**\n     * value: \"hardBounces\"\n     * @const\n     */\n    \"hardBounces\": \"hardBounces\",\n\n    /**\n     * value: \"softBounces\"\n     * @const\n     */\n    \"softBounces\": \"softBounces\",\n\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\"\n  };\n  return exports;\n});","map":{"version":3,"sources":["F:/My Project/Leo/Nivid/node_modules/sib-api-v3-sdk/src/model/RequestContactExportCustomContactFilter.js"],"names":["root","factory","define","amd","module","exports","require","SibApiV3Sdk","RequestContactExportCustomContactFilter","ApiClient","_this","constructFromObject","data","obj","hasOwnProperty","convertToType","prototype","undefined","ActionForContactsEnum","ActionForEmailCampaignsEnum","ActionForSmsCampaignsEnum"],"mappings":"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","sourcesContent":["/**\n * SendinBlue API\n * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | \n *\n * OpenAPI spec version: 3.0.0\n * Contact: contact@sendinblue.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.SibApiV3Sdk) {\n      root.SibApiV3Sdk = {};\n    }\n    root.SibApiV3Sdk.RequestContactExportCustomContactFilter = factory(root.SibApiV3Sdk.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The RequestContactExportCustomContactFilter model module.\n   * @module model/RequestContactExportCustomContactFilter\n   * @version 8.2.0\n   */\n\n  /**\n   * Constructs a new <code>RequestContactExportCustomContactFilter</code>.\n   * Only one of the two filter options (contactFilter or customContactFilter) can be passed in the request. Set the filter for the contacts to be exported.\n   * @alias module:model/RequestContactExportCustomContactFilter\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>RequestContactExportCustomContactFilter</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/RequestContactExportCustomContactFilter} obj Optional instance to populate.\n   * @return {module:model/RequestContactExportCustomContactFilter} The populated <code>RequestContactExportCustomContactFilter</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionForContacts')) {\n        obj['actionForContacts'] = ApiClient.convertToType(data['actionForContacts'], 'String');\n      }\n      if (data.hasOwnProperty('actionForEmailCampaigns')) {\n        obj['actionForEmailCampaigns'] = ApiClient.convertToType(data['actionForEmailCampaigns'], 'String');\n      }\n      if (data.hasOwnProperty('actionForSmsCampaigns')) {\n        obj['actionForSmsCampaigns'] = ApiClient.convertToType(data['actionForSmsCampaigns'], 'String');\n      }\n      if (data.hasOwnProperty('listId')) {\n        obj['listId'] = ApiClient.convertToType(data['listId'], 'Number');\n      }\n      if (data.hasOwnProperty('emailCampaignId')) {\n        obj['emailCampaignId'] = ApiClient.convertToType(data['emailCampaignId'], 'Number');\n      }\n      if (data.hasOwnProperty('smsCampaignId')) {\n        obj['smsCampaignId'] = ApiClient.convertToType(data['smsCampaignId'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Mandatory if neither actionForEmailCampaigns nor actionForSmsCampaigns is passed. This will export the contacts on the basis of provided action applied on contacts as per the list id. * allContacts - Fetch the list of all contacts for a particular list. * subscribed & unsubscribed - Fetch the list of subscribed / unsubscribed (blacklisted via any means) contacts for a particular list. * unsubscribedPerList - Fetch the list of contacts that are unsubscribed from a particular list only. \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForContactsEnum} actionForContacts\n   */\n  exports.prototype['actionForContacts'] = undefined;\n  /**\n   * Mandatory if neither actionForContacts nor actionForSmsCampaigns is passed. This will export the contacts on the basis of provided action applied on email campaigns. * openers & nonOpeners - emailCampaignId is mandatory. Fetch the list of readers / non-readers for a particular email campaign. * clickers & nonClickers - emailCampaignId is mandatory. Fetch the list of clickers / non-clickers for a particular email campaign. * unsubscribed - emailCampaignId is mandatory. Fetch the list of all unsubscribed (blacklisted via any means) contacts for a particular email campaign. * hardBounces & softBounces - emailCampaignId is optional. Fetch the list of hard bounces / soft bounces for a particular / all email campaign(s). \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForEmailCampaignsEnum} actionForEmailCampaigns\n   */\n  exports.prototype['actionForEmailCampaigns'] = undefined;\n  /**\n   * Mandatory if neither actionForContacts nor actionForEmailCampaigns is passed. This will export the contacts on the basis of provided action applied on sms campaigns. * unsubscribed - Fetch the list of all unsubscribed (blacklisted via any means) contacts for all / particular sms campaigns. * hardBounces & softBounces - Fetch the list of hard bounces / soft bounces for all / particular sms campaigns. \n   * @member {module:model/RequestContactExportCustomContactFilter.ActionForSmsCampaignsEnum} actionForSmsCampaigns\n   */\n  exports.prototype['actionForSmsCampaigns'] = undefined;\n  /**\n   * Mandatory if actionForContacts is passed, ignored otherwise. Id of the list for which the corresponding action shall be applied in the filter.\n   * @member {Number} listId\n   */\n  exports.prototype['listId'] = undefined;\n  /**\n   * Considered only if actionForEmailCampaigns is passed, ignored otherwise. Mandatory if action is one of the following - openers, nonOpeners, clickers, nonClickers, unsubscribed. The id of the email campaign for which the corresponding action shall be applied in the filter.\n   * @member {Number} emailCampaignId\n   */\n  exports.prototype['emailCampaignId'] = undefined;\n  /**\n   * Considered only if actionForSmsCampaigns is passed, ignored otherwise. The id of sms campaign for which the corresponding action shall be applied in the filter.\n   * @member {Number} smsCampaignId\n   */\n  exports.prototype['smsCampaignId'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>actionForContacts</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.ActionForContactsEnum = {\n    /**\n     * value: \"allContacts\"\n     * @const\n     */\n    \"allContacts\": \"allContacts\",\n    /**\n     * value: \"subscribed\"\n     * @const\n     */\n    \"subscribed\": \"subscribed\",\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\",\n    /**\n     * value: \"unsubscribedPerList\"\n     * @const\n     */\n    \"unsubscribedPerList\": \"unsubscribedPerList\"  };\n\n  /**\n   * Allowed values for the <code>actionForEmailCampaigns</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.ActionForEmailCampaignsEnum = {\n    /**\n     * value: \"openers\"\n     * @const\n     */\n    \"openers\": \"openers\",\n    /**\n     * value: \"nonOpeners\"\n     * @const\n     */\n    \"nonOpeners\": \"nonOpeners\",\n    /**\n     * value: \"clickers\"\n     * @const\n     */\n    \"clickers\": \"clickers\",\n    /**\n     * value: \"nonClickers\"\n     * @const\n     */\n    \"nonClickers\": \"nonClickers\",\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\",\n    /**\n     * value: \"hardBounces\"\n     * @const\n     */\n    \"hardBounces\": \"hardBounces\",\n    /**\n     * value: \"softBounces\"\n     * @const\n     */\n    \"softBounces\": \"softBounces\"  };\n\n  /**\n   * Allowed values for the <code>actionForSmsCampaigns</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.ActionForSmsCampaignsEnum = {\n    /**\n     * value: \"hardBounces\"\n     * @const\n     */\n    \"hardBounces\": \"hardBounces\",\n    /**\n     * value: \"softBounces\"\n     * @const\n     */\n    \"softBounces\": \"softBounces\",\n    /**\n     * value: \"unsubscribed\"\n     * @const\n     */\n    \"unsubscribed\": \"unsubscribed\"  };\n\n\n  return exports;\n}));\n\n\n"]},"metadata":{},"sourceType":"script"}