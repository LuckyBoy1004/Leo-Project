{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Boulot\\\\Nivid\\\\src\\\\pages\\\\Invitations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/userContext\"; // context\n\nimport { useHistory } from 'react-router-dom';\nimport { ButtonSmall } from '../components/utilities/Buttons';\n\nconst PaymentConfirm = () => {\n  _s();\n\n  const history = useHistory();\n  const [windowsWidth, setWindowsWidth] = useState(window.innerWidth);\n  const [emails, setEmails] = useState([]);\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isSent, setIsSent] = useState(false);\n  const {\n    user,\n    event,\n    setCurrentStepProcess,\n    sendInBlue_sendInvitations\n  } = useAuth(); // context\n\n  function handleResize(width) {\n    setWindowsWidth(width);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", e => handleResize(window.innerWidth));\n  }, [window.innerWidth]);\n  setCurrentStepProcess(32);\n\n  function handleAddNewEmail() {\n    let containAt = newEmail.indexOf(\"@\");\n    if (containAt < 1) return setError(\"Veuillez entrer un email valide\");\n    let containDot = newEmail.indexOf(\".\");\n    if (containDot <= containAt + 2) return setError(\"Veuillez entrer un email valide\");\n    if (containDot === newEmail.length - 1) return setError(\"Veuillez entrer un email valide\");\n    const newArray = [...emails];\n    newArray.push(newEmail);\n    setEmails(newArray);\n    setNewEmail(\"\");\n    setError(\"\");\n  }\n\n  function handleDeleteEmail(item) {\n    const newArray = [...emails];\n    const index = newArray.indexOf(item);\n\n    if (index > -1) {\n      newArray.splice(index, 1);\n    }\n\n    setEmails(newArray);\n  }\n\n  async function handleSendInvitations() {\n    const req = await sendInBlue_sendInvitations(emails, message, user, event);\n\n    if (req === true) {\n      setIsSent(true);\n      history.push(\"/dashboard\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invitationsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerInvitations\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Invitations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ajoutez les personnes que vous souhaitez inviter \\xE0 votre \\xE9v\\xE8nement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentInvitations\",\n        children: !isSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emailsBlocInvitations\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Emails des invit\\xE9(e)s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayEmailsInvitations\",\n              children: emails.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item, /*#__PURE__*/_jsxDEV(\"p\", {\n                    onClick: () => handleDeleteEmail(item),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 60\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formField\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: newEmail,\n                onChange: e => setNewEmail(e.target.value),\n                type: \"text\",\n                placeholder: \"Email de l'invit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddNewEmail(),\n                children: \"Ajouter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMessage\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageInvitations\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Message de l'invitation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: message,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSendInvitations(),\n              children: \"Envoyer les invitations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Merci, vos invitations ont \\xE9t\\xE9 envoy\\xE9es.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => history.push(\"/dashboard\"),\n            color: \"orange\",\n            value: \"Revenir au tableau de bord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentConfirm, \"kFiZz6rafHcxIN80j+Q78ZknX4Y=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = PaymentConfirm;\nexport default PaymentConfirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentConfirm\");","map":{"version":3,"sources":["C:/Users/Home/Desktop/Boulot/Nivid/src/pages/Invitations.js"],"names":["React","useState","useEffect","useAuth","useHistory","ButtonSmall","PaymentConfirm","history","windowsWidth","setWindowsWidth","window","innerWidth","emails","setEmails","newEmail","setNewEmail","error","setError","message","setMessage","isSent","setIsSent","user","event","setCurrentStepProcess","sendInBlue_sendInvitations","handleResize","width","addEventListener","e","handleAddNewEmail","containAt","indexOf","containDot","length","newArray","push","handleDeleteEmail","item","index","splice","handleSendInvitations","req","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/userContext\"; // context\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { ButtonSmall } from '../components/utilities/Buttons'\r\n\r\nconst PaymentConfirm = () => {\r\n\r\n    const history = useHistory()\r\n    const [windowsWidth, setWindowsWidth] = useState(window.innerWidth)\r\n    const [emails, setEmails] = useState([])\r\n    const [newEmail, setNewEmail] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [isSent, setIsSent] = useState(false)\r\n\r\n    const { user, event, setCurrentStepProcess, sendInBlue_sendInvitations } = useAuth() // context\r\n\r\n    function handleResize(width) {\r\n        setWindowsWidth(width)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", (e) => handleResize(window.innerWidth))\r\n    }, [window.innerWidth])\r\n\r\n    setCurrentStepProcess(32)\r\n\r\n    function handleAddNewEmail() {\r\n        \r\n        let containAt = newEmail.indexOf(\"@\")\r\n        if (containAt < 1) return setError(\"Veuillez entrer un email valide\")\r\n\r\n        let containDot = newEmail.indexOf(\".\")\r\n        if (containDot <= containAt + 2) return setError(\"Veuillez entrer un email valide\")\r\n\r\n\r\n        if (containDot === newEmail.length - 1) return setError(\"Veuillez entrer un email valide\")\r\n\r\n            const newArray = [...emails]\r\n            newArray.push(newEmail)\r\n            setEmails(newArray)\r\n            setNewEmail(\"\")\r\n            setError(\"\")\r\n    }\r\n\r\n    function handleDeleteEmail(item) {\r\n        const newArray = [...emails]\r\n        const index = newArray.indexOf(item);\r\n        if (index > -1) {\r\n            newArray.splice(index, 1);\r\n        }\r\n        setEmails(newArray)\r\n    }\r\n\r\n    async function handleSendInvitations() {\r\n        const req = await sendInBlue_sendInvitations(emails, message, user, event)\r\n        if (req === true) {\r\n            setIsSent(true)\r\n            history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"invitationsContainer\">\r\n                <div className=\"headerInvitations\">\r\n                    <h2>Invitations</h2>\r\n                    <p>Ajoutez les personnes que vous souhaitez inviter à votre évènement</p>\r\n                </div>\r\n                <div className=\"contentInvitations\">\r\n                    {!isSent ?\r\n                        <>\r\n                            <div className=\"emailsBlocInvitations\">\r\n                                <h3>Emails des invité(e)s</h3>\r\n                                <div className=\"displayEmailsInvitations\">\r\n                                    {emails.map(item => {\r\n                                        return <span>{item}<p onClick={() => handleDeleteEmail(item)}>X</p></span>\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"formField\">\r\n                                    <input value={newEmail} onChange={(e) => setNewEmail(e.target.value)} type=\"text\" placeholder=\"Email de l'invité\" />\r\n                                    <button onClick={() => handleAddNewEmail()}>Ajouter</button>\r\n                                </div>\r\n                                {error.length > 0 &&\r\n                                    <p className=\"errorMessage\">{error}</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"messageInvitations\">\r\n                                <h3>Message de l'invitation</h3>\r\n                                <textarea value={message} onChange={(e) => setMessage(e.target.value)} />\r\n                                <button onClick={() => handleSendInvitations()}>Envoyer les invitations</button>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <p>Merci, vos invitations ont été envoyées.</p>\r\n                            <ButtonSmall\r\n                                onClick={() => history.push(\"/dashboard\")}\r\n                                color=\"orange\"\r\n                                value=\"Revenir au tableau de bord\"\r\n                            />\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentConfirm;\r\n"]},"metadata":{},"sourceType":"module"}